[ { "title": "What are HTTP Methods？Which to use and How to use them correctly?", "url": "/posts/http-methods-which-to-use-and-how-to-use-them-correctly/", "categories": "API Design", "tags": "restful api, api, http", "date": "2021-04-04 20:00:00 +0800", "snippet": "這篇文章主要討論幾個常見的HTTP methods，說明他們分別是否具有哪些特性(Safe、Idempotent)，以及他們應該要怎麼使用，比較會是符合大家的期待．當然寫server的人可以不照著慣例走，不過如此一來，使用這個API的user可能會很不高興，而這個user可以是公司的客戶，可能是公司內部的其他團隊，也可能是未來的自己！Outline HTTP Request message格式 常見的methods，以及其特性 分別介紹各個method的用法HTTP Request message一個general的HTTP request message如下：&amp;lt;me..." }, { "title": "A Linux HTTP client tool — curl的介紹及用法", "url": "/posts/linux-http-client-tool-curl-usage/", "categories": "Networking", "tags": "http, linux, curl", "date": "2021-03-24 20:00:00 +0800", "snippet": "做為一個HTTP client，想要對server發出請求，有許多做法，可能是寫一個python script 或使用其他任何語言，也可以是使用postman這樣的工具，或者是直接在command line上或shell script中使用curl指令．當你想要快速地測試一下某個API，或是explore別人的HTTP service時，直接使用curl是還蠻方便的！甚至直接用shell script來寫爬蟲了！Outline HTTP Request message Curl 的許多參數及用法 如何知道自己curl有沒有寫對 其他常見搭配的用法及使用情境HTTP Request..." }, { "title": "HTTP 簡介，以及使用telnet、nc、curl等指令來探索", "url": "/posts/http-introduction-telnet-nc-curl/", "categories": "Networking", "tags": "http, linux, curl, nc, telnet", "date": "2021-03-24 20:00:00 +0800", "snippet": "在網路的世界裡，HTTP扮演著一個重要角色，當你打開Instagram看著無以計數的照片、打開Youtube看看影片、在google上搜尋著你想要知道的答案、瀏覽著別人的網站文章，這些都是HTTP負責把上述的這些照片、影片、文字、等檔案資源從別處的伺服器搬到你的裝置裡，可能是你的手機、平板或是電腦．HTTP在OSI模型中，是屬於應用層(Application layer)裡的一個通訊協定，透過傳輸層(Transport layer)的TCP來傳輸資料．關於application layer在整個分層架構中扮演什麼樣的角色，可以參考我之前寫的文章: [Networking]Applicat..." }, { "title": "[Networking]Application Layer Overview，什麼是Socket?", "url": "/posts/networking-application-layer-overview-what-is-socket/", "categories": "Networking", "tags": "linux, socket, tcp, udp", "date": "2020-05-05 20:00:00 +0800", "snippet": "Process communication上次講過了網路的分層架構之後，接下來要來關注application layer，這一層就是我們應用程式所在的地方，應用程式可能是網頁瀏覽器、電子信箱、Skype等等，每種不同的應用程式會有他們自己的通訊協定，規定應用程式之間該如何交換資料，以及資料的格式，常見的協定例如是HTTP、FTP、DNS等等．那application layer的process們之間要怎麼互相通訊呢？就是要利用transport layer所提供的服務．What is socket?Application layer的process必須使用transport layer所..." }, { "title": "什麼是網路？網路的組成及網路服務供應商 ISP", "url": "/posts/what-is-networking-and-isp/", "categories": "Networking", "tags": "networking, ISP", "date": "2020-04-04 20:00:00 +0800", "snippet": "網路，可能是人類最大的工程成就之一，如今有數十億的人透過網路連接，在幾秒鐘之內就能夠互相通訊、完成某種任務，各種裝置互相連結，包括伺服器，個人桌上型電腦、平板、手機、未來還會有更多樣的things加入，例如車子、家電、各種感測器 ，等等．如此巨大的工程，大規模的全世界的共同合作，到底是如何做到的？工程架構的決定、協議的制定都值得去借鏡學習．網路的組成網路連接了世界上數十億的裝置，這些連上網路的裝置就稱為hosts, end-systems，而網路本身由communocation links及packets switches組成，links就是指電話線呀、同軸電纜、光纖、電磁波頻譜這些實際..." }, { "title": "什麼是message queue? 優點及使用場景", "url": "/posts/message-queue-advantages-use-cases/", "categories": "Web Development", "tags": "message queue", "date": "2019-12-13 20:00:00 +0800", "snippet": "在大型網頁應用程式系統中，當我們的服務越來越多，服務之間就需要溝通，透過http restful api，想必大家都一定遇過，或許或多或少也聽過使用message queue，那到底它是什麼？為什麼要用它？以及跟restful api有何不同的使用場景呢？什麼是message queue?顧名思義，就是有個queue，訊息先入先出( FIFO )，基本上就是提供一個讓不同process間通訊的方式( asynchronous messaging )，會有產生訊息的producer，及消耗處理訊息的consumer．為何使用？為什麼要使用message queue呢？ 他能帶給我們哪些好處..." }, { "title": "快速擁有一個Asynchronous Task Queue，使用Redis and Kue.js", "url": "/posts/asynchronous-task-queue-using-redis-and-kue-js/", "categories": "Web Development", "tags": "message queue, node.js, redis", "date": "2019-10-30 20:00:00 +0800", "snippet": "這是篇教你如何在node.js環境下，快速擁有一個Task queue的tutorial，如果想了解什麼是message queue，以及為什麼跟什麼時候要使用它，可以參考我的另外一篇文章!Outline 部署Redis，使用Docker，在本地起一台Redis 介紹Kue.js部署Redis先準備一個shell script run_redis.sh ，記錄下docker指令，以便之後繼續使用，內容指令如下：#!/bin/shdocker run \\ -d \\ -p 6379..." }, { "title": "[Google Sheet]我如何製作進度表", "url": "/posts/google-sheet-track-progress/", "categories": "GoogleSheet", "tags": "google sheet, sparkline", "date": "2019-08-14 20:00:00 +0800", "snippet": "追蹤每項任務到目前為止的進度，或每段時間(每天、每個禮拜、或每個月)的努力情況首先先把任務跟時間輸入進去，如下圖: 時間只要輸入兩格就可以了，點住右下角的小藍點往右拉，就會補上一樣間距的時間，也就是說那兩格如果是差一天，之後每一格都會差一天，一個禮拜、一個月亦然． 代表每項任務需要完成的單位，簡單用數字量化表示，比如一堂課有10週的課程，就輸入10． 每個時段，完成某個任務多少單位，就填在這個地方． C4那格裡的公式是=sum(D4:Z4)/B4，就是簡單地將同個任務右邊的每個時段完成的單位(D4:Z4)加起來，再除以Total..." }, { "title": "利用Docker建立PostgreSQL開發環境", "url": "/posts/docker-postgres-dev-environment/", "categories": "Web Development", "tags": "docker, postgres", "date": "2018-07-25 12:19:15 +0800", "snippet": "首先先將需要的configuration variable放到環境變數裏，在這裡就是我們的PostgreSQL database server要起在哪一個port，user，password，db等等，準備好你的 dev.env檔案如下，然後執行 . ./dev.envexport PG_PORT=5432export PG_USER=adminexport PG_PWD=secretpwd再來是一個shell script run_postgres.sh ，記錄下docker指令，以便之後繼續使用#!/bin/shdocker run ..." }, { "title": "使用Node.js + Express整合Line Notify通知服務", "url": "/posts/express-line-notify-service/", "categories": "Web Development", "tags": "express, node.js, line notify, middleware", "date": "2017-12-28 20:00:00 +0800", "snippet": "快速簡單地使用一個express的middleware完成line notify的oauth2流程，取得access_token來做後續的消息推送使用line notify可以簡單地讓網站開發者推送訊息到使用者的line裡，雖不像line bot可以跟使用者做更多的互動，但如果只是要單方面的的發送訊息，使用line notify就足矣，而且還不像line bot的push api要收費，這個不用錢～登入流程Line notify的流程大致來說是這樣的: GET https://notify-bot.line.me/oauth/authorize 帶著你的client ..." } ]
