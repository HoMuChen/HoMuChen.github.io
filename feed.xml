<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-tw"><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://homuchen.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://homuchen.com/" rel="alternate" type="text/html" hreflang="zh-tw" /><updated>2021-08-07T17:18:48+08:00</updated><id>https://homuchen.com/feed.xml</id><title type="html">HoMuChen</title><subtitle>Hi! This is HoMuchen, 陳河穆. I am a software engineer working at Largitdata now. This is where I record whatever I learned.</subtitle><entry><title type="html">[讀書筆記] 金錢心理學: 打破你對金錢的迷思，學會聰明花費</title><link href="https://homuchen.com/posts/book-note-money-psychology/" rel="alternate" type="text/html" title="[讀書筆記] 金錢心理學: 打破你對金錢的迷思，學會聰明花費" /><published>2021-08-04T22:30:00+08:00</published><updated>2021-08-04T22:30:00+08:00</updated><id>https://homuchen.com/posts/book-note-money-psychology</id><content type="html" xml:base="https://homuchen.com/posts/book-note-money-psychology/">&lt;p&gt;生而為人，而不是一部機器人，我們有情緒，我們有人性而不是聖人，我們懶惰，喜歡走捷徑，有各種誤判及偏見，
我們的認知有限制，腦袋的容量非常有限，我們短視近利，喜歡立即得到獎賞及滿足，
我們有各式各樣的思考、認知、感覺進而有了相對應的行為，這些就是心理學在研究的事．&lt;/p&gt;

&lt;p&gt;當這些人的天性碰上了金錢，我們是否能做出好的經濟決策呢？會不會當了許久的冤大頭而不自知，
或是被誘惑引導到花了一些本來不會花的錢，該如何聰明的花費、花的剛好、花的開心，
就是金錢心理學這本書要探討的內容．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/dollars-and-sense-1.jpg&quot; alt=&quot;book: Dollards and Sense&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;基本原則-機會成本&quot;&gt;基本原則: 機會成本&lt;/h1&gt;

&lt;p&gt;一顆蘋果跟一顆橘子給你選，你要哪個？對大部分的人來說，這都不會是個非常困難的選擇，但如果是一顆蘋果50元，跟一顆橘子10元呢？
感覺是不是變困難了~&lt;/p&gt;

&lt;p&gt;這是因為機會成本變複雜了的關係，在第一個情況中，如果你選擇了蘋果只需要放棄橘子，機會成本只有蘋果或橘子，
但在後者，如果你選擇了蘋果，你的機會成本可能是任何50元可以買到的東西，可能是五顆橘子、一杯飲料、一個漢堡、
兩本筆記本、好多隻筆、等等等無限的可能～&lt;/p&gt;

&lt;p&gt;所以當一件事涉及到了金錢的時候，就會變得更為複雜，最理想的情況是，我們在做決策時必須考慮到所有的機會成本，
但這既困難又不太實際，我們不可能再得到想到所有可能的資訊之後才下決定，
往往我們會被其他各種心理因素給左右，以下就一一來看吧！&lt;/p&gt;

&lt;h1 id=&quot;相對性&quot;&gt;相對性&lt;/h1&gt;

&lt;h2 id=&quot;艾賓浩斯錯覺&quot;&gt;艾賓浩斯錯覺&lt;/h2&gt;
&lt;p&gt;首先我先來看一張圖，大家會覺得兩個在中間的橘色圓形圖案，哪一個比較大呢？
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/dollars-and-sense-2.jpg&quot; alt=&quot;ebbinghaus illusion&quot; /&gt;
是否會覺得右邊的比較大呢？但其實是一樣的! 這就是艾賓浩斯錯覺，是對相對大小感知的一種視力錯覺．&lt;/p&gt;

&lt;h2 id=&quot;金錢的相對大小&quot;&gt;金錢的相對大小&lt;/h2&gt;
&lt;p&gt;所以我們的大腦這種對相對大小的感知，也一樣會應用到金錢上，先來看一個情境:&lt;/p&gt;

&lt;p&gt;假如今天你想要買一雙鞋，要價2000元，然後店員跟你說，再走路五分鐘的路程之外有一家分店，
只要1800，那你會去另一個店買嗎？
再來，今天假設你要買的的是一台電視，要價20000，然後店員也跟你說，走路五分鐘的路程之外有一家分店，
只要19800，那你會去另一個店買嗎？&lt;/p&gt;

&lt;p&gt;我想有人在第一種情況會選擇去另一家店，而買電視時卻不會，但一樣都是五分鐘路程省200，照理說兩種的選擇應該要一樣才是呀～
在這裡就是對相對大小的認知偷偷溜進了我們的判斷之中，一樣的200塊，相對於2000感覺省了不少，但相對於20000，好像就沒那麼多了．&lt;/p&gt;

&lt;p&gt;另外還有許多地方，像是買車時，推銷員建議只要再加多少錢，就可以升級某某配件;
或是在各種商店的收銀櫃台上的小物，相較於你全部買的東西，再多花個幾十塊買一些零食好像也沒什麼;以及在高級餐廳裡開一瓶高價的紅酒，
這些可能都是商人利用了相對性而促使你做了原先你不會做的交易．&lt;/p&gt;

&lt;h2 id=&quot;誘餌&quot;&gt;誘餌&lt;/h2&gt;

&lt;p&gt;我們人類喜歡比較，那也無可厚非，因為有時不能比較的話，時常無法做出決定，比如說要你對一堂線上課程出價、一顆花椰菜要多少錢、
500公克的牛肉要多少錢，如果沒有其他資訊，往往不知道改怎麼定價，所以有時商人為了讓你更容易做出決定，故意給你可以比較的內容，
讓你覺得好像賺到了，比如說原價1000，今天特價600！&lt;/p&gt;

&lt;p&gt;我們可以看看經濟學人雜誌是怎樣做的，訂閱的選項有三種：線上版、印刷版、線上加印刷版，定價分別為59美元、125美元、125美元，
什麼？！單純印刷版跟線上版加印刷版都一樣只要125美元，傻子才會只訂印刷版．沒錯！確實沒有人是傻子，雙訂閱的人數佔了84%．&lt;/p&gt;

&lt;p&gt;現在我們把傻瓜選項拿掉，只有線上版及雙訂閱，結果選擇雙訂閱的人只剩32%！加上一個無關緊要的選項，竟然讓大家選擇了更高價的選項，
這是因為在比較單純印刷版及雙訂閱的時候，一樣的價錢，雙訂閱明顯優於印刷版，有東西可以比較的時候，我們人類就是比較開心，覺得賺到！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/dollars-and-sense-3.jpg&quot; alt=&quot;The Econimics: Bait&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;心理帳戶&quot;&gt;心理帳戶&lt;/h1&gt;

&lt;h1 id=&quot;避免痛苦&quot;&gt;避免痛苦&lt;/h1&gt;

&lt;h1 id=&quot;定錨效應&quot;&gt;定錨效應&lt;/h1&gt;

&lt;h1 id=&quot;稟賦效應&quot;&gt;稟賦效應&lt;/h1&gt;

&lt;h1 id=&quot;期望公平&quot;&gt;期望公平&lt;/h1&gt;

&lt;h1 id=&quot;太在意價格&quot;&gt;太在意價格&lt;/h1&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;</content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="books" /><category term="finance" /><category term="psychology" /><summary type="html">生而為人，而不是一部機器人，我們有情緒，我們有人性而不是聖人，我們懶惰，喜歡走捷徑，有各種誤判及偏見， 我們的認知有限制，腦袋的容量非常有限，我們短視近利，喜歡立即得到獎賞及滿足， 我們有各式各樣的思考、認知、感覺進而有了相對應的行為，這些就是心理學在研究的事．</summary></entry><entry><title type="html">[Google Sheet]我如何利用Google表單來記帳</title><link href="https://homuchen.com/posts/google-sheet-how-to-do-bookkeeping/" rel="alternate" type="text/html" title="[Google Sheet]我如何利用Google表單來記帳" /><published>2021-07-31T22:30:00+08:00</published><updated>2021-07-31T22:30:00+08:00</updated><id>https://homuchen.com/posts/google-sheet-how-to-do-bookkeeping</id><content type="html" xml:base="https://homuchen.com/posts/google-sheet-how-to-do-bookkeeping/">&lt;p&gt;利用Google sheet及Google form來客製化自己的記帳App，表單的連結可以放到手機桌面，就像一般App一樣，
每次花費的紀錄，將儲存在試算表裡，後續可以做任何你想要的統計分析．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/google-sheet-bookkeeping-1.jpg&quot; alt=&quot;google sheet bookkeeping&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;建立表單&quot;&gt;建立表單&lt;/h1&gt;

&lt;p&gt;首先建立一個新的表單，接著點選&lt;strong&gt;工具&lt;/strong&gt; -&amp;gt; &lt;strong&gt;建立表單&lt;/strong&gt;，就會在新分頁裡跑出一個空白表單，
接著我們就要編輯他的內容．&lt;/p&gt;

&lt;h1 id=&quot;編輯表單&quot;&gt;編輯表單&lt;/h1&gt;

&lt;p&gt;命名表單，隨便你要打什麼，這裡就打個”記帳”，接下來的每個問題可以是簡答、單選題、多選題&lt;/p&gt;

&lt;p&gt;這裡的第一個問題的題目就是項目，也就是我們花了什麼錢，題目的種類選簡答:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/google-sheet-bookkeeping-2.jpg&quot; alt=&quot;google form question 1: item&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二題題目題目為金額，也是簡答，填表單時記得填上數字&lt;/p&gt;

&lt;p&gt;第三題題目題目為種類，選項就你開心怎麼分類～ 這裡的例子是食衣住行娛樂跟其他&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/google-sheet-bookkeeping-3.jpg&quot; alt=&quot;google form question 3: types&quot; /&gt;&lt;/p&gt;

&lt;p&gt;後面你想要加上任何題目都可以&lt;/p&gt;

&lt;h1 id=&quot;將表單加入主畫面&quot;&gt;將表單加入主畫面&lt;/h1&gt;

&lt;p&gt;完成表單後，點選右上角的&lt;strong&gt;傳送&lt;/strong&gt;，就可以在你的手機瀏覽器中，打開這個網址．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/google-sheet-bookkeeping-4.jpg&quot; alt=&quot;google form question 3: types&quot; /&gt;&lt;/p&gt;

&lt;p&gt;點選右上角表單裡面的&lt;strong&gt;加到主畫面&lt;/strong&gt;，就能像是Appㄧ樣，在桌面有個小圖示囉～&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/google-sheet-bookkeeping-5.jpg&quot; alt=&quot;google form question 3: add to desktop&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;p&gt;建立好表單之後，每次要花錢的時候，就打開手機，送出一個表單就能記帳啦．&lt;/p&gt;

&lt;p&gt;在&lt;a href=&quot;https://www.books.com.tw/products/0010785897&quot;&gt;&lt;strong&gt;金錢心理學&lt;/strong&gt;&lt;/a&gt;也有說到，我們人類天生會避免痛苦，
而付錢就是一種痛苦，所以商人會有許多方法來讓我們忘記痛苦，不小心就花太多錢，
比如預付、後付、信用卡、一鍵購物，讓花錢變得越方便，越無痛，來使得我們花更多．&lt;/p&gt;

&lt;p&gt;所以記帳這行為，不僅是用來追蹤我們消費狀況的一個工具，說不定也能讓我們減少不必要的花費，每次花錢時都會清楚地感受到錢噴出去的感覺，
哪天更可能因為懶得拿出手機來記，就不花錢了呢～&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="Google Sheet" /><category term="finance" /><category term="google sheet" /><category term="google form" /><category term="books" /><summary type="html">利用Google sheet及Google form來客製化自己的記帳App，表單的連結可以放到手機桌面，就像一般App一樣， 每次花費的紀錄，將儲存在試算表裡，後續可以做任何你想要的統計分析．</summary></entry><entry><title type="html">[讀書筆記] 習慣致富 人生實踐版</title><link href="https://homuchen.com/posts/book-notes-effort-less-wealth/" rel="alternate" type="text/html" title="[讀書筆記] 習慣致富 人生實踐版" /><published>2021-07-24T22:30:00+08:00</published><updated>2021-07-24T22:30:00+08:00</updated><id>https://homuchen.com/posts/book-notes-effort-less-wealth</id><content type="html" xml:base="https://homuchen.com/posts/book-notes-effort-less-wealth/">&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/rich-habit-1.jpg&quot; alt=&quot;book: Effort-less Wealth&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;簡介&quot;&gt;簡介&lt;/h1&gt;

&lt;p&gt;這本書的第一章到第十六章，作者講述了兩對夫婦的故事，從交往、訂婚、結婚、蜜月，講到租房、買房、小孩教育、生活中的各個面向，
看他們在面對所有財務決策時，如何做不同的選擇，而這些習慣，經過了時間了累積，到最後產生了巨大的差別！&lt;/p&gt;

&lt;p&gt;透過故事，像是看小說一樣，更容易地會去感受到那些習慣的重要，那對底是哪些習慣呢～作者在本書後面的22章一一闡述:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;擁有好習慣，人生是彩色的；擁有壞習慣，人生是黑白的&lt;/li&gt;
  &lt;li&gt;慎選人生伴侶&lt;/li&gt;
  &lt;li&gt;避免欲望型消費&lt;/li&gt;
  &lt;li&gt;節儉，但不小氣&lt;/li&gt;
  &lt;li&gt;避免隨意購物&lt;/li&gt;
  &lt;li&gt;成為自己的人生設計師──建構藍圖或計畫&lt;/li&gt;
  &lt;li&gt;持續投資你的儲蓄存款&lt;/li&gt;
  &lt;li&gt;謹慎投資&lt;/li&gt;
  &lt;li&gt;讓你的錢各自歸位&lt;/li&gt;
  &lt;li&gt;勿陷入「生活方式升級心理」，勿將你的生活加大升級&lt;/li&gt;
  &lt;li&gt;保持心胸開放，別讓偏見影響你的財務決定&lt;/li&gt;
  &lt;li&gt;結交有儲蓄習慣的朋友&lt;/li&gt;
  &lt;li&gt;為你心中最重要的東西儲蓄&lt;/li&gt;
  &lt;li&gt;金錢等於自由&lt;/li&gt;
  &lt;li&gt;財富自由的首要條件是身體健康&lt;/li&gt;
  &lt;li&gt;創造多元收入金流&lt;/li&gt;
  &lt;li&gt;富裕不只是金錢富裕──七種富裕類型&lt;/li&gt;
  &lt;li&gt;變有錢並非單一事件&lt;/li&gt;
  &lt;li&gt;好目標 V.S. 壞目標&lt;/li&gt;
  &lt;li&gt;好習慣帶來好運，壞習慣帶來厄運&lt;/li&gt;
  &lt;li&gt;財富消除五十八%的人生問題（與壓力）&lt;/li&gt;
  &lt;li&gt;財富遊戲計畫&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;心得感想&quot;&gt;心得感想&lt;/h1&gt;

&lt;p&gt;或許可能會覺得這些東西都是老生常談，陳腔濫調，但就像伏爾泰說過的&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Common sense is not so common&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在我們日常生活中，是否這些習慣對富人來說是common sense，但對我們卻不是，或者是我們知道他是簡單的常識，
卻沒有落實到生活當中，使他們變得平常，透過這次的閱讀，可以檢視自己有哪些是做得不好的部份．&lt;/p&gt;

&lt;p&gt;不過在這本書裡，對於每一個原則及習慣，講的篇幅有限，我覺得可以透過其他的資源來加深學習:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;習慣:&lt;/strong&gt; 習慣這兩個字就出現在書名當中，可以知道它有多重要，造就現在我們的狀態的，正是過往以來我們所有的所作所為，
而我們在過去的每個當下所做的選擇、所做的行為，絕大部分並不是我們有意識的，而是無意識的習慣！&lt;/p&gt;

    &lt;p&gt;試想從我們早上醒來，睜開眼睛第一件事是拿起手機賴在床上滑，還是整理床鋪、冥想;早餐是隨便吃吃，還是有注重均衡營養;
到了工作場所，是先想好今天最重要的任務，還是開始瞎忙;下班之後是躺在沙發上看電視，還是去運動．&lt;/p&gt;

    &lt;p&gt;我們不會無時無刻都在努力地做選擇，而是讓習慣驅動著我們，而&lt;a href=&quot;https://www.books.com.tw/products/0010822522&quot;&gt;&lt;strong&gt;原子習慣&lt;/strong&gt;&lt;/a&gt;這本書，
說明了習慣的機制，教我們如何去培養好習慣、除去壞習慣，而不是每天依靠意志力來控制自己，而最後又筋疲力盡地失敗．&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;人際關係:&lt;/strong&gt; &lt;a href=&quot;https://www.books.com.tw/products/0010849837&quot;&gt;&lt;strong&gt;人性的弱點&lt;/strong&gt;&lt;/a&gt;，經典．&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;睡覺:&lt;/strong&gt; &lt;a href=&quot;https://www.books.com.tw/products/0010813161&quot;&gt;&lt;strong&gt;為什麼要睡覺&lt;/strong&gt;&lt;/a&gt;，如果有一種產品，可以讓你記憶力變好、更具創造力及生產力、
降低罹癌機率、心情更好、走出傷痛、變美麗、皮膚變好、變苗條，那你願意花多錢買這產品呢～一萬？不用！五千？也不用！
免錢的啦～～只要你每天晚上好好地去睡覺就有了！為什麼要睡、要如何睡？比爾蓋茲也推薦大家看看這本書．&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;運動:&lt;/strong&gt; 運動對我們到底有多少好處，在&lt;a href=&quot;https://www.books.com.tw/products/0010855828&quot;&gt;&lt;strong&gt;真正的快樂處方&lt;/strong&gt;&lt;/a&gt;這本書裡，
針對運動對我們大腦的影響，如果你想要變得更年輕、聰明、學東西更快、壓力更小更快樂、注意力更集中、更有創造力嗎？那就運動吧！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;財務決策:&lt;/strong&gt; 本書說我們要有儲蓄及投資的習慣，在現在金融越來越越發達的世界當中，
我們有越來越多的行為牽涉到金錢，在花錢時時常有許多不理性的行為，可能是被商人誘導，要讓我們花更多的錢，或者只是我們自己懶，
在&lt;a href=&quot;https://www.books.com.tw/products/0010785897&quot;&gt;&lt;strong&gt;金錢心理學&lt;/strong&gt;&lt;/a&gt;裡，讓我們從很多的故事及實驗中，覺察到自己到底有沒有亂花錢的地方．&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最後除了自己做，最好是身邊的朋友及伴侶都有相同的價值觀，才能一起前進，而不是處處拉扯，祝大家可以找到三觀合的另一半~ 😂&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="books" /><category term="finance" /><category term="habit" /><summary type="html"></summary></entry><entry><title type="html">[Google sheet]如何在試算表裡匯入新聞、rss feed</title><link href="https://homuchen.com/posts/google-sheet-google-news-rss-feed/" rel="alternate" type="text/html" title="[Google sheet]如何在試算表裡匯入新聞、rss feed" /><published>2021-07-18T12:00:00+08:00</published><updated>2021-07-18T12:00:00+08:00</updated><id>https://homuchen.com/posts/google-sheet-google-news-rss-feed</id><content type="html" xml:base="https://homuchen.com/posts/google-sheet-google-news-rss-feed/">&lt;p&gt;此篇文章將分享我是如何在試算表裡查看新聞，看起來像是下面這樣:&lt;/p&gt;

&lt;p&gt;於左上角輸入公司名稱(此處是下拉選單)，即可跑出公司的相關新聞&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/google-sheet-news-1.jpg&quot; alt=&quot;google sheet: import google news&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在這一篇&lt;a href=&quot;/posts/google-sheet-stock-income-statement&quot;&gt;[Google sheet]我如何製作股票損益表，自動抓取最新股價&lt;/a&gt;裡，
我們已經建立了持有股票清單，我就想說如果同時可以同時看到每一間公司的相關新聞應該不錯，所以才會有了這篇．&lt;/p&gt;

&lt;h1 id=&quot;公式&quot;&gt;公式&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;=IMPORTFEED(CONCATENATE(“https://news.google.com/atom/search?q=”, A1, “&amp;amp;hl=zh-TW&amp;amp;gl=TW&amp;amp;ceid=TW:zh-Hant&amp;amp;sort=rated”), “items”, false, 150)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;以上公式會使用&lt;strong&gt;A1&lt;/strong&gt;儲存格的字去google news查詢，列出150項結果，以下將分別說明各個函式的用法.&lt;/p&gt;

&lt;h1 id=&quot;importfeed&quot;&gt;IMPORTFEED&lt;/h1&gt;

&lt;p&gt;IMPORTFEED爲要匯入新聞RSS Feed的函式，有四個參數，用法為: &lt;strong&gt;IMPORTFEED(網址, [查詢], [標題], [項數])&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;網址&lt;/p&gt;

    &lt;p&gt;此處我們使用的網址為&lt;/p&gt;

    &lt;p&gt;https://news.google.com/atom/search?q=&lt;strong&gt;台積電&lt;/strong&gt;&amp;amp;hl=zh-TW&amp;amp;gl=TW&amp;amp;ceid=TW:zh-Hant&amp;amp;sort=rated&lt;/p&gt;

    &lt;p&gt;改變q=後面的字，就是想要查詢的關鍵字&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查詢&lt;/p&gt;

    &lt;p&gt;第二個參數，可以為下列這些:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;feed: 只傳回單一列資料&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;feed &amp;lt;type&amp;gt;: 可以指定傳回的特定屬性，可能是title、url、author、summary&lt;/p&gt;

        &lt;p&gt;舉例: IMPORTFEED(A1, “feed url”)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;items: 此為預設，傳回整個表格，&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;items &amp;lt;type&amp;gt;: 一樣可以指定特定屬性，&lt;/p&gt;

        &lt;p&gt;舉例: IMPORTFEED(A1, “items title”, FALSE, 100)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;標題&lt;/p&gt;

    &lt;p&gt;是否要納入標題欄，預設為FALSE&lt;/p&gt;

    &lt;p&gt;舉例: IMPORTFEED(A1, “items”, TRUE)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;項數&lt;/p&gt;

    &lt;p&gt;當查詢(第二個參數)爲項目(items)時，代表要傳回的項目數&lt;/p&gt;

    &lt;p&gt;舉例: IMPORTFEED(A1, “items”, TRUE, 200)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;concatenate&quot;&gt;CONCATENATE&lt;/h1&gt;

&lt;p&gt;就是把所有的參數串起來，例如=CONCATENATE(“123”, “456”)，就會相當於”123456”．&lt;/p&gt;

&lt;p&gt;也能使用儲存格當作參數，這裡的例子就是:&lt;/p&gt;

&lt;p&gt;=CONCATENATE(“https://news.google.com/atom/search?q=”, A1, “&amp;amp;hl=zh-TW&amp;amp;gl=TW&amp;amp;ceid=TW:zh-Hant&amp;amp;sort=rated”)，&lt;/p&gt;

&lt;p&gt;當A1為台積電時，&lt;/p&gt;

&lt;p&gt;就會相當於”https://news.google.com/atom/search?q=台積電&amp;amp;hl=zh-TW&amp;amp;gl=TW&amp;amp;ceid=TW:zh-Hant&amp;amp;sort=rated”&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;p&gt;利用以上兩個公式，可能成功在試算表上看新聞囉～ 🎉，掰掰～👋&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="Google Sheet" /><category term="google sheet" /><category term="drop down list" /><category term="finance" /><summary type="html">此篇文章將分享我是如何在試算表裡查看新聞，看起來像是下面這樣:</summary></entry><entry><title type="html">[讀書筆記] 最高學以致用法: 讓學習發揮最大成果的輸出大全</title><link href="https://homuchen.com/posts/book-notes-output/" rel="alternate" type="text/html" title="[讀書筆記] 最高學以致用法: 讓學習發揮最大成果的輸出大全" /><published>2021-07-14T17:10:00+08:00</published><updated>2021-07-14T17:10:00+08:00</updated><id>https://homuchen.com/posts/book-notes-output</id><content type="html" xml:base="https://homuchen.com/posts/book-notes-output/">&lt;p&gt;不知道大家是否有過這樣的經驗: 讀了許多本書，事後卻說不出來到底讀了什麼;
看了一場電影、經歷一趟旅程，卻分享不出想法、或是說出從中有哪些收穫．&lt;/p&gt;

&lt;p&gt;大家可能也有聽過，最好的學習方法就是去教人．&lt;/p&gt;

&lt;p&gt;教學就是一種輸出，本書作者認為自我成長的關鍵就是&lt;strong&gt;輸出&lt;/strong&gt;，於本書收集了80個關於說、寫、行動三個面向的輸出，
每一則皆為兩到三分鐘的時間就能閱讀完的份量，讓我們在自己的日常生活中尋找幾個可以小小進步的地方!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/reading-output-1.jpg&quot; alt=&quot;最高學以致用法: 讓學習發揮最大成果的輸出大全&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;原則&quot;&gt;原則&lt;/h1&gt;

&lt;p&gt;此書的第一部分說明一些原則: 為什麼要輸出、什麼是輸出、輸入輸出的比例多少為好、以及除了輸出之外還需要些什麼?&lt;/p&gt;

&lt;h2 id=&quot;自我成長及改變生活的關鍵&quot;&gt;自我成長及改變生活的關鍵&lt;/h2&gt;

&lt;p&gt;想讓自己成長得更快，重點不是多讀了多少書，關鍵是更多的輸出！透過分享、書寫、實踐，讓自己的記憶更加牢固，
不管讀了多少書、上了多少課，如果沒有輸出實踐，不僅僅只是忘光光沒有記住而已，你的生活並不會有任何的改變&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;唯一可以改變現實的就是你的行為實踐&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;兩週內運用三次&quot;&gt;兩週內運用三次&lt;/h2&gt;

&lt;p&gt;情報及知識輸入到大腦裡，如果沒有經常運用很快就會忘記&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;透過反覆三次的輸出，讓情報成為長期記憶，儲存在大腦裡．&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;輸入輸出比37&quot;&gt;輸入輸出比3:7&lt;/h2&gt;

&lt;p&gt;有一個實驗是這樣子的，讓一群人去背社交名人錄的資訊，並依照不同的&lt;strong&gt;記憶時間&lt;/strong&gt;，&lt;strong&gt;測驗時間&lt;/strong&gt;，來看看最後誰的成績最好，
結果發現最後成績最高的，是花了40%時間在學習的組別，年紀越大的則是30%&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;輸入和輸出的黃金比例，應該是3:7&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;輸出之外還要有反饋&quot;&gt;輸出之外還要有反饋&lt;/h2&gt;

&lt;p&gt;單純不斷地輸入輸出，雖然也會有收穫，但如果沒有反饋就難以進步，有了反饋可以更知道下一次輸入的方向&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;補足弱點、發揮強項:&lt;/p&gt;

    &lt;p&gt;在輸出的同時，可以知道哪部分不夠清楚，再回頭去補強輸入，複習或是尋找相關資料，
另外對於自己有&lt;strong&gt;興趣&lt;/strong&gt;的部分，能夠做延伸學習～&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;解決&lt;strong&gt;為什麼&lt;/strong&gt;們:&lt;/p&gt;

    &lt;p&gt;在輸入輸出的過程中，一定會產生很多的疑問，不要放著這些為什麼不管，解決這些為什麼!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;實踐&quot;&gt;實踐&lt;/h1&gt;

&lt;p&gt;分為說、寫、行動這三大類，作者整理了80個跟輸出有關的事，以下簡單地列舉一部分:&lt;/p&gt;

&lt;h2 id=&quot;說&quot;&gt;說&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;分享前一天的事、體驗、感受&lt;/li&gt;
  &lt;li&gt;說正面而不是負面&lt;/li&gt;
  &lt;li&gt;非語言的表達的重要: 語調、表情、姿勢、肢體、動作&lt;/li&gt;
  &lt;li&gt;委婉地表達&lt;/li&gt;
  &lt;li&gt;關於提問、讚美、斥責、道歉、感謝&lt;/li&gt;
  &lt;li&gt;如何提問&lt;/li&gt;
  &lt;li&gt;關於簡報、打電話&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;寫&quot;&gt;寫&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;寫下來～ 而且用手寫&lt;/li&gt;
  &lt;li&gt;關於做筆記、寫摘要&lt;/li&gt;
  &lt;li&gt;列出清單&lt;/li&gt;
  &lt;li&gt;彙整想法&lt;/li&gt;
  &lt;li&gt;製作企劃&lt;/li&gt;
  &lt;li&gt;引用&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;行為&quot;&gt;行為&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;如何採取行動、並持之以恆&lt;/li&gt;
  &lt;li&gt;笑、哭&lt;/li&gt;
  &lt;li&gt;關於睡覺、運動&lt;/li&gt;
  &lt;li&gt;如何寫感想&lt;/li&gt;
  &lt;li&gt;社群、部落格&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;心得感想&quot;&gt;心得感想&lt;/h1&gt;

&lt;p&gt;讀完這本書之後，意識到原來生活當中，有如此多的面相都是輸出，
而不是原本以為的發表演說、報告、寫文章而已．&lt;/p&gt;

&lt;p&gt;但就像這本書的主題&lt;strong&gt;輸出&lt;/strong&gt;，如果沒有加以實踐，就不會有收穫，
這也是我會開始寫這篇文章的原因，並且開始規定自己在輸出完一本書之前，不能再繼續讀下一本😂
希望這讀書筆記系列可以持之以恆下去!&lt;/p&gt;

&lt;p&gt;也希望以上的內容，能稍微幫助到想認識這本書的人！掰掰～👋&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="learning" /><category term="writing" /><category term="books" /><summary type="html">不知道大家是否有過這樣的經驗: 讀了許多本書，事後卻說不出來到底讀了什麼; 看了一場電影、經歷一趟旅程，卻分享不出想法、或是說出從中有哪些收穫．</summary></entry><entry><title type="html">[Google sheet]我如何製作股票損益表，自動抓取最新股價</title><link href="https://homuchen.com/posts/google-sheet-stock-income-statement/" rel="alternate" type="text/html" title="[Google sheet]我如何製作股票損益表，自動抓取最新股價" /><published>2021-07-09T16:30:00+08:00</published><updated>2021-07-09T16:30:00+08:00</updated><id>https://homuchen.com/posts/google-sheet-stock-income-statement</id><content type="html" xml:base="https://homuchen.com/posts/google-sheet-stock-income-statement/">&lt;p&gt;此篇文章將分享我是如何製作我持有股票的未實現損益表，看起來的成果如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/income-statement-1.jpg&quot; alt=&quot;google sheet: stock income statement&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;主要功能&quot;&gt;主要功能&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;自動更新股價&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;根據最新股價，計算損益，並以顏色區分損或益&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;近一年的股價折線圖&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;step-by-step&quot;&gt;Step by Step&lt;/h1&gt;

&lt;h2 id=&quot;製作表格&quot;&gt;製作表格&lt;/h2&gt;

&lt;p&gt;首先填入表頭欄位，在這裡我們會有:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;股票代號&lt;/strong&gt;、&lt;strong&gt;名稱&lt;/strong&gt;、&lt;strong&gt;近一年股價&lt;/strong&gt;、&lt;strong&gt;現價&lt;/strong&gt;、&lt;strong&gt;漲跌&lt;/strong&gt;、
&lt;strong&gt;成交量&lt;/strong&gt;、&lt;strong&gt;持有張數&lt;/strong&gt;、&lt;strong&gt;市值&lt;/strong&gt;、&lt;strong&gt;持有成本&lt;/strong&gt;、&lt;strong&gt;損益&lt;/strong&gt;、&lt;strong&gt;損益百分比&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/income-statement-2.jpg&quot; alt=&quot;google sheet: blank data table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;每新增一檔股票，需要我們自己填入的有&lt;strong&gt;股票代號&lt;/strong&gt;、&lt;strong&gt;名稱&lt;/strong&gt;，&lt;strong&gt;持有張數&lt;/strong&gt;、&lt;strong&gt;持有成本&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;股票代號&lt;/strong&gt;: 爲後續&lt;strong&gt;GOOGLEFINANCE&lt;/strong&gt;函式的參數，這裡以台北股市台積電為例爲TPE:2330&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;名稱&lt;/strong&gt;: 就你自己開心如何稱這黨股票就好～&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;持有張數&lt;/strong&gt;: 就是你的持有張數…&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;持有成本&lt;/strong&gt;: 每次買股票時，就將成本加上去吧&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;取得最新股價資訊現價成交量計算市值&quot;&gt;取得最新股價資訊(現價、成交量)，計算市值&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;現價&lt;/strong&gt;:&lt;/p&gt;

    &lt;p&gt;使用&lt;strong&gt;GOOGLEFINANCE&lt;/strong&gt;函式來取得股價資訊！&lt;/p&gt;

    &lt;p&gt;在D2儲存格中輸入公式: &lt;strong&gt;=GOOGLEFINANCE(A2, “price”)&lt;/strong&gt;，之後下來套用至整個D欄
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/income-statement-3.jpg&quot; alt=&quot;google sheet: GOOGLEFINANCE price&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;成交量&lt;/strong&gt;:&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;=GOOGLEFINANCE(A2, “volume”)&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;市值&lt;/strong&gt;:&lt;/p&gt;

    &lt;p&gt;將&lt;strong&gt;持有張數&lt;/strong&gt;及&lt;strong&gt;現價&lt;/strong&gt;相乘即可～ &lt;strong&gt;=D2*G2&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;計算當日漲跌損益&quot;&gt;計算當日漲跌損益&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;漲跌&lt;/strong&gt;:&lt;/p&gt;

    &lt;p&gt;有了現價，可以跟昨日收盤價做比較計算出今日漲跌: &lt;strong&gt;=D2 - GOOGLEFINANCE(A2, “closeyest”)&lt;/strong&gt;
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/income-statement-4.jpg&quot; alt=&quot;google sheet: GOOGLEFINANCE closeyest&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;損益&lt;/strong&gt;:&lt;/p&gt;

    &lt;p&gt;即為&lt;strong&gt;持有成本&lt;/strong&gt;及&lt;strong&gt;市值&lt;/strong&gt;相減: &lt;strong&gt;=H2-I2&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;損益百分比&lt;/strong&gt;:&lt;/p&gt;

    &lt;p&gt;即為&lt;strong&gt;損益&lt;/strong&gt;除以&lt;strong&gt;持有成本&lt;/strong&gt;: &lt;strong&gt;=IF(ISBLANK(I2), 0, J2/I2)&lt;/strong&gt;
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/income-statement-5.jpg&quot; alt=&quot;google sheet: GOOGLEFINANCE&quot; /&gt;
&lt;strong&gt;IF&lt;/strong&gt;及&lt;strong&gt;ISBLANK&lt;/strong&gt;的用途爲如果你尚未實有該檔股票，持有成本爲0或空白，卻又寫列入表中觀察，
則&lt;strong&gt;損益百分比&lt;/strong&gt;顯示為0，否則將出現錯誤．&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;股價折線圖&quot;&gt;股價折線圖&lt;/h2&gt;

&lt;p&gt;公式為: &lt;strong&gt;=sparkline(GOOGLEFINANCE(A2, “price”,today()-365,today(),1))&lt;/strong&gt;
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/income-statement-6.jpg&quot; alt=&quot;google sheet: GOOGLEFINANCE sparkline&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GOOGLEFINACE:
總共四個參數，第一為股票代號、再來是起始日期跟結束日期，此範例使用一年前today()-365到今天today()、最後爲資料的interval，
1代表每天，也可以是7代表每週&lt;/li&gt;
  &lt;li&gt;sparkline:
可以再一個儲存格裡畫圖的函式，詳細的用法可以看我先前寫的文章:&lt;a href=&quot;/posts/google-sheet-sparkline/&quot;&gt;[Google Sheet]Sparkline，在儲存格裡插入迷你圖表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;替漲跌及損益百分比上色&quot;&gt;替漲跌及損益百分比上色&lt;/h2&gt;

&lt;p&gt;最後！股市就是要紅紅綠綠才比較好看，將賺錢的部分標上紅色，虧錢的弄上綠色吧！&lt;/p&gt;

&lt;p&gt;首先點選漲跌那一欄(E)，接著點選工具欄&lt;strong&gt;格式&lt;/strong&gt; -&amp;gt; &lt;strong&gt;條件格式設定&lt;/strong&gt;
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/income-statement-7.jpg&quot; alt=&quot;google sheet: format&quot; /&gt;&lt;/p&gt;

&lt;p&gt;將格式規則設為大於0，格式設定樣式改為字體紅色，綠色及損益率的部分也是一樣！
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/income-statement-8.jpg&quot; alt=&quot;google sheet: format&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如此一來就大功告成囉🎉&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="Google Sheet" /><category term="google sheet" /><category term="finance" /><summary type="html">此篇文章將分享我是如何製作我持有股票的未實現損益表，看起來的成果如下:</summary></entry><entry><title type="html">[Google sheet]如何建立下拉選單，以及從既有資料中自動建立選項</title><link href="https://homuchen.com/posts/google-sheet-create-a-drop-down-list-from-existed-data/" rel="alternate" type="text/html" title="[Google sheet]如何建立下拉選單，以及從既有資料中自動建立選項" /><published>2021-06-26T20:00:00+08:00</published><updated>2021-06-26T20:00:00+08:00</updated><id>https://homuchen.com/posts/google-sheet-create-a-drop-down-list-from-existed-data</id><content type="html" xml:base="https://homuchen.com/posts/google-sheet-create-a-drop-down-list-from-existed-data/">&lt;h1 id=&quot;為什麼要用下拉式選單&quot;&gt;為什麼要用下拉式選單&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;新增資料更為快速，無需重複填寫&lt;/li&gt;
  &lt;li&gt;避免誤植，或統一資料的格式及規則&lt;/li&gt;
  &lt;li&gt;對既有資料鐘進行選擇及後續操作&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;如何建立下拉式選單&quot;&gt;如何建立下拉式選單&lt;/h1&gt;

&lt;h2 id=&quot;自行輸入清單選項&quot;&gt;自行輸入清單選項&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;首先選擇一個或多個你想要建立選單的儲存格&lt;/li&gt;
  &lt;li&gt;點選 &lt;strong&gt;資料&lt;/strong&gt; -&amp;gt; &lt;strong&gt;資料驗證&lt;/strong&gt;
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/drop-down-1.jpg&quot; alt=&quot;data validation: tool bar&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;在&lt;strong&gt;條件&lt;/strong&gt;選項中，選取&lt;strong&gt;項目清單&lt;/strong&gt;
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/drop-down-2.jpg&quot; alt=&quot;data validation: List of items&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;輸入你想要的選項，選項間以逗號隔開
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/drop-down-3.jpg&quot; alt=&quot;data validation: List of items&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;就大功告成拉
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/drop-down-4.jpg&quot; alt=&quot;drop down menu&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;從既有資料來建立選項&quot;&gt;從既有資料來建立選項&lt;/h2&gt;

&lt;p&gt;有時你想要建立一個選單，其中的選項是來自某一大筆資料中的某一個欄位，
你不想一筆一筆手動Key，而且你也不想每次資料有變動時，就要重新去更新一次資料驗證，
此時就可以這麼做，以以下的資料為例:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/drop-down-5.jpg&quot; alt=&quot;example data sheet&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;重複自行輸入清單選項中的第一及第二部&lt;/li&gt;
  &lt;li&gt;在&lt;strong&gt;條件&lt;/strong&gt;選項中，選取&lt;strong&gt;範圍內的清單&lt;/strong&gt;
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/drop-down-6.jpg&quot; alt=&quot;data validation: List from a range&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;輸入或選取一個範圍，以這裡的例子為例，我們建立一個國家的下拉選項，填入&lt;strong&gt;F2:F&lt;/strong&gt;，代表country那一欄，不包含標頭country本身&lt;/li&gt;
  &lt;li&gt;大功告成~
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/drop-down-7.jpg&quot; alt=&quot;drop down menu from a range&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;p&gt;建立一個下拉選單，選項可以自行輸入，也可以從既有資料的範圍中建立，如此一來當資料有變動時，下拉選單的選項就可以自動更新，而不需要自己再重新輸入新的選項!&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="Google Sheet" /><category term="google sheet" /><category term="drop down list" /><summary type="html">為什麼要用下拉式選單</summary></entry><entry><title type="html">RESTful API Design — A practical guide</title><link href="https://homuchen.com/posts/http-restful-api-design-practical-guide/" rel="alternate" type="text/html" title="RESTful API Design — A practical guide" /><published>2021-04-13T20:00:00+08:00</published><updated>2021-04-13T20:00:00+08:00</updated><id>https://homuchen.com/posts/http-restful-api-design-practical-guide</id><content type="html" xml:base="https://homuchen.com/posts/http-restful-api-design-practical-guide/">&lt;p&gt;此篇文章將作為接下來一系列關於Restful API design的目錄．&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; 將介紹什麼是API，何時需要他，以及怎樣才會是一個好的API．&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 2:&lt;/strong&gt; 在許多種API中，此系列只專注於HTTP RESTful API，為了更好地學習他，必須先了解HTTP Protocol，知道其中各個組成HTTP Message的每一個部分．&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 3:&lt;/strong&gt; 介紹何為RESTful API，為什麼他會長這樣，以及其他許多當你在設計API時會遇到情況，例如: Documentation、Pagination、Rate Limiting、Monitoring．&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 4:&lt;/strong&gt; 陸續想到一些相關的議題，再放上來！&lt;/p&gt;

&lt;h1 id=&quot;outline&quot;&gt;Outline&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Introduction
    &lt;ul&gt;
      &lt;li&gt;1.1 What is an API?&lt;/li&gt;
      &lt;li&gt;1.2 What is a good API?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HTTP Basics
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/posts/http-introduction-telnet-nc-curl&quot;&gt;2.1 A HTTP Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/posts/http-methods-which-to-use-and-how-to-use-them-correctly&quot;&gt;2.2 HTTP Methods&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;2.3 HTTP Response codes&lt;/li&gt;
      &lt;li&gt;2.4 HTTP URI&lt;/li&gt;
      &lt;li&gt;2.5 HTTP Headers&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/posts/linux-http-client-tool-curl-usage/&quot;&gt;2.6 [Practices] A HTTP client — curl&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RESTful API and some Practical Guidelines
    &lt;ul&gt;
      &lt;li&gt;3.1 What is a RESTful API?&lt;/li&gt;
      &lt;li&gt;3.2 Identifying Resources&lt;/li&gt;
      &lt;li&gt;3.2 API first&lt;/li&gt;
      &lt;li&gt;3.3 An Introduction to OpenAPI&lt;/li&gt;
      &lt;li&gt;3.4 [Practices] How do I manage a large OpenAPI spec file?&lt;/li&gt;
      &lt;li&gt;3.5 Pagination&lt;/li&gt;
      &lt;li&gt;3.6 Rate Limiting&lt;/li&gt;
      &lt;li&gt;3.7 Monitoring&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Advanced Topics
    &lt;ul&gt;
      &lt;li&gt;4.1 Connection management&lt;/li&gt;
      &lt;li&gt;4.2 Resource Modeling: Fine-grained or Coarse-grained?&lt;/li&gt;
      &lt;li&gt;4.3 Versioning and Compatibility&lt;/li&gt;
      &lt;li&gt;4.4 How to Response to a Health Check?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="api" /><category term="http" /><category term="restful api" /><summary type="html">此篇文章將作為接下來一系列關於Restful API design的目錄．</summary></entry><entry><title type="html">What are HTTP Methods？Which to use and How to use them correctly?</title><link href="https://homuchen.com/posts/http-methods-which-to-use-and-how-to-use-them-correctly/" rel="alternate" type="text/html" title="What are HTTP Methods？Which to use and How to use them correctly?" /><published>2021-04-04T20:00:00+08:00</published><updated>2021-04-04T20:00:00+08:00</updated><id>https://homuchen.com/posts/http-methods-which-to-use-and-how-to-use-them-correctly</id><content type="html" xml:base="https://homuchen.com/posts/http-methods-which-to-use-and-how-to-use-them-correctly/">&lt;p&gt;這篇文章主要討論幾個常見的HTTP methods，說明他們分別是否具有哪些特性(Safe、Idempotent)，以及他們應該要怎麼使用，比較會是符合大家的期待．&lt;/p&gt;

&lt;p&gt;當然寫server的人可以不照著慣例走，不過如此一來，使用這個API的user可能會很不高興，而這個user可以是公司的客戶，可能是公司內部的其他團隊，也可能是未來的自己！&lt;/p&gt;

&lt;h1 id=&quot;outline&quot;&gt;Outline&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;HTTP Request message格式&lt;/li&gt;
  &lt;li&gt;常見的methods，以及其特性&lt;/li&gt;
  &lt;li&gt;分別介紹各個method的用法&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;http-request-message&quot;&gt;HTTP Request message&lt;/h1&gt;
&lt;p&gt;一個general的HTTP request message如下：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;method&amp;gt; &amp;lt;URL&amp;gt; &amp;lt;version&amp;gt;
&amp;lt;header&amp;gt;
...
...
&amp;lt;header&amp;gt;

&amp;lt;body&amp;gt; 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;第一個字就是method，接著為URL跟version，換行後為許多個header，每個header以換行隔開，最後再隔一行之後是body．&lt;/p&gt;

&lt;p&gt;對於HTTP message還不熟的，可以看我之前寫的文章：&lt;a href=&quot;/posts/http-introduction-telnet-nc-curl&quot;&gt;[Networking] HTTP 簡介，以及使用telnet、nc、curl等指令來探索&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL代表著資源，而method是你想要對資源進行的操作，常見的method如下表：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/header-1.jpg&quot; alt=&quot;http headers&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;dont-surprise-your-user&quot;&gt;Don’t surprise your user&lt;/h1&gt;
&lt;p&gt;並不是所有的server都會實作所有的method，而且每個method要做什麼事，也都是由server所決定的，但是一個好的API通常不會做怪怪的事，而是要符合使用者的期待，使其體驗良好，這裡先來解釋一下safe及Idempotent這兩個特性是什麼吧．&lt;/p&gt;
&lt;h2 id=&quot;safe&quot;&gt;Safe&lt;/h2&gt;
&lt;p&gt;如果一個request是safe的，指的是他不會導致server去做一些額外的動作，沒有side effect，例如說改變state、刷你信用卡，這樣的request基本上就是read-only的．
這樣的特性，使得API的user可以大膽放心地去呼叫，實驗你的API，而不必擔心會引發什麼無法挽回的後果，GET、HEAD、OPTIONS都是具有safe特性的method．&lt;/p&gt;
&lt;h2 id=&quot;idempotent&quot;&gt;Idempotent&lt;/h2&gt;
&lt;p&gt;一個Idempotent的操作，指的是這樣的操作執行一次跟執行很多次的結果是一樣的．例如數學上的乘以1，乘以0，一個是數字乘以1或乘以0不管多少次，結果都是原本的數字或者是0．&lt;/p&gt;

&lt;p&gt;那有Idempotent的特性，可以帶來什麼好處呢？就是user可以放心的retry，當user不確定剛剛的operation、request有沒有成功時(可能送出後網路突然斷掉、server做完之後再回應之前掛掉、等等…)，就再做一次！&lt;/p&gt;

&lt;p&gt;而HTTP method中，除了POST，其他method都預期應該是Idempotent的，Update好幾次，Delete好幾次，應該都跟只做一次的結果一致．&lt;/p&gt;

&lt;h1 id=&quot;http-methods&quot;&gt;HTTP Methods&lt;/h1&gt;
&lt;p&gt;看完了共同的特性之後，接著來看看給個method預期是怎麼使用，以及server如何回應各種情況．&lt;/p&gt;

&lt;h2 id=&quot;get&quot;&gt;GET&lt;/h2&gt;
&lt;p&gt;最常見的method之一，顧名思義就是用來向server索取一些資源．&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;有資源，server就回應200以及資源&lt;/li&gt;
  &lt;li&gt;沒有資源，404&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;head&quot;&gt;HEAD&lt;/h2&gt;
&lt;p&gt;跟GET都一樣，但server並不回傳資源本身，而是只回應headers．&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;Response&amp;gt;
HTTP/1.1 200 OK
Content-Type: plain/html
Content-Length: 614
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;options&quot;&gt;OPTIONS&lt;/h2&gt;
&lt;p&gt;用來詢問server對特定的資源，有支援哪些操作．&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;將結果置於header Allow裡，如下：
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;Response&amp;gt;
HTTP/1.1 200 OK
Allow: GET, POST, PUT, OPTIONS
Content-Length: 0
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;put&quot;&gt;PUT&lt;/h2&gt;
&lt;p&gt;Replace the entire resource，對應到CRUD裡的update，就是叫server將我request body裡的資料存起來，如果資源本來不存在就create，在的話就replace．&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;200 OK，成功&lt;/li&gt;
  &lt;li&gt;204 No Content，成功但畫面不需要更新，也就是沒有新的資料產生，client不必取的新的資料，例如說client在更新表單按下save時．&lt;/li&gt;
  &lt;li&gt;201 Created，如果是create的話，並且在header Location放上資源的URI
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;Response&amp;gt;
HTTP/1.1 201 Created
Location: https://api.example.com/users/123 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;patch&quot;&gt;PATCH&lt;/h2&gt;
&lt;p&gt;Update parts of the resource，跟PUT一樣是update，不過是partial update或者說是merge．
比如說原本有個homuchen的user是長這樣：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;{
    &quot;name&quot;: &quot;HoMuChen&quot;,
    &quot;age&quot;: 30
}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;當你PATCH時，想要將age更新為31&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;Request&amp;gt;
PATCH /users/homuchen HTTP/1.1
Content-Type: application/json
Content-Length: 11

{&quot;age&quot;: 31}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;結果為&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;{
    &quot;name&quot;: &quot;HoMuChen&quot;,
    &quot;age&quot;: 31
}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果是用PUT，則會整個replace掉，name就不見了&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;{
    &quot;age&quot;: 31
}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;post&quot;&gt;POST&lt;/h2&gt;
&lt;p&gt;一般來說是指把資料傳給server去做處理，當使用其他的method，語意無法符合時，就會使用POST，常見的有用於Create resources、Search query、Asynchronous tasks．&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;200 OK&lt;/li&gt;
  &lt;li&gt;201 Created&lt;/li&gt;
  &lt;li&gt;202 Accepted，server已接受請求，但還需要時間去完成任務．&lt;/li&gt;
  &lt;li&gt;Search Query: Ex. &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html&quot;&gt;Elasticsearch Query DSL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;delete&quot;&gt;DELETE&lt;/h2&gt;
&lt;p&gt;顧名思義，用來刪除資源．&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;200 OK．&lt;/li&gt;
  &lt;li&gt;207，bulk delete．&lt;/li&gt;
  &lt;li&gt;404 Not Found，要刪除的資源不存在．&lt;/li&gt;
  &lt;li&gt;410 Gone，資源已被刪除．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;HTTP做為網路世界中眾多通訊協定中的一個，只有當我們更加了解他，service provider才能提供更好用、另client user的學習曲線低，用起來很開心的服務．&lt;/p&gt;

&lt;p&gt;今天簡單地討論了各個HTTP Method的用法，每個method有他的語意，只有當server照著大家的預期去做時，才不會造成大家的困擾．&lt;/p&gt;

&lt;p&gt;除了Method之外，還有Response code、Header等其他HTTP的組成需要去了解，最後整個API符合RESTful的style是這一系列文章的目標．&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;感謝大家的閱讀，如有錯誤歡迎指正，我是河穆，我們下次見！&lt;/p&gt;</content><author><name></name></author><category term="Web Development" /><category term="restful api" /><category term="api" /><category term="http" /><summary type="html">這篇文章主要討論幾個常見的HTTP methods，說明他們分別是否具有哪些特性(Safe、Idempotent)，以及他們應該要怎麼使用，比較會是符合大家的期待．</summary></entry><entry><title type="html">HTTP 簡介，以及使用telnet、nc、curl等指令來探索</title><link href="https://homuchen.com/posts/http-introduction-telnet-nc-curl/" rel="alternate" type="text/html" title="HTTP 簡介，以及使用telnet、nc、curl等指令來探索" /><published>2021-03-24T20:00:00+08:00</published><updated>2021-03-24T20:00:00+08:00</updated><id>https://homuchen.com/posts/http-introduction-telnet-nc-curl</id><content type="html" xml:base="https://homuchen.com/posts/http-introduction-telnet-nc-curl/">&lt;p&gt;在網路的世界裡，HTTP扮演著一個重要角色，當你打開Instagram看著無以計數的照片、打開Youtube看看影片、在google上搜尋著你想要知道的答案、瀏覽著別人的網站文章，這些都是HTTP負責把上述的這些照片、影片、文字、等檔案資源從別處的伺服器搬到你的裝置裡，可能是你的手機、平板或是電腦．&lt;/p&gt;

&lt;p&gt;HTTP在OSI模型中，是屬於應用層(Application layer)裡的一個通訊協定，透過傳輸層(Transport layer)的TCP來傳輸資料．&lt;/p&gt;

&lt;p&gt;關於application layer在整個分層架構中扮演什麼樣的角色，可以參考我之前寫的文章: &lt;a href=&quot;/posts/networking-application-layer-overview-what-is-socket&quot;&gt;[Networking]Application Layer Overview，什麼是Socket?&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;client-server-protocol&quot;&gt;Client server protocol&lt;/h1&gt;
&lt;p&gt;HTTP是這樣的，想要發起通訊請求的一方作為client(例如你的瀏覽器)，而server則隨時等候，回應client的請求，client首先會建立一個TCP socket，至於TCP連線是怎麼建立，以及資料如何透過TCP connection在client及server之間傳送，則是另外一回事，並不是HTTP需要考慮的事．&lt;/p&gt;

&lt;p&gt;Client送出一個請求，例如我要看youtube! 而youtube的server收到這個請求，則回應給他youtube的介面，以及一些影片的清單．&lt;/p&gt;

&lt;p&gt;HTTP既然作為client及server之間的語言，他必須有個規範大家才聽得懂，不然有人講中文，有人說英文這樣是無法溝通的．以下就來看看HTTP所傳送的資料到底是長怎樣．&lt;/p&gt;

&lt;h1 id=&quot;http-message&quot;&gt;HTTP message&lt;/h1&gt;
&lt;p&gt;HTTP message分成兩種，請求(request)及回應(response)，他基本上就是人類可以讀懂的文字．&lt;/p&gt;

&lt;h2 id=&quot;request-message&quot;&gt;Request message&lt;/h2&gt;
&lt;p&gt;以下一個範例，當你在網址上輸入www.google.com時，你的瀏覽送出去的HTTP message可能會是這樣:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;GET / HTTP/1.1
Host: www.google.com
Connection: Close
User-agent: Mozilla/5.0
Accept-language: en
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第一行為request line，由三個部分組成，method、URL、version，分別以空格隔開．&lt;/p&gt;

&lt;p&gt;常見的method有GET 、POST 、PUT 、DELETE 、HEAD等等，GET非常地常見，通常代表著你想要取得的某些資源，而你想取的資源則用URL表示，最後HTTP/1.1就是版本．&lt;a href=&quot;/posts/&quot;&gt;點我看更多關於method的介紹．&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;第二行開始為header lines，field跟value以冒號(:)隔開，上面例子中有Host、Connection、User-agent、Accept-language四個header，還有許許多多的header各自有各自的意義，Host代表server，Connection: Close是叫server回傳完資料後就把TCP connection close掉，關於persistent connections的部分，之後會再寫一篇文章來詳細探討．&lt;/p&gt;

&lt;h2 id=&quot;request-body&quot;&gt;Request body&lt;/h2&gt;
&lt;p&gt;如果client需要傳送額外的資料給server，就要把資料放在body的部分，是在header lines之後空一行，比如說我要通過一個API新增一個user&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;POST /users HTTP/1.1
HOST: api.domain.com
Content-Type: application/json
Connection: Keep-alive

{&quot;name&quot;: &quot;HoMuChen&quot;, &quot;age&quot;: 30, &quot;gender&quot;: &quot;male&quot;}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;response-message&quot;&gt;Response message&lt;/h2&gt;
&lt;p&gt;以下為一個範例:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;HTTP/1.1 200 OK
Server: nginx/1.14.0 (Ubuntu)
Date: Wed, 17 Mar 2021 14:34:29 GMT
Content-Type: text/html
Content-Length: 614
Last-Modified: Wed, 17 Mar 2021 10:27:32 GMT

&amp;lt;!doctype html&amp;gt;&amp;lt;html lang=&quot;en&quot;&amp;gt;........
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;status-line&quot;&gt;Status Line&lt;/h2&gt;
&lt;p&gt;第一行為status line，由三個部分組成，version、status code、phrase，分別以空格隔開．
Status code 跟 phrase拜表著回應的結果，常見的有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;200 OK：成功&lt;/li&gt;
  &lt;li&gt;301 Moved Permanently: 資源不在此URL，通常搭配著Location的response header，告訴我們要去哪裡取得資源．&lt;/li&gt;
  &lt;li&gt;400 Bad Request: Request有錯，我server看不懂拉．&lt;/li&gt;
  &lt;li&gt;404 Not Found: 資源不存在．&lt;/li&gt;
  &lt;li&gt;500 Internal Server Error: Server出事了…&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;header-lines&quot;&gt;Header Lines&lt;/h2&gt;
&lt;p&gt;第二行開始一樣是header lines，我覺得比較重要的是Content-Type，此header就是說明了放在最後body裡的資料是什麼格式，讓client可以去處理．常見的像是text/html、application/json、image/jpeg、application/pdf等等．&lt;/p&gt;

&lt;h2 id=&quot;body&quot;&gt;Body&lt;/h2&gt;
&lt;p&gt;結束header lines之後，空一行，後面就是response body的部分，放著的就是request想要的資料，上面例子中就是html document，也可能是一張圖片的binary data，或是一個Restful API的json資料．&lt;/p&gt;

&lt;h1 id=&quot;get-your-hands-dirty&quot;&gt;Get your hands dirty&lt;/h1&gt;
&lt;h2 id=&quot;telnet&quot;&gt;telnet&lt;/h2&gt;
&lt;p&gt;最後就來使用一些linux command line tool來驗證上面講的對不對吧！&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;telnet www.google.com 80
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用telnet指令，如此一來就跟google建立了一個TCP連線，接下來輸入並且按下Enter&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;GET / HTTP/1.1
Host: www.google.com
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/http-intro-1.jpg&quot; alt=&quot;telnet request response&quot; /&gt;&lt;/p&gt;

&lt;p&gt;就可以看到google把網頁吐回來拉～～&lt;/p&gt;

&lt;h2 id=&quot;nccurl&quot;&gt;nc、curl&lt;/h2&gt;

&lt;p&gt;除了telnet之後，也可以用nc作為建立tcp連線的指令，這裡我們用nc來建立一個server，-l 監聽在本機的port 3000上&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;nc -l 3000
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之後在另一個shell，利用curl作為HTTP client，發送HTTP到port 3000&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;curl localhost:3000
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/http-intro-2.jpg&quot; alt=&quot;curl response&quot; /&gt;&lt;/p&gt;

&lt;p&gt;nc的terminal上就會出現這些資訊拉～～也就是curl傳送過來的資料，再來試試看上面開創一個新的user的API call吧&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;curl -XPOST \
     -H 'Content-Type: application' \
     -H 'Connection: Keep-alive' \
     api.domain.com/users \
     -d '{&quot;name&quot;: &quot;HoMuChen&quot;, &quot;age&quot;: 30, &quot;gender&quot;: &quot;male&quot;}'
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;nc server就會收到下面的資料拉！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/http-intro-3.jpg&quot; alt=&quot;curl request&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;HTTP作為網路中最常用的client server 通訊協定，簡單地介紹了HTTP message的格式，他是human readable的text format，熟悉他到底傳來傳去到底在傳什麼，可以幫助我們開發網頁應用時更有底氣．&lt;/p&gt;

&lt;p&gt;也可以學習使用一些linux指令，快速的explore別人的API，或是看看自己送出去的request到底有沒有對．&lt;/p&gt;

&lt;p&gt;感謝您的閱讀~期待下次見！&lt;/p&gt;</content><author><name></name></author><category term="Networking" /><category term="http" /><category term="linux" /><category term="curl" /><category term="nc" /><category term="telnet" /><summary type="html">在網路的世界裡，HTTP扮演著一個重要角色，當你打開Instagram看著無以計數的照片、打開Youtube看看影片、在google上搜尋著你想要知道的答案、瀏覽著別人的網站文章，這些都是HTTP負責把上述的這些照片、影片、文字、等檔案資源從別處的伺服器搬到你的裝置裡，可能是你的手機、平板或是電腦．</summary></entry></feed>