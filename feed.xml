<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-tw"><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://homuchen.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://homuchen.com/" rel="alternate" type="text/html" hreflang="zh-tw" /><updated>2021-11-28T17:00:01+08:00</updated><id>https://homuchen.com/feed.xml</id><title type="html">HoMuChen</title><subtitle>Hi! This is HoMuchen, 陳河穆. I am a software engineer working at Largitdata now. This is where I record whatever I learned.</subtitle><entry><title type="html">[System Design] 淺談Database Replication，有何優缺點、做法及何處可見?</title><link href="https://homuchen.com/posts/what-and-why-database-replication-advantage-and-disadvantage/" rel="alternate" type="text/html" title="[System Design] 淺談Database Replication，有何優缺點、做法及何處可見?" /><published>2021-11-28T17:00:00+08:00</published><updated>2021-11-28T17:00:00+08:00</updated><id>https://homuchen.com/posts/what-and-why-database-replication-advantage-and-disadvantage</id><content type="html" xml:base="https://homuchen.com/posts/what-and-why-database-replication-advantage-and-disadvantage/">&lt;h1 id=&quot;什麼是database-replication&quot;&gt;什麼是database replication?&lt;/h1&gt;
&lt;p&gt;顧名思義就是將一份資料，複製成多份，並把它放到不同的機器上，
好像也沒什麼好說的🤪，接著會看看為什麼要做複製，它會帶來什麼好處及壞處，
再看看要如何做到replication，最後看看在RDBMS、NoSQL或是你自己的系統，是怎麼應用這些概念的。&lt;/p&gt;

&lt;h1 id=&quot;為何要replication&quot;&gt;為何要replication&lt;/h1&gt;
&lt;h2 id=&quot;資料備份&quot;&gt;資料備份&lt;/h2&gt;
&lt;p&gt;把一份資料變成多份放到不同的地方，最明顯的好處就是&lt;strong&gt;備份&lt;/strong&gt;，當你的機器壞掉，如果硬碟沒壞，
其實重啟之後資料還是在那邊，但就怕你的機器整組壞光光，或是就是硬碟爆了無法再使用，
此時如果資料有複製道別台機器上，就不用怕會有資料的丟失。&lt;/p&gt;

&lt;h2 id=&quot;讀取效能&quot;&gt;讀取效能&lt;/h2&gt;
&lt;p&gt;資料都在同一台機器時，所有的讀取查詢都必須經由這台機器來完成，一台機器總有他的瓶頸，
一台不行，那你有試過兩台嗎？三台四台五台嗎～&lt;/p&gt;

&lt;p&gt;對於讀取效能的增進，主要有兩個方向，分別是吞吐量(throughput)及延遲時間(latency)。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;read throughput:&lt;/strong&gt;
複製了N份，我就有N台機器可以供我查詢拉，平均分散所有的查詢請求到N台機器上，
預期最多就可以有N倍的throughput。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;read latency:&lt;/strong&gt;
另外也可以把一些機器放到離user近一點的地方，減少網路封包來回的時間，降低latency，&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;replication帶來的缺點&quot;&gt;Replication帶來的缺點&lt;/h1&gt;
&lt;h2 id=&quot;儲存空間&quot;&gt;儲存空間&lt;/h2&gt;
&lt;p&gt;想當然爾，複製了幾份的資料就需要多幾份的磁碟的空間，不過現在硬碟越來越便宜的時代，
應該不是個大問題。&lt;/p&gt;

&lt;h2 id=&quot;資料的不一致&quot;&gt;資料的不一致&lt;/h2&gt;
&lt;p&gt;不一致的主要來源就是兩種: &lt;strong&gt;replication&lt;/strong&gt;和&lt;strong&gt;concurrent write&lt;/strong&gt;，
試想一下資料如果只有單一來源，那要跟誰不一致呢？反之，因為有了replica，
每份複製要如何保持同步及一致就會是個問題? 會造成什麼consistency的問題，
後面會在陸續討論。&lt;/p&gt;

&lt;h1 id=&quot;how&quot;&gt;How&lt;/h1&gt;
&lt;p&gt;接下來，我們來看看要如何複製。假設你今天有一份檔案，不會再修改，
那就直接將檔案複製一份放到另一台機器上供使用者去讀取，那不就做完了嗎～&lt;/p&gt;

&lt;p&gt;沒錯！就是這個簡單，所以問題是什麼呢？ 問題就在於我們會不斷地修改檔案，
資料庫會不斷地接收使用者的insert、update，這時要如何保持多處資料的同步一致呢?&lt;/p&gt;

&lt;h1 id=&quot;master-slave&quot;&gt;Master Slave&lt;/h1&gt;
&lt;p&gt;首先，我們先定義幾個名詞，master為可以接受資料寫入修改的節點，
而slave就是存放複製的檔案的地方，只負責被讀取，並不會從slave中寫入資料。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/database-replication-1.jpg&quot; alt=&quot;master slave repilcation&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;資料要從master被複製到slave，最簡單的可能就像是直接&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cp&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scp&lt;/code&gt;，
或是你寫備份script，每天固定時間將DB裡的資料寫到另一台DB。&lt;/p&gt;

&lt;p&gt;另外現在許多資料庫都有提供&lt;strong&gt;change data capture&lt;/strong&gt;的功能: 每當一有資料寫入時，
就會通知你，這有點像是是在application level的trigger，
像是MangoDB的Change Streams或是AWS Dynamo的Streams。&lt;/p&gt;

&lt;p&gt;而RDBMS也有類似的功能，像是postgreSQL的WAL、MySQL的Binlog，
如果是cluster的，內部可能也是利用上述的機制來做複製及備份。&lt;/p&gt;

&lt;h1 id=&quot;replication-lag&quot;&gt;Replication lag&lt;/h1&gt;
&lt;p&gt;資料要從發生寫入的地方，複製到另一個地方，這中間的時間差就是&lt;strong&gt;replication lag&lt;/strong&gt;，
可能是每天將整個資料庫的檔案做一次備份到別台機器，那lag最長就是一天;
如果是在每筆資料寫入的時候，就立即透過網路寫入同一筆資料到另一備份中(透過剛剛說的change data capture)，
那lag可能就是幾毫秒。&lt;/p&gt;

&lt;h2 id=&quot;lag造成不一致&quot;&gt;Lag造成不一致&lt;/h2&gt;
&lt;p&gt;如上所述，資料寫入後、在replication lag這段時間內，多份的複製間並還沒有同步，
也就是說他們是不一樣的！不一樣就是不一致！就會有些問題。
這裡舉兩個例子inconsistency的例子，
就是會無法達成&lt;strong&gt;read your write consistency&lt;/strong&gt;及&lt;strong&gt;monotonic read consistency&lt;/strong&gt;，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;read your write&lt;/strong&gt;: 寫入一筆資料後在讀取，卻讀不到你剛剛些入的資料，而是取得舊的資料。
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/database-replication-2.jpg&quot; alt=&quot;not read your write consistency&quot; target=&quot;_blank&quot; /&gt;
如上圖，當你寫入一筆c=3的資料後，資料尚未從master複製到slave，但你馬上從slave讀取，就讀取不到。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;monotonic read&lt;/strong&gt;: 連續的讀取，讀到最新的資料後，接著又讀到舊的資料，經歷了時間上的倒退。
&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/database-replication-3.jpg&quot; alt=&quot;not monotinic read consistency&quot; target=&quot;_blank&quot; /&gt;
如上圖，當你讀取c的值時，首先讀到3的值，接著再讀一次反而不見了。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因為你不知道你是從master還是slave中讀取資料，如果master剛剛接受的新的更新寫入還沒複製到slave，
則slave上的資料就是舊的，從slave讀取就會導致讀不到你剛剛寫入的資料。&lt;/p&gt;

&lt;h2 id=&quot;解決方法&quot;&gt;解決方法&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;只從master讀取: 但這好像就失去了複製到slave的好處了，read throughput沒有增加，只剩下備份的好處。&lt;/li&gt;
  &lt;li&gt;當讀自己寫的資料時，從master讀取: 如此一來可以保證有read your write consistency，
但你要額外判斷query是不是要取得自己的資料。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;為何要知道這些呢&quot;&gt;為何要知道這些呢?&lt;/h1&gt;
&lt;h2 id=&quot;知道nosql的用法&quot;&gt;知道NoSQL的用法&lt;/h2&gt;
&lt;p&gt;比如說MongoDB的write有各種設定&lt;a href=&quot;#1&quot;&gt;[1]&lt;/a&gt;，w option可以設為&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;或&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;majority&lt;/code&gt;，
你知道他們的區別及取捨嗎?其核心的概念就是今天所討論的replication所造成的
consistency及durability的問題，之後有機會再單獨寫一篇講MongoDB的write concern(TODO)。&lt;/p&gt;

&lt;h2 id=&quot;自己的系統也會有replication&quot;&gt;自己的系統也會有replication&lt;/h2&gt;
&lt;p&gt;隨著系統越來越複雜，你可能也會使用到多個資料產品，比如說你有個主要的資料庫，
使用者流量越來越大已不堪負荷，可能需要做讀寫分離，
另外還有像是用elasticsearch等搜尋引擎，用redis作為cache，
這些都是一份資料可能同時需要存在許多地方，廣義上來說，也都是replicaton，
以下我們看看cache及讀寫分離這兩個例子。&lt;/p&gt;

&lt;h3 id=&quot;cache&quot;&gt;Cache&lt;/h3&gt;
&lt;p&gt;常見的做法可能會是加一台cache database，像是redis，
這也是一種replication，因為你把資料從主要的資料庫裡複製了一份到redis上。&lt;/p&gt;

&lt;p&gt;這時候你就有很多事要決定了，要用cache還是本來的資料庫作為master，
也就是說一開始寫入的地方要發生在哪裡: cache還是main database?&lt;/p&gt;

&lt;p&gt;還有要多久將兩份資料同步，也就是replication lag會是多久，
可能會有lag也可以沒有，
這一切的決定就會衍伸出有&lt;strong&gt;cache aside&lt;/strong&gt;、&lt;strong&gt;read through&lt;/strong&gt;、&lt;strong&gt;write through&lt;/strong&gt;、&lt;strong&gt;write back&lt;/strong&gt;
等等等的架構設計，有機會再單獨寫一篇講Cache的設計～ (TODO)。&lt;/p&gt;

&lt;h3 id=&quot;讀寫分離&quot;&gt;讀寫分離&lt;/h3&gt;
&lt;p&gt;當你的RDBMS資料庫無法再負荷的了大量的寫入或查詢時，或許你有聽過讀寫分離，
就是所有寫入的操作只能在某一台資料庫發生，也就是今天所說的master，
而其他的查詢都透過slave，其實我也沒有實際做過，但核心的概念就是今天所講的replication。&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;
&lt;h3 id=&quot;cdndns&quot;&gt;CDN、DNS&lt;/h3&gt;
&lt;p&gt;廣義上CDN及DNS都有replication的概念，將檔案或DNS record複製到鄰近user的機器上，
DNS甚至複製到了user的本地機器裡，可以看到他們為了支持更好的read performance，
不管是latency還是throughput，而採用了這樣的架構設計，換來的是inconsistency的問題，
就像是DNS record的更新，通常要花上幾分鐘甚至是幾天才有辦法同步。&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;今天看了replication是什麼，會帶來哪些好處(resilient、read performace)，
以及會面對怎樣的問題(inconsistency)，並且知道了一些會用到這些概念的地方，
不管是他內部就幫你做好的(NoSQL)，還是你自己的系統架構，或者是一些已經存在的別的系統(CDN、DNS)。&lt;/p&gt;

&lt;p&gt;透過更了解replication的概念，對於我們如何使用別人的產品或是自己系統設計上的取捨都有更清楚深刻的見解，
感謝你的閱讀，有任何問題或是想法都歡迎留言唷～ 掰掰👋&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/&quot; target=&quot;_blank&quot; id=&quot;1&quot;&gt;&lt;strong&gt;MongoDB Write Concern&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="system design" /><category term="database" /><summary type="html">什麼是database replication? 顧名思義就是將一份資料，複製成多份，並把它放到不同的機器上， 好像也沒什麼好說的🤪，接著會看看為什麼要做複製，它會帶來什麼好處及壞處， 再看看要如何做到replication，最後看看在RDBMS、NoSQL或是你自己的系統，是怎麼應用這些概念的。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/database-replication-1.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/database-replication-1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Node.js: 7 cryptography concepts using ctypto module</title><link href="https://homuchen.com/posts/cryptography-in-nodejs-using-crypto-module/" rel="alternate" type="text/html" title="Node.js: 7 cryptography concepts using ctypto module" /><published>2021-11-24T22:11:00+08:00</published><updated>2021-11-24T22:11:00+08:00</updated><id>https://homuchen.com/posts/cryptography-in-nodejs-using-crypto-module</id><content type="html" xml:base="https://homuchen.com/posts/cryptography-in-nodejs-using-crypto-module/">&lt;p&gt;這篇要介紹nodejs中的crypto module的用法，如何使用這個module來實現密碼學中常見的概念，
包含&lt;strong&gt;hash&lt;/strong&gt;、&lt;strong&gt;salt&lt;/strong&gt;、&lt;strong&gt;password hashing&lt;/strong&gt;、
&lt;strong&gt;MAC(message authentication code)&lt;/strong&gt;、
&lt;strong&gt;Symmetric Encryption&lt;/strong&gt;及&lt;strong&gt;Asymmetric Encryption&lt;/strong&gt;
及&lt;strong&gt;Digital Signature&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/nodejs-crytpo-1.jpg&quot; alt=&quot;cryptography in node.js cryto module&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;hash&quot;&gt;Hash&lt;/h1&gt;
&lt;p&gt;可以使用指令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openssl list -digest-algorithms&lt;/code&gt;來查詢可用的algorithms，以下使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sha256&lt;/code&gt;為例，
並輸出&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base64&lt;/code&gt;的字串。&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createHash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;salt&quot;&gt;Salt&lt;/h1&gt;
&lt;p&gt;randomBytes可以幫我們隨機產生你所想要長度的隨機亂數，用來作為salt，
它的回傳值是一個Buffer。&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;password-hashing&quot;&gt;Password hashing&lt;/h1&gt;
&lt;p&gt;利用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scrypt&lt;/code&gt;及&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scryptSync&lt;/code&gt;這個KDF(一個為非同步，一個為同步的API)，
function的前三個參數分別為:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;欲hash的明文資料，此處為密碼&lt;/li&gt;
  &lt;li&gt;salt&lt;/li&gt;
  &lt;li&gt;output的長度&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scryptSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passwordHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hashedPassword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scryptSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hashedPassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;以上例子使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;randomBytes&lt;/code&gt;來產生salt，接著將密碼與salt一起hash成32 bytes的hash value，最後跟salt一起回傳。&lt;/p&gt;

&lt;h1 id=&quot;mac&quot;&gt;MAC&lt;/h1&gt;
&lt;p&gt;跟hash一樣可以使用指令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openssl list -digest-algorithms&lt;/code&gt;來查詢可用的演算法。&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createHmac&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;my-secret!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;foo bar👻&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hmac&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createHmac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;symmetric-encryption&quot;&gt;Symmetric Encryption&lt;/h1&gt;
&lt;p&gt;支援的對稱式加密的演算法一樣可以透過這個指令來取得&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openssl list -cipher-algorithms&lt;/code&gt;，此處使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aes256&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createCipheriv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createDecipheriv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;This is the message I wanna deliver&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;key shared between two parties&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Encrypt&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cipher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createCipheriv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;aes256&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encryptedMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;final&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Decrypt&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decipher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createDecipheriv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;aes256&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decryptedMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encryptedMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;utf-8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;final&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;asymmetric-encryption&quot;&gt;Asymmetric Encryption&lt;/h1&gt;
&lt;p&gt;首先使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generateKeyPair&lt;/code&gt;或&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generateKeyPairSync&lt;/code&gt;來產生公鑰及私鑰。&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generateKeyPairSync&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;publicKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;privateKey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generateKeyPairSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;modulusLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4096&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;publicKeyEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;spki&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pem&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;privateKeyEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pkcs8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pem&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;aes-256-cbc&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;passphrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;top secret&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接者使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publicEncrypt&lt;/code&gt;及&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;privateDecrypt&lt;/code&gt;來encrypt、decrypt message。&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;publicEncrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;privateDecrypt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;I am the message to be encypted🥳&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//加密 Encrypt&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encryptedData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;publicEncrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publicKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//解密 Decrypt&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decryptedData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;privateDecrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;privateKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encryptedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;digital-signature&quot;&gt;Digital Signature&lt;/h1&gt;
&lt;p&gt;數位簽章牽扯到hash及非對稱加密，使用crypto module中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;createSign&lt;/code&gt;及&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;createVerify&lt;/code&gt;，
回傳的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sign&lt;/code&gt;及&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Verify&lt;/code&gt; Object都幫我們做好好囉～&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createSign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createVerify&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//取得你的公私鑰匙&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;publicKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./ssl/key.pem&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;privateKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./ssl/cert.pem&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;this data must be signed&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//使用私鑰sign&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;signer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createSign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;rsa-sha256&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;signer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;signature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;signer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;privateKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// 使用公鑰verify&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;verifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createVerify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;rsa-sha256&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;verifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isVerified&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;verifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publicKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;summay&quot;&gt;Summay&lt;/h1&gt;
&lt;p&gt;其實就是從官方document裡，把比較常用的整理到這裡，這篇就只有紀錄在Nodejs裡如何實作，
並沒有討論為何需要上述的每一個東西，以及有何用途，有機會再陸續補上～ 掰掰👋&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodejs.org/api/crypto.html&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Crypto | Node.js Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="crypto" /><category term="node.js" /><summary type="html">這篇要介紹nodejs中的crypto module的用法，如何使用這個module來實現密碼學中常見的概念， 包含hash、salt、password hashing、 MAC(message authentication code)、 Symmetric Encryption及Asymmetric Encryption 及Digital Signature。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/nodejs-crytpo-0.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/nodejs-crytpo-0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">[System Design] 淺談Database Partition. Centralized and Distributed.</title><link href="https://homuchen.com/posts/what-is-database-partition-sharding/" rel="alternate" type="text/html" title="[System Design] 淺談Database Partition. Centralized and Distributed." /><published>2021-11-21T18:19:00+08:00</published><updated>2021-11-21T18:19:00+08:00</updated><id>https://homuchen.com/posts/what-is-database-partition-sharding</id><content type="html" xml:base="https://homuchen.com/posts/what-is-database-partition-sharding/">&lt;p&gt;什麼是partition，vertical跟horizontal partition有何不同? 阿sharding又是什麼?
這些跟NoSQL有關嗎? 在傳統的RDBMS，像是MySQL或PostgreSQL中，這些概念也有用嗎?
這篇文章將討論上述的問題，看看partition在RDBMS及NoSQL中的實踐應用，以及各種優缺點。&lt;/p&gt;

&lt;h1 id=&quot;什麼是partition&quot;&gt;什麼是Partition&lt;/h1&gt;
&lt;p&gt;Partition原意就是&lt;strong&gt;分拆&lt;/strong&gt;的意思，在資料的世界裡，就是把一份資料，分成許多小份，
比如說log file的rotation也是，把今年的日記寫在同一本，去年的日記是另一本也是partition。&lt;/p&gt;

&lt;p&gt;分拆出來的多份資料，並沒有一定要分散到多台機器中，他們可以被分散到多處，
也能被放在同一台RDBMS裡的不同table，
也就是說partition並不是分散式資料庫(Distributed Database)的專利。&lt;/p&gt;

&lt;p&gt;Partion的方式有兩種，分別為vertical及horizontal partition，
我們看資料的方式通常是使用表格的，也就是說有欄有列，
vertical partition就是根據欄來做分拆，而horizontal partition是對列進行分拆。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/partition-0.jpg&quot; alt=&quot;vertical partition and horizontal partition&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;vertical-partition&quot;&gt;Vertical Partition&lt;/h2&gt;
&lt;p&gt;如下圖，vertical partition是根據欄位來進行拆分，會拆分出schema不同的表格，
主要是為了效能優化，易於管理等目的，再後面的章節中，再來討論應用場景及優缺點。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/partition-1.jpg&quot; alt=&quot;vertical partition&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;horizontal-partition&quot;&gt;Horizontal Partition&lt;/h2&gt;
&lt;p&gt;horizontal partition，是根據列來進行拆分，
每個拆分出來的資料集都跟原本的資料集長一樣，只不過是一個子集合。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/partition-2.jpg&quot; alt=&quot;horizontal partition&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;該如何做horizontal-partition&quot;&gt;該如何做Horizontal Partition&lt;/h1&gt;
&lt;p&gt;要根據列來進行拆分的話，就必須有個方法，來決定每一列是屬於哪一份partition，
作法就是選擇一個資料欄位，用這個欄位經過一些運算或判斷來決定這筆資料屬於哪一個partition，
而這個欄位就稱為&lt;strong&gt;partitioning key&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/partition-3.jpg&quot; alt=&quot;partition key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在上面的例子中，我們選擇了id做為我們的partition key，將資料拆分為兩份，一份為id是奇數，另一份id是偶數，
除了上述使用ID奇偶數的方法外，哪些欄位可以適合作為partition key呢? 又有哪些方法來利用每筆資料的partition key，
使其分配到特定的partition?&lt;/p&gt;

&lt;h2 id=&quot;range-based&quot;&gt;Range based&lt;/h2&gt;
&lt;p&gt;就是指shard key依照某個range來指派partition。舉個例子，假設我們選用birthday做為我們的shard key，
然後指派出生年在1960年前的為partition 1，1960-1990的為partition 2，1990之後的為partition 3。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/partition-4.jpg&quot; alt=&quot;range partition&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這樣做的缺點是，如果你的資料有一堆1990年後出生的年輕人，那麼partition 3就會有一大堆資料，分散的並不平均。&lt;/p&gt;

&lt;p&gt;而優點是做range query時，可以就近就拿到幾乎所有的資料，比如說我想要查詢所有1995-1996出生的人，
此時只要去到partition 3，就可以拿到所有的資料了。&lt;/p&gt;

&lt;h2 id=&quot;hash-based&quot;&gt;Hash based&lt;/h2&gt;
&lt;p&gt;另一個作法，就是先將partition key的值先hash過，如此一來就可以避免使用range partition的缺點，也就是造成hot load，
但是如此一來，將會損失某些資料既有的連續性及相關性。&lt;/p&gt;

&lt;h1 id=&quot;centralized-or-distributed&quot;&gt;Centralized or Distributed?&lt;/h1&gt;
&lt;p&gt;看完了partition的相關概念之後，接著就來看看是要將partition放在同一台機器裡(&lt;strong&gt;Centralized&lt;/strong&gt;)，
或是要分散到多台機器中(&lt;strong&gt;Distributed&lt;/strong&gt;)，來討論有何作法及應用場景，
相對應的好壞處、以及相關市面上已經有哪些solution。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/partition-5.jpg&quot; alt=&quot;vertical vs. horizontal partition and centralized vs. distributed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;按照上圖的編號的順序一個一個來討論～&lt;/p&gt;

&lt;h2 id=&quot;multiple-tables-1&quot;&gt;Multiple tables [1]&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;應用場景1&lt;/strong&gt;: 將不常用的欄位拆分出來，比如說你有多頁面都會下這樣的查詢:
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'123'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;只有用到name欄位，但你的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users&lt;/code&gt; table中可能還有description、或是biography等落落長的文字資料，
平常很少用到，如果放在同一個table的話，每次都還需要將不需要的資料讀取進來。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;應用場景2&lt;/strong&gt;: 除了依照使用頻率來拆分之外，也可以依照資料的性質，比如一些不會改變，
會用來做聚合計算(COUNT, AVG)的欄位資料，可以拆分到獨自的table。
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;比如說我只關心訂單的平均價格，但如果&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;orders&lt;/code&gt;table裡包含了所有資訊，類似的query就還是需要將全部的資料都讀取進memory。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;優點&lt;/strong&gt;: 減少不必要讀取，避免佔用server的memory，造成太頻繁的swap。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;缺點&lt;/strong&gt;: 增加了應用程式的複雜度，有些場景需要額外做JOIN來取得資料，而上述的應用場景2，
現在多會搭配一些適合OLAP的dataware house一起使用，對此不太了解但有興趣的朋友，
可以用關鍵字&lt;strong&gt;OLAP&lt;/strong&gt;、&lt;strong&gt;data warehouse&lt;/strong&gt;、&lt;strong&gt;columnar database&lt;/strong&gt;、&lt;strong&gt;column oriented database&lt;/strong&gt;去搜尋。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;table-partition-2&quot;&gt;Table partition [2]&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;應用場景&lt;/strong&gt;: 最常見的就是選擇&lt;strong&gt;時間&lt;/strong&gt;相關的欄位來作為partition key，以下以postgresql為例，
使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;measurement&lt;/code&gt; table中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logdate&lt;/code&gt;作為partition key:
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measurement&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;city_id&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;logdate&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;peaktemp&lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;unitsales&lt;/span&gt;       &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RANGE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measurement_y2021m09&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measurement&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2021-09-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2021-10-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measurement_y2021m10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measurement&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2021-10-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2021-11-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measurement_y2021m11&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measurement&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2021-11-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2021-12-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;並按照每個月的range創建partition。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;優點&lt;/strong&gt;: 常見的access patern可能會是讀取最近的資料，對於比較久以前的資料很少去讀取，所以不需要每次讀取都在一個大的table裡尋找，
藉由partition創造出多的小的table，改善效能。
另外像是如果你有保留政策(retention policy)的話，也變得相當容易去管理，比如說你只保證保留近一個月的資料，
所以超過一個月的partition就直接DROP掉就好了！&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;缺點&lt;/strong&gt;: 跟以下的[3]一起說明～&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;multiple-rdbms-servers-3&quot;&gt;Multiple RDBMS servers [3]&lt;/h2&gt;
&lt;p&gt;終於要進到分散式系統的領域了～ 把一份大的檔案分拆成許多小份，當然也有許多益處，
讀取效能的優化、更易於管理等等，但隨著資料的長大，資料增加的速度越來越快，
總有一天一台機器還是會遇到瓶頸，此時就有了將資料放在多台機器的想法。&lt;/p&gt;

&lt;p&gt;原理都是一樣的，選定一個欄位作為shard key，你的application server將決定這筆資料的要放到哪台DB上，&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/partition-6.jpg&quot; alt=&quot;RDBMS sharding&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;優點&lt;/strong&gt;: 增加了throughput，不管是卡在Disk或是CPU，一台機器不夠寫不夠讀，那你有試過兩台三台十台嗎～&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;缺點&lt;/strong&gt;: application code的複雜度變大了是一定的，除此之外，每個partiton現在已經各自獨立，
跨partition沒有unique constraint、reference constraint，更不可能JOIN
secondary indexes也必須各自去建立，幾乎許多RDBMS提供的好用的功能，在跨partition時都不能用了，
只能在自己的application code上去實現。&lt;/p&gt;

    &lt;p&gt;比如說你想做JOIN，但被referenced的table已經被我們做partition了，application code就必須去到每一台機器裡去找，
然後在程式裡面把資料做結合。&lt;/p&gt;

    &lt;p&gt;舉個例子&lt;/p&gt;
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;          &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orders&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;          &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;我們有&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users&lt;/code&gt;及&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;orders&lt;/code&gt; table，orders的user_id是個foreign key指到users的id，
如果我們今天將users及orders用它們的id做partition了，
則同一個user的orders可能會被分散到不同的機器之中，所以就沒法JOIN拉～&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/partition-7.jpg&quot; alt=&quot;after sharding, not able to join&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;其實這裡的解決方法就是選用user_id作為shard key就好了，但不可能所有的資料集都有辦法使用同樣意義的欄位來做partition。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sharding-in-nosql-4&quot;&gt;Sharding in NoSQL [4]&lt;/h2&gt;
&lt;p&gt;在大數據時代，為了處理大量資料而冒出的許多NoSQL都有的內建功能，
就跟上面講的原理一樣，只不過這次資料庫本身就幫我們把sharding這件事都處理好拉～
不需要我們寫任何一行的code，只需要在configuration file或UI上設置一下就好。&lt;/p&gt;

&lt;p&gt;而面對的問題還是一樣的，所以大部分的NoSQL提供的API都比較簡單，
不像RDBMS有各種constraint，可以JOIN，transaction可以用。&lt;/p&gt;

&lt;p&gt;關於NoSQL怎麼實作sharding的，每種產品也都不同，大家要自己去看他們是如何實作的，shard key怎麼選的，可以自己選嗎?
是range還是hash partition，如何動態增加或減少shard的數量(這部分這篇文章裡沒有討論到)。&lt;/p&gt;

&lt;p&gt;比如說MongoDB可以自己選擇shard key，也可以選擇shard strategy，
大家可以根據自己的use case來調整，詳見&lt;a href=&quot;https://docs.mongodb.com/manual/sharding/&quot; target=&quot;_blank&quot;&gt;MongoDB sharding&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;multiple-services-5&quot;&gt;Multiple services? [5]&lt;/h2&gt;
&lt;p&gt;其實好像沒看到DB做vertical partition，然後把不同的partition分散到不同的機器上的，就算是column oriented的DB，
應該也是用horizontal partition的方式來分散它的資料(不太確定)，如果有人想要補充，歡迎留言～開開孤陋寡聞的我的見識。&lt;/p&gt;

&lt;p&gt;所以這邊我的Multiple services的意思是指，比如說今天你的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users&lt;/code&gt; table有個大頭貼的欄位，或是任何大的document或Blob，
雖然DB也可以存，不過也可以將它拆出來，使用其他的服務像是AWS S3、或是GCP的GCS，好拉，
其實加這個就只是要讓我的表格不會空一格😂&lt;/p&gt;

&lt;h1 id=&quot;總結&quot;&gt;總結&lt;/h1&gt;
&lt;p&gt;今天知道了什麼是partition，有分為vertical及horizontal的，以及該如何做horizontal partition，選定shard key，
以及決定你的shard strategy，不管你是自己做，還是資料庫幫你做好好的，根本的核心概念及會面臨的問題都是一樣的，
有了這些概念，對於不管是自己家系統的架構，或是別的資料庫產品，都有更好地了解，
並更清楚地可以根據適合自己問題場景，選擇適當的作法。&lt;/p&gt;

&lt;p&gt;感謝你的閱讀，有很多地方我可能還是不懂或搞錯的，或是有任何想法，更棒的idea想討論的，都歡迎可以留言唷～ 掰掰👋&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/10/ddl-partitioning.html&quot; target=&quot;_blank&quot;&gt;PostgreSQL: Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-database-sharding&quot; target=&quot;_blank&quot;&gt;Understanding Database Sharding&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/sharding/&quot; target=&quot;_blank&quot;&gt;MongoDB sharding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="system design" /><category term="database" /><summary type="html">什麼是partition，vertical跟horizontal partition有何不同? 阿sharding又是什麼? 這些跟NoSQL有關嗎? 在傳統的RDBMS，像是MySQL或PostgreSQL中，這些概念也有用嗎? 這篇文章將討論上述的問題，看看partition在RDBMS及NoSQL中的實踐應用，以及各種優缺點。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/hash-function-5.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/hash-function-5.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">什麼是Hash Function? 有什麼特性及用途?</title><link href="https://homuchen.com/posts/what-is-hash-function-its-properties-and-usages/" rel="alternate" type="text/html" title="什麼是Hash Function? 有什麼特性及用途?" /><published>2021-11-17T17:52:00+08:00</published><updated>2021-11-17T17:52:00+08:00</updated><id>https://homuchen.com/posts/what-is-hash-function-its-properties-and-usages</id><content type="html" xml:base="https://homuchen.com/posts/what-is-hash-function-its-properties-and-usages/">&lt;p&gt;在之前一篇文章: &lt;a href=&quot;/posts/what-problems-cryptography-to-solve&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;密碼學是什麼? 有何用途以及要解決什麼樣的問題?&lt;/strong&gt;&lt;/a&gt;
中討論過密碼學的出現是為了解決什麼問題，這篇文章要討論密碼學裡一個重要的概念，
&lt;strong&gt;Hash Function&lt;/strong&gt;，其與對稱式加密跟非對稱式加密三者共同構成密碼學裡的核心。&lt;/p&gt;

&lt;h1 id=&quot;賭博遊戲&quot;&gt;賭博遊戲&lt;/h1&gt;
&lt;p&gt;再開始正式的內容之前，先來想個有趣的問題: &lt;strong&gt;賭博中如何防止莊家出老千?&lt;/strong&gt;
比如說我們現在玩骰子遊戲，賭大小，1-3是小，4-6是大，
賭博最怕莊家出老千，莊家看你賭小就作弊讓骰子骰出大，看你賭大就骰小，該如何解決這個問題呢~&lt;/p&gt;

&lt;p&gt;這篇文章講Hash那提出的解法當然跟Hash有關囉，文末再來揭曉，首先先來認識Hash function。&lt;/p&gt;

&lt;h1 id=&quot;什麼是hash-function&quot;&gt;什麼是Hash Function&lt;/h1&gt;
&lt;p&gt;Function就是有一組輸入然後會產生一組輸出，同樣的輸入會產生出同樣的輸出，
而hash function的輸出是&lt;strong&gt;固定長度&lt;/strong&gt;的，不同的hash funtion，所產出長度都不同，
比如說md5為128個bits，sha256顧名思義為256個bits。&lt;/p&gt;

&lt;p&gt;輸出的結果跟輸入的資料相比起來，通常是小很多的，
所以輸出的結果會被稱為&lt;strong&gt;message digest&lt;/strong&gt;，或是直接稱為&lt;strong&gt;hash value&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/hash-function-0.jpg&quot; alt=&quot;hash function&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;hash-function的特性&quot;&gt;Hash function的特性&lt;/h1&gt;
&lt;p&gt;接下來我們來看看好的hash function還具有其他哪些特性，可以使得他在密碼學裡佔有一席之地。&lt;/p&gt;

&lt;h2 id=&quot;irreversibility&quot;&gt;Irreversibility&lt;/h2&gt;
&lt;p&gt;不可逆的，單向的，就是說當我們得到一個hash funcition的output時，我們無法反推出其input，&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/hash-function-1.jpg&quot; alt=&quot;hash function: irreversibility&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;collision-resistance&quot;&gt;Collision Resistance&lt;/h2&gt;
&lt;p&gt;什麼是碰撞? 就是說當有兩個不同的輸入，經過hash function的計算後，得到了一樣的結果時，就是碰撞。&lt;/p&gt;

&lt;p&gt;比如說我們的hash function是將輸入除以5的餘數，這樣當我們的input是1、6、11、16等等等的時候，
所得到的ouput都是1，就碰撞了。&lt;/p&gt;

&lt;p&gt;所以如果一個好的hash function是collision resistance的話，當我們看到兩個不相同的hash value時，
我們就知道他們倆的input也是不相同，反之亦然，當看到兩個相同的hash value時，
我們就知道它是由兩個一樣的input所以計算出來的，因為他不會碰撞，不會有多個input對應到同一個output。&lt;/p&gt;

&lt;h1 id=&quot;用途&quot;&gt;用途&lt;/h1&gt;
&lt;p&gt;Hash Function就是做出&lt;strong&gt;承諾&lt;/strong&gt;、&lt;strong&gt;指紋&lt;/strong&gt;、&lt;strong&gt;識別&lt;/strong&gt;的方法，怎麼說呢？
接下來我們來看看在哪些地方有用到hash function吧!&lt;/p&gt;

&lt;h2 id=&quot;承諾&quot;&gt;承諾&lt;/h2&gt;
&lt;p&gt;比如現在要做出愛妻承諾，我們將10條的愛妻守則經過hash function計算的到一個hash value，
這個value就是一個承諾。承諾就是不會改變的東西，如果我們偷偷地更改了愛妻守則裡的其中一個字，
因為改變太微小了，老婆可能不會發現，但只要再經過hash function計算過後，就會發現hash value完全不一樣了～&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/hash-function-2.jpg&quot; alt=&quot;hash function: commitment&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如此一般，hash value的一致可以用來保障我們原始資料是沒有改變的，可以被用在下列這幾個地方:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;檔案校正碼&lt;/li&gt;
  &lt;li&gt;下載安裝檔&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用來確定我們收到的檔案是沒有損毀的，以及我下載下來要安裝的東西，不是被惡意的第三方給改過的！&lt;/p&gt;

&lt;h2 id=&quot;隱密的承諾&quot;&gt;隱密的承諾&lt;/h2&gt;
&lt;p&gt;除了是承諾之外，它還可以是隱密的承諾，也就是說我知道你做了一個承諾，
但我不知道你承諾的內容是什麼，因為hash function具有不可逆的特性，
但你可能會說這有什麼用嗎~讓我們來看看吧！&lt;/p&gt;

&lt;h3 id=&quot;密碼儲存&quot;&gt;密碼儲存&lt;/h3&gt;
&lt;p&gt;當我們使用密碼登入別人的服務時，伺服器要知道使用者的密碼輸入的對不對，那它就要記錄下大家的密碼，
日後使用者登入的時候才可以比對。不過要是伺服器被駭客侵入，
或透過其他的方式取得這份使用者密碼清單，那代誌就大條了😱&lt;/p&gt;

&lt;p&gt;所以通常伺服器資料庫都不會直接把密碼紀錄下來，而是將密碼hash過後，再將hash value存起來，
如此一來就算駭客得到這些hash values，也無法得知原本的密碼是什麼，而每次使用者登入的使用，
只要再將他輸入的密碼hash過一次，然後跟資料庫裡的比對，一樣的話就代表使用者輸入了正確的密碼了，
在這裡這個承諾就是密碼本身。&lt;/p&gt;

&lt;h2 id=&quot;識別&quot;&gt;識別&lt;/h2&gt;
&lt;p&gt;因為hash value是固定長度的，可以將它當作一份資料的識別，比如說身分證字號就是使用一位英文加上九位數字，
來代表著某一位台灣人。&lt;/p&gt;

&lt;h3 id=&quot;git&quot;&gt;Git&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit d9a1e4f5f1fe19b05bafb4176b2c9a6b89c14bc9 (HEAD -&amp;gt; master)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;相信會使用git的大家對這樣的文字不陌生，
其中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d9a1e4f5f1fe19b05bafb4176b2c9a6b89c14bc9&lt;/code&gt;就是將這個commit版本中的所有檔案作為input，使用SHA1 hash出來的，
長度為160個bits，也就是40個hexadecimal的字母，他就作為這個commit的識別。&lt;/p&gt;

&lt;h3 id=&quot;uuid-v3uuid-v5&quot;&gt;UUID v3、UUID v5&lt;/h3&gt;
&lt;p&gt;這兩個版本分別使用MD5及SHA1，由於v5使用SHA1會生成160bits的hash value，會將其截斷為128bits。&lt;/p&gt;

&lt;h1 id=&quot;賭博遊戲的解法&quot;&gt;賭博遊戲的解法&lt;/h1&gt;
&lt;p&gt;現在要來解決文章開頭的問題了～利用的就是hash function的隱密的承諾的特性，提出的解法如下:&lt;/p&gt;

&lt;p&gt;玩家可以先將他要下的賭注hash過，得到一串看不懂的東西，然後公開這串hash value，
由於不可逆的特性的關係，莊家看不懂玩家到底是賭大還是賭小，等開出結果之後，
玩家再公布他的賭注，並將此再hash一遍，如果得出的hash value一樣，
玩家就可以宣稱他看到骰子開獎之後才公布的賭注跟原先的賭注是一樣的，酷吧😎&lt;/p&gt;

&lt;h1 id=&quot;總結&quot;&gt;總結&lt;/h1&gt;
&lt;p&gt;感謝你的閱讀～ 這篇文章簡單地介紹了什麼是hash function，以及它具有哪些特性，
還有其用途，包括檔案校正、密碼儲存、git commit、uuid等等…&lt;/p&gt;

&lt;p&gt;在密碼學中，還會搭配對稱式及非對稱式加密來達成一些其他的任務，
比如說訊息驗證碼(message authentication code)、數位簽章(digital signature)等等…
後續會再慢慢介紹以上的東西，掰掰～ 👋&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="crypto" /><summary type="html">在之前一篇文章: 密碼學是什麼? 有何用途以及要解決什麼樣的問題? 中討論過密碼學的出現是為了解決什麼問題，這篇文章要討論密碼學裡一個重要的概念， Hash Function，其與對稱式加密跟非對稱式加密三者共同構成密碼學裡的核心。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/hash-function-0.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/hash-function-0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">[讀書筆記] 原子習慣: 細微改變帶來巨大成就的實證法則</title><link href="https://homuchen.com/posts/book-note-atomic-habits/" rel="alternate" type="text/html" title="[讀書筆記] 原子習慣: 細微改變帶來巨大成就的實證法則" /><published>2021-11-14T21:36:00+08:00</published><updated>2021-11-14T21:36:00+08:00</updated><id>https://homuchen.com/posts/book-note-atomic-habits</id><content type="html" xml:base="https://homuchen.com/posts/book-note-atomic-habits/">&lt;p&gt;&lt;a href=&quot;https://www.books.com.tw/products/0010822522&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;《原子習慣》&lt;/strong&gt;&lt;/a&gt;
這本書收首先帶我們了解到習慣是什麼，它就是我們平常不太會去注意到，
卻是很大地影響我們人生的一件事，更清楚地認識了習慣及其重要之後，
作者將習慣拆解成四個階段，提出一個框架，好讓我們可以一步一步地培養好習慣、斷除壞習慣。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/self-improvement-books-1.jpg&quot; alt=&quot;書: 原子習慣&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;習慣是什麼&quot;&gt;習慣是什麼&lt;/h1&gt;
&lt;p&gt;習慣佔據你人生的八、九成，試想一下每天醒來，躺在床上滑一下手機，
走去浴室刷牙洗臉，要不要吃早餐，早餐要吃什麼，通勤去上班的路上在做什麼，
工作時如何面對同事，面對事情是如何處理，下班了之後要做什麼，要去運動嗎?
還是回家躺在沙發上耍廢，該準時就寢嗎？還是東摸摸西摸摸又到了半夜了，
跟人聊天會抱怨最近發生的負面的事嗎？&lt;/p&gt;

&lt;p&gt;上述說的這些事，你都不需要在當下耗費心思去做選擇，而是不假思索地反應出來，
但他們就是你現在會成為怎樣的人的根本原因。因為習慣做起來毫不費力，
而且頻率很高，經過時間的累積後，影響將會慢慢顯現，變得越來越巨大。&lt;/p&gt;

&lt;h1 id=&quot;專注系統而非目標&quot;&gt;專注系統，而非目標&lt;/h1&gt;
&lt;p&gt;這就有點像是被動收入，專注於打造每天每個月的現金流，而不是獲得一大筆錢，
被動現金流一旦打造完成之後，無時無刻都可以為你帶來收益。
但如果你是將目標放在獲得某筆金額，過程中可能會很辛苦，
並且有人可能還會無所不用其極地來達成，比如說超時工作、
想辦法投機股票、加密貨幣、偷搶拐騙等等等…&lt;/p&gt;

&lt;p&gt;專注於系統就像是好好地養好一隻會生金蛋的雞一樣，照顧好雞本身，
自然會帶給你金蛋，如果只專注於目標，就有可能做出殺雞取卵般的行為，
所以好習慣就是一隻好雞🐔！&lt;/p&gt;

&lt;p&gt;專注於目標也有其他的壞處，比如說你的目標是減重10公斤，
除了可能會用激進的手段來達成之外，也可能在費盡千辛萬苦終於達成之後，
你就沒有動力繼續保持健康的生活又復胖，更多的可能是就中途放棄，沒有意志力再進行下去。&lt;/p&gt;

&lt;p&gt;所以該怎麼辦呢？這本書給出解答就是透過習慣來達成你的目標，
藉由每天的小勝利，讓你成為你想要成為的人，只要知道終點在哪個方向(首先你也要知道方向)，
每天有朝著那個方向前進就好，而且重點是&lt;strong&gt;不自覺地，輕鬆地&lt;/strong&gt;前進，
而不用依靠自制力，人的&lt;strong&gt;自制力是有限的&lt;/strong&gt;，每天都依靠意志力，總有一天會累歪的😫&lt;/p&gt;

&lt;h1 id=&quot;四步驟&quot;&gt;四步驟&lt;/h1&gt;
&lt;p&gt;所以該如何打造自己的習慣系統呢? 作者提出了一個框架，將一個習慣的組成拆解如下:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;提示 -&amp;gt; 渴望 -&amp;gt; 回應 -&amp;gt; 獎賞&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我們從環境中、或是固定的時間地點接收到了提示刺激，引起了我們的渴望，
接著為了滿足那個渴望，我們做出了回應，也就是一些行為，最後得到了獎賞來滿足那些渴望，
得到獎賞便增強了整件事的迴路，下次只要遇到一樣的情況，大腦便會想做一樣的事，因為他期待會獲得獎賞。&lt;/p&gt;

&lt;p&gt;以吃垃圾食物為例，我們可能到了週五晚上回到家，經歷了一週辛苦的工作準備迎接週末時，
洗了個舒服的澡，坐上沙發，以上這些時間地點的提示，就觸發我們想要耍廢的渴望，
於是乎，我們做出了回應，打開電視打開Netflix，準備好零食飲料，開始耍廢～
立刻地，我們得到了影劇的刺激，以及充滿糖分、脂肪、鹽分的食物的滿足，大腦覺得開心，
便增強了我們未來繼續如此作為的可能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/book-note-atomic-hanit-0.jpg&quot; alt=&quot;習慣四階段: 提示、渴望、回應、獎賞&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所以該怎麼培養好習慣，剷除壞習慣呢～作者分別對這個階段提出可行動的方案及建議，
幫助你過關斬將，往好的方向前進～&lt;/p&gt;

&lt;h1 id=&quot;提示&quot;&gt;提示&lt;/h1&gt;
&lt;p&gt;所有的習慣始於提示，提示可能是某個特定的時間地點，也可能是來自環境中的某個訊號。&lt;/p&gt;
&lt;h2 id=&quot;環境中的提示&quot;&gt;環境中的提示&lt;/h2&gt;
&lt;p&gt;有個實驗是這樣的，在醫院的自助餐裡，改變可樂跟瓶裝水的擺放位置，
將瓶裝水跟可樂交換放到明顯的位置，結果一句話都不用說，就改變了人們的行為，
瓶裝水的銷量上升了兩成左右，而可樂的銷量則下滑。&lt;/p&gt;

&lt;p&gt;當我們在家裡，客廳桌上就擺著洋芋片，就算我們本來沒有想吃，也非常有可能隨手就拿起來吃了，
如果放的是健康的水果，你吃的就不會是洋芋片而會是水果; 如果想養成看書的習慣，
或許可以在早上整理完床鋪後，放一本書在床頭櫃上; 想認真工作的時候，就不要在有電視的地方，
把手機丟得離自己遠遠的，以免不時就打開電視或拿起手機滑滑。&lt;/p&gt;

&lt;p&gt;另外，空間的用途最好固定，在床上就是要睡覺，書桌就是要工作的地方，想娛樂時去到客廳，
擁有一個小角落來看書，當我們想要做某件事時，就去到特定的地方，如此一來，
身邊的環境也可以幫助我們開始做特定的事。&lt;/p&gt;

&lt;h2 id=&quot;習慣堆疊&quot;&gt;習慣堆疊&lt;/h2&gt;
&lt;p&gt;提示也可以是自己的某個行為，所以習慣堆疊這招，就是要利用我們原先已經擁有的習慣來作為提示，
比如說每天早上可能我們會沖杯咖啡，那可以再準備完咖啡，坐到位子上時，就先看10分鐘的書，
或是工作時，拿起手機要滑時，就做10下伏地挺身，在原有的習慣做完之後，
立馬接上自己想要習慣。&lt;/p&gt;

&lt;h1 id=&quot;渴望&quot;&gt;渴望&lt;/h1&gt;
&lt;p&gt;接收到提示之後，我們會產生渴望，Friday night使我們有想要放鬆的渴望，
看到飲料零食使我們有想要吃它喝它的渴望，所以我們可以為我們想要的習慣創造出渴望。&lt;/p&gt;

&lt;p&gt;有個工程師(不是我)想要培養運動的習慣，他也非常愛看Netflix，所以他將他的跑步機跟電腦改裝，
只有當他在跑步的時候，才可以打開Netflix😂&lt;/p&gt;

&lt;p&gt;你也可以規定自己當做完需要做的習慣時，才能去做想要的事，把渴望跟需要做的事捆綁在一起，
也可以跟上述的習慣堆疊合在一起應用，在做完&lt;strong&gt;既有&lt;/strong&gt;的習慣後，去做&lt;strong&gt;需要&lt;/strong&gt;的習慣，然後才能做&lt;strong&gt;想要&lt;/strong&gt;的習慣。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/book-note-atomic-hanit-1.jpg&quot; alt=&quot;習慣堆疊 + 渴望綑綁&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;回應&quot;&gt;回應&lt;/h1&gt;
&lt;p&gt;回應指的就是你真正去做的那件事的行為，該如何設計你的回應好讓我們養成新的習慣呢!&lt;/p&gt;
&lt;h2 id=&quot;容易去做&quot;&gt;容易去做&lt;/h2&gt;
&lt;p&gt;當要去做一個行為的阻力太大時，我們就很可能會放棄。&lt;/p&gt;

&lt;p&gt;假如你像要養成去健身房運動，但你卻選了個健身房離你家30分鐘路程的地方，
每次當你想去運動，除了要克服想偷懶的心魔外，還要加上30分鐘路程的艱辛。&lt;/p&gt;

&lt;p&gt;相反地，當你想要阻止自己去做一個壞習慣時，要讓他變得困難，比如說看完電視，
就把電視機整台收進倉庫裡，每次要看的時候，都要把電視從倉庫中搬出來，再接線，
有時候因為懶，就不會再去做那些自己想要去除的壞習慣了。&lt;/p&gt;

&lt;h2 id=&quot;重複勝於時間次數勝於質量&quot;&gt;重複勝於時間，次數勝於質量&lt;/h2&gt;
&lt;p&gt;有一門攝影課做了以下的實驗，將學生分成了兩組，一組在整個學期中只要繳交一次期末成品，
一次定生死，而另一組則是要求學生每週都要繳交練習作業，&lt;/p&gt;

&lt;p&gt;想要運動嗎？每天做一下伏地挺身也行，沒錯！就是一下; 想要跑步嗎？先從一個禮拜去散步三次也好，
一件事如果是你無法想像你可以持續一生都堅持在做的話，就一定不會持久。&lt;/p&gt;

&lt;p&gt;與其新年新希望，在年初雄心壯志一週上三次健身房，然後做了幾週半途而廢，
不如每天從散步，做一下伏地挺身開始，持之以恆，久而久之，
你可以會開始在散步途中跑個100個公尺，或是都做一下伏地挺身了，就開始做了第二下、第三下…&lt;/p&gt;

&lt;h1 id=&quot;獎賞&quot;&gt;獎賞&lt;/h1&gt;
&lt;p&gt;做完一個習慣後，如果我們得到了獎賞便會增強這個習慣，但如果這個獎賞來的太慢，可能會被我們忽略，
試想一下所有的壞習慣，獎賞都是來得又快又即時，抽菸時尼古丁立刻進入我們身體當中，
吃垃圾食物時馬上覺得滿足～ 看劇時立即享受到感官的刺激，而壞處卻是可能很久之後才會來，
我們人類往往都是短視近利的，所以必須讓我們想要培養的習慣有獎賞之外，還要讓它來的即時。&lt;/p&gt;

&lt;h2 id=&quot;創造立即獎賞&quot;&gt;創造立即獎賞&lt;/h2&gt;
&lt;p&gt;如果我們想要培養的習慣可能就是沒辦法帶來立即的獎賞該怎麼辦呢?&lt;/p&gt;

&lt;p&gt;有時成功完成習慣帶來的勝利感成就感本身就是很好的獎賞了，在均衡飲食、去運動完後，
覺得自己真是一個健康的人～強化了成為自己想成為的人的形象，就是很棒的事了，
除此之外還可以透過一些方法來創造獎賞。&lt;/p&gt;

&lt;p&gt;比如說你想要省錢，每次阻止自己亂花錢時，總是心力交瘁，花了很多的意志力終於阻止自己花錢
，但卻只是讓自己不去做一件事，而沒有得到什麼，這時候，不妨將成功省下來的錢，存入另一個帳戶，
這個帳戶可以用來資助自己想做的事，想完成的夢想，如此一來，每次省錢時就有得到一個立即的獎賞的感覺，
也就是在自己的旅遊、美食或夢想帳戶中添上一筆。&lt;/p&gt;

&lt;p&gt;另外也能透過紀錄的方式，為自己每次成功執行一下習慣時記下一筆，有時為了不想讓紀錄中斷，
也是一種動力！&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;感謝您的閱讀～ 讀完這本書後，知道了不要再依賴意志力來逼自己達成目標，
而是可以透過許多方法來設計自已，讓自己掉下好習慣的陷阱，不知不覺中，
每天往好的方向前進! 期許大家都能每天每天讓自己更加成長一咪咪🤏🎉&lt;/p&gt;

&lt;p&gt;最後跟大家分享我應用所學，在生活中培養新習慣的故事(陸續新增):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/posts/lazy-breakfast/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;懶人早餐: 15分鐘，高纖高蛋白低碳水&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="books" /><category term="self improvement" /><category term="habit" /><summary type="html">《原子習慣》 這本書收首先帶我們了解到習慣是什麼，它就是我們平常不太會去注意到， 卻是很大地影響我們人生的一件事，更清楚地認識了習慣及其重要之後， 作者將習慣拆解成四個階段，提出一個框架，好讓我們可以一步一步地培養好習慣、斷除壞習慣。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/book-note-atomic-hanit-0.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/book-note-atomic-hanit-0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">台北捷運在疫情期間各站的進出人數</title><link href="https://homuchen.com/posts/mrt-transportation-volume-during-pandemic/" rel="alternate" type="text/html" title="台北捷運在疫情期間各站的進出人數" /><published>2021-11-11T16:04:00+08:00</published><updated>2021-11-11T16:04:00+08:00</updated><id>https://homuchen.com/posts/mrt-transportation-volume-during-pandemic</id><content type="html" xml:base="https://homuchen.com/posts/mrt-transportation-volume-during-pandemic/">&lt;p&gt;COVID-19爆發以來，台灣人民的生活跟世界其他國家相比，受到的影響相對較小，
以下將分享台北捷運各站，在疫情期間(2020-01 ~ 2021-09)，每個月的進出站人數資料數據。&lt;/p&gt;

&lt;h1 id=&quot;資料來源&quot;&gt;資料來源&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://data.taipei/#/dataset/detail?id=63f31c7e-7fc3-418b-bd82-b95158755b4d&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;臺北捷運各站分時進出量統計&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上述連結中的原始資料中，有每個小時從A站進到B站出的人數，每月近一千萬筆的資料，
在下將其整理為每月某站的總進出站人數&lt;/p&gt;

&lt;h1 id=&quot;各站進出人數&quot;&gt;各站進出人數&lt;/h1&gt;
&lt;p&gt;以下橫軸時間為&lt;strong&gt;2020-01 ~ 2021-09&lt;/strong&gt;，縱軸單位為&lt;strong&gt;百萬人&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;台北車站&quot;&gt;台北車站&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/mrt-data-taipei-stattion-0.jpg&quot; alt=&quot;捷運台北車站每月進出站人數&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;忠孝復興&quot;&gt;忠孝復興&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/mrt-data-忠孝復興-0.jpg&quot; alt=&quot;捷運忠孝復興每月進出站人數&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;西門&quot;&gt;西門&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/mrt-data-西門-0.jpg&quot; alt=&quot;捷運西門站每月進出站人數&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;板橋&quot;&gt;板橋&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/mrt-data-板橋-0.jpg&quot; alt=&quot;捷運板橋站每月進出站人數&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;士林&quot;&gt;士林&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/mrt-data-士林-0.jpg&quot; alt=&quot;捷運士林站每月進出站人數&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;結論&quot;&gt;結論&lt;/h1&gt;
&lt;p&gt;可以看出各站的趨勢都大同小異，在2020年初小量下滑，在2021五月開始，搭乘捷運的人數大量地縮減。
另外12月時板橋站有特別多人可能是耶誕城的關係🎄🎅。&lt;/p&gt;

&lt;p&gt;以上只簡單列出幾站的資料，如果想要看別的站或是想要確切原始數據的話可以跟我說～除此之外，
還想知道其他問題的話也可以問我，比如說總進出人數最多的站前幾名，成長或衰退最多的站是哪些?
等等問題。以上就是這次的分享囉，掰掰～👋&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="生活" /><summary type="html">COVID-19爆發以來，台灣人民的生活跟世界其他國家相比，受到的影響相對較小， 以下將分享台北捷運各站，在疫情期間(2020-01 ~ 2021-09)，每個月的進出站人數資料數據。</summary></entry><entry><title type="html">Nodejs: 如何逐行讀取檔案，或使用Unix pipe與其他process互動</title><link href="https://homuchen.com/posts/nodejs-how-to-read-from-file-line-by-line-and-use-shell-pipe-with-nodejs-process/" rel="alternate" type="text/html" title="Nodejs: 如何逐行讀取檔案，或使用Unix pipe與其他process互動" /><published>2021-11-09T10:00:00+08:00</published><updated>2021-11-09T10:00:00+08:00</updated><id>https://homuchen.com/posts/nodejs-how-to-read-from-file-line-by-line-and-use-shell-pipe-with-nodejs-process</id><content type="html" xml:base="https://homuchen.com/posts/nodejs-how-to-read-from-file-line-by-line-and-use-shell-pipe-with-nodejs-process/">&lt;p&gt;這篇文章將介紹如何使用Nodejs的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;readline&lt;/code&gt; module來一行一行地讀取檔案，
接著既然都可以從檔案中逐行讀取了，那也可以從standard input中逐行讀取吧，
如此一來，就可以跟其他linux command一樣，一起使用pipe！像下面這樣:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;words.txt | node wc.js
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;readline&quot;&gt;readline&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;createInterface:&lt;/strong&gt;&lt;br /&gt;
首先使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;readline.createInterface()&lt;/code&gt;，需要一個input參數，他需要是一個&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stream.Readable&lt;/code&gt;，
這裡我們使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fs.createReadStream()&lt;/code&gt;打開我們的檔案，並作為input，傳給createInterface。&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createReadStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./words.txt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Event: “line”&lt;/strong&gt;&lt;br /&gt;
接著就可以監聽&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;line&lt;/code&gt; event，每當從input讀取到換行(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\r&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\r\n&lt;/code&gt;)，line event就會被發送。
callback function有一個參數，它是個字串。
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Event: “close”&lt;/strong&gt;&lt;br /&gt;
當input stream結束的時候，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;close&lt;/code&gt; event就會被發送。
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;完整程式碼&quot;&gt;完整程式碼&lt;/h2&gt;
&lt;p&gt;最後我們就利用上面的資訊，寫一隻&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wc.js&lt;/code&gt;，來計算檔案中每個字出現的次數，將結果以JSON的格式輸出至stdout上。&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createReadStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./words.txt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;unix-pipe&quot;&gt;unix pipe&lt;/h1&gt;
&lt;p&gt;這邊示範如何從stdin中讀取資料流，就可以使用shell pipe ( | )，讀取來自前一個程式的output了。&lt;/p&gt;

&lt;p&gt;只需將&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;readline.createInterface&lt;/code&gt;&lt;/strong&gt;的input參數，從&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fs.createReadStream('./words.txt')&lt;/code&gt;&lt;/strong&gt;改成
&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;process.stdin&lt;/code&gt;&lt;/strong&gt;就行了！因為他們都是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stream.Readable&lt;/code&gt;的implementation。&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//只改了這行&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;summary&quot;&gt;summary&lt;/h1&gt;
&lt;p&gt;感謝你的閱讀～ 這篇文章示範了如何使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;readline&lt;/code&gt;模組來逐行讀取檔案，
並且看到了兩個&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stream.Readable&lt;/code&gt;的實例，體會到了stream的好用之處。&lt;/p&gt;

&lt;p&gt;另外我還有寫過另一篇一樣功能，只不過是用golang寫的，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stream.Readable&lt;/code&gt;可以類比為golang中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;io.Reader&lt;/code&gt;
，有興趣的可以看看:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/posts/golang-how-to-read-from-file-line-by-line-and-use-shell-pipe-with-go-process/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;[Golang] 如何逐行讀取檔案，或使用shell pipe到go process&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;其他stream的實例:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/posts/how-to-stream-data-from-blob-storage-at-http-server-using-azure-and-express/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;How to stream data from Blob Storage at your HTTP server using Azure and express.js&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="node.js" /><category term="linux" /><summary type="html">這篇文章將介紹如何使用Nodejs的readline module來一行一行地讀取檔案， 接著既然都可以從檔案中逐行讀取了，那也可以從standard input中逐行讀取吧， 如此一來，就可以跟其他linux command一樣，一起使用pipe！像下面這樣:</summary></entry><entry><title type="html">密碼學是什麼? 有何用途以及要解決什麼樣的問題?</title><link href="https://homuchen.com/posts/what-problems-cryptography-to-solve/" rel="alternate" type="text/html" title="密碼學是什麼? 有何用途以及要解決什麼樣的問題?" /><published>2021-11-07T13:30:00+08:00</published><updated>2021-11-17T17:52:00+08:00</updated><id>https://homuchen.com/posts/what-problems-cryptography-to-solve</id><content type="html" xml:base="https://homuchen.com/posts/what-problems-cryptography-to-solve/">&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;如何在有惡意的第三方的情況下安全的通訊&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;密碼學要解決的問題大概可以以上面這一句話來概括，這篇文章主要的目的，
就是要來深入探討這句話，通訊的本質是什麼，會面臨什麼問題，
以及什麼樣才是&lt;strong&gt;安全&lt;/strong&gt;的通訊，要達到哪些目標才算安全呢?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/why-cryptography-0.jpg&quot; alt=&quot;what is communication and cryptography?&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;通訊-communication&quot;&gt;通訊 (communication)&lt;/h1&gt;
&lt;h2 id=&quot;什麼是通訊&quot;&gt;什麼是通訊&lt;/h2&gt;
&lt;p&gt;就是將信息(message)由一方傳達到另一方，比如說對話、傳小紙條、寫信或Email、傳LINE、
通電話、上網看網頁、使用社群網站等等等… 各式各樣的訊息，在各處流動，尤其是現在網際網路發達的時代，
訊息的來源可能來自世界各地，更多元、更即時、也更大量。&lt;/p&gt;

&lt;h2 id=&quot;惡意第三方&quot;&gt;惡意第三方&lt;/h2&gt;
&lt;p&gt;試想一下，你在跟人對話，旁邊有人在偷聽; 視線範圍內沒人，但卻隔牆有耳;
小時候在教室裡傳紙條，被中間的同學打開來看; 特務電影中，駭客在路邊的一台小車裡，
監聽著你撥打的電話; 以上的種種的例子，都是有第三方得到了別人中間通信的內容。&lt;/p&gt;

&lt;h2 id=&quot;通訊的媒介都是公開的&quot;&gt;通訊的媒介都是公開的&lt;/h2&gt;
&lt;p&gt;我們在跟別人講話，訊息在空氣中透過聲波傳送; 我們傳紙條寫信，將信息寫在紙上傳遞;
古代打仗，有傳令兵、馬拉松跑者，帶著重要的情報在路上奔波; 
講電話時，則是將訊息轉化為電磁波發送出去。&lt;/p&gt;

&lt;p&gt;不管你用的通訊方法是哪個，都需要一個媒介來傳遞，而這個媒介是&lt;strong&gt;公開&lt;/strong&gt;的!
沒有辦法阻止別人來讀取當中的資料，就算你是有護衛的傳令兵，也可能被殺了然後被奪取令旗。&lt;/p&gt;

&lt;h1 id=&quot;密碼學的出現&quot;&gt;密碼學的出現&lt;/h1&gt;
&lt;p&gt;所以密碼學的出現，就是為了解決以上的問題，在古代戰爭中已經有許多的密碼學的蹤跡，
世界大戰時，破解德軍加密過的訊息，也是當時戰爭中相當重要的一環。&lt;/p&gt;

&lt;h1 id=&quot;什麼是安全&quot;&gt;什麼是安全&lt;/h1&gt;
&lt;p&gt;上述所舉的例子，其實只提到安全其中的一個部分，也就是信息不想被第三方看到，
但其實還有其他可能被惡意攻擊的面相，以下就來討論，要達到所謂的安全，需要顧到的環節。&lt;/p&gt;

&lt;p&gt;以下將用一個例子來說明，假設有兩個人名為Alice跟Bob，他們倆是筆友，透過寫實體信的方式互通往來，
而有一個壞人Charlie想要偷看信件並破壞兩方感情，來看看Charlie有哪些招數可以用吧。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/why-cryptography-1.jpg&quot; alt=&quot;communication in adverities&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;偷看-sniffing&quot;&gt;偷看 (Sniffing)&lt;/h2&gt;
&lt;p&gt;Charlie要做壞事的第一步，當然就是先偷看他們通信的內容是什麼？只要到收信者的信箱那邊等，
或是去找郵差襲擊他，都可以達到這個目地，把信拿出來看一看再放回去，Alice跟Bob的甜言蜜語，
或是要約會的時間地點都會被知道。&lt;/p&gt;

&lt;h2 id=&quot;竄改-tempering&quot;&gt;竄改 (Tempering)&lt;/h2&gt;
&lt;p&gt;再更進一步，Charlie可以將信中的內容做更改，比如說約會時間為下午1點，可以改成4點、7點、10點，
這跟提款單或支票使用數字要用大寫是一樣的意思，就是為了防止內容被修改過卻看不出來。&lt;/p&gt;

&lt;h2 id=&quot;冒充-impersonation&quot;&gt;冒充 (Impersonation)&lt;/h2&gt;
&lt;p&gt;如果Charlie有辦法模仿他們的字跡，就可以直接寫一封新的信！在真實世界中，我們就是透過字跡、簽名，
來認證信息的來源是不是本人，但不乏看過許多冒用簽名的例子。&lt;/p&gt;

&lt;p&gt;通話的話是使用聲音，視訊可以看長相，但聲音也可以合成，影像也可以，看看最近當紅的小玉deepfake風暴就知道了，
所以到底該如何證明一份訊息的來源是真的出自本人，也是一個重要的問題！&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;感謝你的閱讀～ 今天學習到了密碼學的目的，了解到通訊不安全的本質，壞人可能透過哪些方法來做壞事，
包括偷看、竄改及冒充。&lt;/p&gt;

&lt;p&gt;該如何怎麼防範這些問題，就是密碼學的核心，至於密碼學是如何做到這些事的，
這篇文章還沒有說明，之後有機會再補上!
如果有人留言敲碗要的話，我就立馬開始寫！哈哈，掰掰～👋&lt;/p&gt;

&lt;h1 id=&quot;延伸閱讀陸續新增&quot;&gt;延伸閱讀(陸續新增)&lt;/h1&gt;
&lt;p&gt;陸續將密碼學相關文章補上～&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/posts/what-is-hash-function-its-properties-and-usages&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;什麼是Hash Function? 有什麼特性及用途?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="crypto" /><summary type="html">如何在有惡意的第三方的情況下安全的通訊</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/why-crytpography-0.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/why-crytpography-0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">[Golang] 如何逐行讀取檔案，或使用shell pipe到go process</title><link href="https://homuchen.com/posts/golang-how-to-read-from-file-line-by-line-and-use-shell-pipe-with-go-process/" rel="alternate" type="text/html" title="[Golang] 如何逐行讀取檔案，或使用shell pipe到go process" /><published>2021-11-05T13:00:00+08:00</published><updated>2021-11-05T13:00:00+08:00</updated><id>https://homuchen.com/posts/golang-how-to-read-from-file-line-by-line-and-use-shell-pipe-with-go-process</id><content type="html" xml:base="https://homuchen.com/posts/golang-how-to-read-from-file-line-by-line-and-use-shell-pipe-with-go-process/">&lt;p&gt;這篇將示範如何用go的bufio，開啟檔案並且一行一行地讀取資料，
最後示範直接用unix pipe將資料pipe給我們的go程式，做到像下面這樣的事:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;words.txt | go run ./wc.go
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;bufioscanner&quot;&gt;bufio.Scanner&lt;/h1&gt;
&lt;p&gt;我們將使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bufio.Scanner&lt;/code&gt;來一行一行地讀取檔案內容，先看看會用到的function們的signature:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;func NewScanner(r io.Reader) *Scanner&lt;/li&gt;
  &lt;li&gt;func (s *Scanner) Scan() bool&lt;/li&gt;
  &lt;li&gt;func (s *Scanner) Text() string&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;bufio之所以叫做bufio，就是因為他在io的基礎上，加上了buffer，
這邊我們使用的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bufio.Scanner&lt;/code&gt;，一樣是從&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;io.Reader&lt;/code&gt;裡Read資料出來，但會先將資料存在他的buffer裡面，
呼叫&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text()&lt;/code&gt;可以拿到資料，呼叫&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scan()&lt;/code&gt;則是叫他繼續讀取下一筆資料。&lt;/p&gt;

&lt;p&gt;預設上，每一次Scan就是讀取一行，如果回傳值為&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;就代表已經沒有資料了，
除了一次讀取一行之外，還有其他的方式，但今天這裡就不介紹了～&lt;/p&gt;

&lt;h1 id=&quot;範例程式&quot;&gt;範例程式&lt;/h1&gt;
&lt;p&gt;以下示範讀取一個檔案(words.txt)，算出每一行的字出現幾次，並將結果打印至螢幕上:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;words.txt: &lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;apple
banana
orange
apple
apple
orange
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wc.go:&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;bufio&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;io&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;log&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;os&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./words.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fatalf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;error when reading file with message: %v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;wc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scanner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bufio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewScanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s: %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;shell-pipe&quot;&gt;Shell Pipe&lt;/h1&gt;
&lt;p&gt;既然我們已經可以從檔案中一行一行讀取資料了，那要不要試試看這樣！
利用shell pipe從上一個程式的stdout中讀取資料。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;words.txt | go run ./wc.go
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;想要達成上面的用法，相當簡單，只要把我們wc function的參數，從使用&lt;strong&gt;*os.File&lt;/strong&gt;改成&lt;strong&gt;os.Stdin&lt;/strong&gt;就行了～
因為他們都有implement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;io.Reader&lt;/code&gt;，也就是main function變成如下:&lt;/p&gt;
&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;wc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;separate-io-from-logic&quot;&gt;Separate IO from Logic&lt;/h1&gt;
&lt;p&gt;前面我們將wc算完的結果，直接&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fmt.Printf&lt;/code&gt;到stdout上，但有時如果我們想寫到檔案裡，
或是寫到network socket時，就不太方便。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wc&lt;/code&gt;應該只專注在word count一件事上就好，
不需要管input是從哪裡來的，就像前面我們使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*os.File&lt;/code&gt;後面用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.Stdin&lt;/code&gt;一樣，
也不用管output要寫到哪裡去，所以我們再將程式改寫如下:&lt;/p&gt;
&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;os&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;io&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;bufio&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;wc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scanner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bufio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewScanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%s: %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wc&lt;/code&gt;就只管將結果寫到一個可以寫的地方，至於它是什麼地方，就由呼叫他的人來決定！&lt;/p&gt;

&lt;p&gt;By the way, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wc&lt;/code&gt;這名字取的不好，因為我們實現的是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uniq -c&lt;/code&gt;這個command，而不是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wc&lt;/code&gt;😄&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;感謝你的閱讀～ 今天學到了如何使用bufio.Scanner來一行一行地讀取檔案，另外也體會到了interface的強大，
io.Reader及io.Writer是個很好的例子，並且利用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.Stdin&lt;/code&gt;就可以使用shell pipe ( | )，
跟其他linux command一起搭配完成任務！&lt;/p&gt;

&lt;p&gt;最後，我也有寫一篇一樣功能的Node.js版本，有興趣的可以看一看:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/posts/nodejs-how-to-read-from-file-line-by-line-and-use-shell-pipe-with-nodejs-process/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Nodejs: 如何逐行讀取檔案，或使用Unix pipe與其他process互動&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="golang" /><category term="linux" /><summary type="html">這篇將示範如何用go的bufio，開啟檔案並且一行一行地讀取資料， 最後示範直接用unix pipe將資料pipe給我們的go程式，做到像下面這樣的事: 1 cat words.txt | go run ./wc.go</summary></entry><entry><title type="html">成功是什麼? 5本關於自我成長的推薦書單</title><link href="https://homuchen.com/posts/self-improvement-books/" rel="alternate" type="text/html" title="成功是什麼? 5本關於自我成長的推薦書單" /><published>2021-11-03T21:03:00+08:00</published><updated>2021-11-03T21:03:00+08:00</updated><id>https://homuchen.com/posts/self-improvement-books</id><content type="html" xml:base="https://homuchen.com/posts/self-improvement-books/">&lt;p&gt;人生該怎麼過? 成功是什麼? 我覺得就是從你現在的位置出發，到達你想要的生活，這樣就成功了。所以怎樣才算是成功，
對每個人而言都不一樣，因為每個人的目標不同，重視的核心價值觀也不同。&lt;/p&gt;

&lt;h1 id=&quot;邁向成功的公式&quot;&gt;邁向成功的公式&lt;/h1&gt;
&lt;p&gt;找到你目標，然後走到底，這樣就成功了，那要怎麼走到底呢?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/self-improvement-books-0.jpg&quot; alt=&quot;邁向成功的公式及書單&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有了目標以後，每天你做出選擇，相對應地有一些行為，
但是最好將其變為習慣，否則將難以持之以恆，因為我們的意志力是有限的。
然後為了取得進步，不能每次都做一樣的事，必須踏出舒適圈才會有所改變，
並且知道有些成果是需要些時間才能顯現。&lt;/p&gt;

&lt;p&gt;而在這過程中間有許多的曲折及困難，比如說做了幾天就半途而廢，找一堆理由藉口，
或是做了一陣子卻看不到成果就放棄了，也可能是一開始有進步，
但到了某個階段卻停滯不前了，不知道該如何更進一步，
不然就是你覺得好累，沒有力氣能量繼續，又或者是你根本不知道你的目標是什麼? 
該往哪裡前進? 也沒有動力前進。&lt;/p&gt;

&lt;p&gt;在上述每個環節中卡關的，在這裡推薦相對應的書&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;不想半途而廢: &lt;a href=&quot;#原子習慣&quot;&gt;&lt;strong&gt;原子習慣&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;著急看到成果: &lt;a href=&quot;#複利效應&quot;&gt;&lt;strong&gt;複利效應&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;停滯不前: &lt;a href=&quot;#刻意練習&quot;&gt;&lt;strong&gt;刻意練習&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;沒有力氣、覺得無趣: &lt;a href=&quot;#一週工作四小時&quot;&gt;&lt;strong&gt;一週工作四小時&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;找不到人生目標: &lt;a href=&quot;#做自己的生命設計師&quot;&gt;&lt;strong&gt;做自己的生命設計師&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;原子習慣&quot;&gt;&lt;a href=&quot;https://www.books.com.tw/products/0010822522&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;《原子習慣》&lt;/strong&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;選擇很重要，但其實人生並沒有那麼多重大的選擇時刻，影響你這個人最多的，是組成你每天生活的習慣。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/self-improvement-books-1.jpg&quot; alt=&quot;書: 原子習慣&quot; /&gt;&lt;/p&gt;

&lt;p&gt;習慣佔據你人生的八、九成，試想一下每天醒來，躺在床上滑一下手機，
走去浴室刷牙洗臉，要不要吃早餐，早餐要吃什麼，通勤去上班的路上在做什麼，
工作時如何面對同事，面對事情是如何處理，下班了之後要做什麼，要去運動嗎?
還是回家躺在沙發上耍廢，該準時就寢嗎？還是東摸摸西摸摸又到了半夜了，
跟人聊天會抱怨最近發生的負面的事嗎？&lt;/p&gt;

&lt;p&gt;上述說的這些事，你都不需要在當下耗費心思去做選擇，而是不假思索地反應出來，
但他們就是你現在會成為怎樣的人的根本原因，所以我們要致力於培養好的習慣、去除壞的習慣。&lt;/p&gt;

&lt;p&gt;你可能也想這麼做，但就是時常失敗，這本書將系統化地分析習慣的基本原理及組成，簡單的說就是:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;提示 -&amp;gt; 渴望 -&amp;gt; 回應 -&amp;gt; 獎賞&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;並且從各個面向提出可行動的方案及建議，幫助你過關斬將，培養新的習慣。&lt;/p&gt;

&lt;p&gt;延伸閱讀:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/posts/book-note-atomic-habits/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;[讀書筆記] 原子習慣: 細微改變帶來巨大成就的實證法則&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;你可以期待獲得什麼&quot;&gt;你可以期待獲得什麼?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;了解習慣對人生的重要&lt;/li&gt;
  &lt;li&gt;系統化地分析習慣是如何形成的&lt;/li&gt;
  &lt;li&gt;該要如何養成好習慣&lt;/li&gt;
  &lt;li&gt;該要如何去除壞習慣&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;複利效應&quot;&gt;&lt;a href=&quot;https://www.books.com.tw/products/0010814286&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;《複利效應》&lt;/strong&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;每天微小的改變並不亦察覺，經過時間的累積卻會產生巨大的影響。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/self-improvement-books-2.jpg&quot; alt=&quot;書: 複利效應&quot; /&gt;&lt;/p&gt;

&lt;p&gt;或許大家都聽過複利效應，應該通常是在財務儲蓄領域上，但這概念可以應用在生活的各個面向上，
我們每天做的事，影響可能很小，多吃一片洋芋片、多抽一根菸、晚上熬夜少睡一個小時，造成的影響幾乎無法察覺，
但經過時間的累積，改變就會很巨大，這跟上面的原子習慣是相呼應的。&lt;/p&gt;

&lt;h2 id=&quot;你可以期待獲得什麼-1&quot;&gt;你可以期待獲得什麼?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;了解複利效應是什麼? 並且適用於人生各個方面&lt;/li&gt;
  &lt;li&gt;認清世上沒有魔法，唯有努力才有回報&lt;/li&gt;
  &lt;li&gt;努力的方向要對，如何加速看到成果&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;刻意練習&quot;&gt;&lt;a href=&quot;https://www.books.com.tw/products/0010752714&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;《刻意練習》&lt;/strong&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;透過刻意練習，善用大腦和身體的適應力，每個人都能改善技能，甚至創造出你本來以為自己沒有的能力，達到顛峰表現。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/self-improvement-books-3.jpg&quot; alt=&quot;書: 刻意練習&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如何在某個領域邁向頂尖、擁有高手級的表現，只要一直一直不斷地做、不斷地練習就好了嗎？&lt;/p&gt;

&lt;p&gt;其實光是這樣是不夠的，比如說你已經會開車，然後你每天開了好幾個小時的車，但你卻不會因此變成舒馬赫，
辛苦的媽媽每天煮三餐，但卻不會因此成為超級大廚。那該要如何&lt;strong&gt;刻意練習&lt;/strong&gt;來持續取得進步呢？&lt;/p&gt;

&lt;p&gt;這邊簡單地說就是針對你想進步的目標，進行&lt;strong&gt;突破目前極限&lt;/strong&gt;的練習，目標必須&lt;strong&gt;明確&lt;/strong&gt;，
而且可以&lt;strong&gt;量測&lt;/strong&gt;或獲得&lt;strong&gt;回饋&lt;/strong&gt;，知道自己確實有在進步並進行修正。&lt;/p&gt;

&lt;h2 id=&quot;你可以期待獲得什麼-2&quot;&gt;你可以期待獲得什麼?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;知道大腦是具可塑性的，如何學習及改變&lt;/li&gt;
  &lt;li&gt;持續取得進步的要素的什麼？ 並不是一萬個小時就好&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;一週工作四小時&quot;&gt;&lt;a href=&quot;https://www.books.com.tw/products/0010621037&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;《一週工作四小時》&lt;/strong&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;誰說一週要工作四十小時，朝九晚五地待在辦公室，打破社會框架，有錢有閒地實現自己的夢想&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/four-hour-work-week-0.jpg&quot; alt=&quot;書: 一週工作四小時&quot; /&gt;&lt;/p&gt;

&lt;p&gt;人們總說等我賺夠了錢我就要怎樣怎樣，等我退休了我就要去做什麼，那何不現在就開始呢？！&lt;/p&gt;

&lt;p&gt;追求夢想、做自己的興趣及想做的事，不用等到退休，作者提出&lt;strong&gt;迷你退休&lt;/strong&gt;的概念，
將大把退休時光平均分散在一生當中，不要盲目地工作、追逐金錢，只將目標放在提早退休上，
而是開始漸漸地擺脫不想做的工作，擁抱自由及機動性，開始重拾各種興趣、嘗試你的夢想，
否則等到退休那天，你可能也會茫茫然不知道要幹嘛，因為一直以來，從沒有停下來好好思考過。&lt;/p&gt;

&lt;p&gt;延伸閱讀:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/posts/book-note-the-four-hour-work-week/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;[讀書筆記] 一週工作4小時: 擺脫朝九晚五的窮忙生活，晉身「新富族」！&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/posts/book-note-the-power-of-full-engagement/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;[讀書筆記] 用對能量，你就不會累&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;你可以期待獲得什麼-3&quot;&gt;你可以期待獲得什麼?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;認識新富族: 不再朝九晚五待在辦公室工作，擁抱自由及機動性的族群&lt;/li&gt;
  &lt;li&gt;除去大部分非必要且會花費你時間的事，擁抱更多的自由&lt;/li&gt;
  &lt;li&gt;打造自動進帳的事業&lt;/li&gt;
  &lt;li&gt;看看作者的有趣的經歷及如何達成上述目標&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;做自己的生命設計師&quot;&gt;&lt;a href=&quot;https://www.books.com.tw/products/0010733134&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;《做自己的生命設計師》&lt;/strong&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;透過打造原型、進行實驗，發想繼而嘗試人生各種可能，才能找到熱情&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/homuchen.com/images/self-improvement-books-4.jpg&quot; alt=&quot;書: 做自己的生命設計師&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不知道自己的人生要做什麼嗎？第一步就是要去想，隨意的發想，如果你連想都沒想過的話一件事，
你不可能會在你的人生中去做那件事，甚至去喜歡他，所以第一步就是發揮想像力，無所限制地記錄下所以可能會喜歡的想法。&lt;/p&gt;

&lt;p&gt;接著要針對那些想法，打造原型去實驗，什麼是原型呢？在產品設計的領域裡，
就是用來驗證設計的產品是否適切，有無欠考量或未發現的盲點，必要時在正式生產前加以更正。&lt;/p&gt;

&lt;p&gt;而在人生領域中，就是去稍微體驗你想做的事，而不用100%一下子就All in，比如說你喜歡喝咖啡，想開間咖啡廳，
那你不應該是馬上辭職，準備個幾百萬就開始要開店，而是可以先透過蒐集資訊、訪談好幾位咖啡店店長、去打工、
或是做一下咖啡廳裡各個職位的工作，來測試自己有沒有盲點，到底是不是真的喜歡這件事。&lt;/p&gt;

&lt;h2 id=&quot;你可以期待獲得什麼-4&quot;&gt;你可以期待獲得什麼?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;人生迷惘怎麼辦&lt;/li&gt;
  &lt;li&gt;該如何去發想，找出可能會喜歡的事&lt;/li&gt;
  &lt;li&gt;該如何打造原型，去測試自己的新的人生&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;感謝你看到這邊～ 希望這些內容能帶給你一點啟發，我也是閱讀這些書過後，學習到了許多及產生很多新的想法，
但更重要的是將其實踐在生活當中，首先先透過書寫分享，讓自己複習一遍，
之後有更多親身實驗的結果，會在跟大家分享! 掰掰～👋&lt;/p&gt;</content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="books" /><category term="self improvement" /><summary type="html">人生該怎麼過? 成功是什麼? 我覺得就是從你現在的位置出發，到達你想要的生活，這樣就成功了。所以怎樣才算是成功， 對每個人而言都不一樣，因為每個人的目標不同，重視的核心價值觀也不同。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-0.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>