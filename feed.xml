<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-tw"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://homuchen.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://homuchen.com/" rel="alternate" type="text/html" hreflang="zh-tw" /><updated>2022-04-21T13:26:04+08:00</updated><id>https://homuchen.com/feed.xml</id><title type="html">HoMuChen</title><subtitle>Hi! This is HoMuchen, 陳河穆. I am a software engineer working at Largitdata now. This is where I record whatever I learned.</subtitle><entry><title type="html">STEPN: 從2022-04-10進場至今的收益紀錄</title><link href="https://homuchen.com/posts/stepn-record-everyday-income/" rel="alternate" type="text/html" title="STEPN: 從2022-04-10進場至今的收益紀錄" /><published>2022-04-21T13:25:00+08:00</published><updated>2022-04-21T13:25:00+08:00</updated><id>https://homuchen.com/posts/stepn-record-everyday-income</id><content type="html" xml:base="https://homuchen.com/posts/stepn-record-everyday-income/"><![CDATA[<p>真的可以賺到錢嗎？每天可以賺錢的速度有多快，幾天才可以回本呢？
對於還在猶豫不決、思考著到底要不要進場的玩家們，這些大概就是最重要的問題吧！</p>

<p>這篇文章紀錄了我從2022-04-10進場，花了多少錢買鞋子，
以及後續每天的產出，希望能幫助還在觀望的玩家對實際情形有近一步的了解～</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/stepn-income-01.jpg" alt="STEPN" /></p>

<h1 id="投入金額-410">投入金額 (4/10)</h1>
<p>在4/10以10.1SOL購入第一雙runner的鞋子，當時1SOL = 110USD，而1USD = 28.9 NTD，
所以投入的金額為<strong>32108 NTD</strong>。</p>

<h1 id="每天產出持續更新">每天產出(持續更新)</h1>

<p>下圖是<strong>Runner</strong>的鞋，跑<strong>五分速(12km/hr)</strong>的收益，
中間有下降是因為在測試效率值對產出有多大的影響，綠線為效率值，藍色柱為GST產出(已扣掉每天2.88GST的維修費)。</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/stepn-income-02.jpg" alt="收益圖表" /></p>

<p>原始資料如下:</p>

<table>
  <thead>
    <tr>
      <th>日期</th>
      <th>消耗能量</th>
      <th>效率</th>
      <th>收入</th>
      <th>維修支出</th>
      <th>total(GST)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2022-04-11</td>
      <td>2.2</td>
      <td>25.3</td>
      <td>8.46</td>
      <td>3.24</td>
      <td>5.22</td>
    </tr>
    <tr>
      <td>2022-04-12</td>
      <td>1.8</td>
      <td>25.3</td>
      <td>8.96</td>
      <td>2.88</td>
      <td>6.08</td>
    </tr>
    <tr>
      <td>2022-04-13</td>
      <td>2.0</td>
      <td>25.3</td>
      <td>9.69</td>
      <td>2.88</td>
      <td>6.81</td>
    </tr>
    <tr>
      <td>2022-04-14</td>
      <td>2.0</td>
      <td>25.3</td>
      <td>9.74</td>
      <td>2.88</td>
      <td>6.86</td>
    </tr>
    <tr>
      <td>2022-04-15</td>
      <td>2.0</td>
      <td>25.3</td>
      <td>9.48</td>
      <td>2.88</td>
      <td>6.60</td>
    </tr>
    <tr>
      <td>2022-04-16</td>
      <td>2.0</td>
      <td>9.7</td>
      <td>5.81</td>
      <td>2.72</td>
      <td>2.93</td>
    </tr>
    <tr>
      <td>2022-04-17</td>
      <td>2.0</td>
      <td>14.7</td>
      <td>8.08</td>
      <td>2.88</td>
      <td>5.20</td>
    </tr>
    <tr>
      <td>2022-04-18</td>
      <td>2.0</td>
      <td>19.7</td>
      <td>8.62</td>
      <td>2.88</td>
      <td>5.74</td>
    </tr>
    <tr>
      <td>2022-04-19</td>
      <td>2.0</td>
      <td>24.7</td>
      <td>9.26</td>
      <td>2.88</td>
      <td>6.38</td>
    </tr>
    <tr>
      <td>2022-04-20</td>
      <td>2.0</td>
      <td>27.7</td>
      <td>10.4</td>
      <td>2.88</td>
      <td>7.52</td>
    </tr>
  </tbody>
</table>

<h1 id="總結">總結</h1>
<p>可以預期在27.7的效率值(LV5的鞋)下，每天可以有<strong>7.5GST</strong>的進帳，以1GST = 130NTD來算的話，
一天有975塊台幣，所以<strong>33天</strong>就可以回本啦～</p>

<p>33天的回本的前提是，效率27.7、LV5的鞋子(runner)，以12km/hr的速度跑(之後再來做跑步速度對賺錢速率的影響的實測)，
LV5的鞋可以直接從市場購買，或是自己從LV0開始升上去，但升到LV5需要花費20GST，而且買LV0的鞋通常又比較貴！</p>

<p>什麼？！LV0比LV5還要貴！這是為什麼呢？想知道該如何選鞋進場的跑友們，可以參考我之前的一篇文章:</p>

<ul>
  <li><a href="/posts/stepn-how-to-choose-shoes-to-start/" target="_blank"><strong>STEPN攻略: 想進場跑步該如何挑選鞋子？</strong></a></li>
</ul>]]></content><author><name>HoMuChen</name></author><category term="生活" /><category term="crypto" /><category term="stepn" /><summary type="html"><![CDATA[真的可以賺到錢嗎？每天可以賺錢的速度有多快，幾天才可以回本呢？ 對於還在猶豫不決、思考著到底要不要進場的玩家們，這些大概就是最重要的問題吧！]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/stepn-income-01.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/stepn-income-01.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">STEPN攻略: 想進場跑步該如何挑選鞋子？</title><link href="https://homuchen.com/posts/stepn-how-to-choose-shoes-to-start/" rel="alternate" type="text/html" title="STEPN攻略: 想進場跑步該如何挑選鞋子？" /><published>2022-04-17T15:49:00+08:00</published><updated>2022-04-17T15:49:00+08:00</updated><id>https://homuchen.com/posts/stepn-how-to-choose-shoes-to-start</id><content type="html" xml:base="https://homuchen.com/posts/stepn-how-to-choose-shoes-to-start/"><![CDATA[<p>在考慮進場<strong>STEPN</strong>邊跑邊賺嗎？對於想買鞋嘗試玩玩看的玩家，
買鞋時有哪些點是需要考量及注意的呢？將在這篇文章一一介紹。</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/stepn-shoes-0.jpg" alt="STEPN shoes price" /></p>

<p>可以看到上圖，在撰寫這篇文章時(2022-04-16)，
最便宜的鞋在市場上的價格已經來到約12SOL，折合美金約為1224USD，台幣為35655NTD。</p>

<h1 id="認識鞋子">認識鞋子</h1>
<p>首先我們先要認識鞋子，好知道哪些因素會影響價格，就算有時有些因素不太影響價格，
卻會影響到之後跑步賺錢的效率！</p>

<p>鞋子有分品質(Quality)，分別為Common、Uncommon、Rare、Epic、Legendary，
今天只就Common的鞋討論，因為最便宜的鞋只會是這種😂</p>

<h2 id="鞋子基礎數值">鞋子基礎數值</h2>
<p>每雙鞋子都會有四種基礎素質，
分別為<strong>Efficiency</strong>、<strong>Luck</strong>、<strong>Comfort</strong>、<strong>Resilience</strong>，這些數值目前看起來對價格是沒有影響的，
一般的鞋子(Common)的這四種素質都會是<strong>1-10</strong>的隨機分佈，
所以一樣的錢買到4個素質都是10的就是最好了啦～</p>

<p>而以跑步賺錢效率來說，最直接影響的數值就是Efficiency及Resilience，
Efficiency越高跑步時產生的GST越多，而Resilience越高，會讓鞋子不容易壞，需要維修的費用較少！</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/stepn-shoes-2.jpg" alt="STEPN shoes fundementals" /></p>

<p>上圖可以看到，左邊的鞋的素質就比右邊的要好上許多。</p>

<p>至於素質的影響有多大，之後會再寫一篇效率對於每天GST的生成的實測實驗(TODO)。</p>

<h2 id="鞋子等級">鞋子等級</h2>

<h3 id="升等花費">升等花費</h3>
<p>鞋子可以升等，隨著等級的增加，所需要花費的GST及時間都會隨著增加，
最高可以升到30等，以下先簡單列出1-10等升級所需的花費。</p>

<table>
  <thead>
    <tr>
      <th>等級</th>
      <th>花費GST</th>
      <th>累積花費GST</th>
      <th>花費時間(小時)</th>
      <th>累積花費時間</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>2</td>
      <td>2</td>
      <td>3</td>
      <td>2</td>
      <td>3</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>3</td>
      <td>3</td>
      <td>6</td>
      <td>3</td>
      <td>6</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>4</td>
      <td>4</td>
      <td>10</td>
      <td>4</td>
      <td>10</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>5</td>
      <td>10</td>
      <td>20</td>
      <td>5</td>
      <td>15</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>6</td>
      <td>6</td>
      <td>26</td>
      <td>6</td>
      <td>21</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>7</td>
      <td>7</td>
      <td>33</td>
      <td>7</td>
      <td>28</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>8</td>
      <td>8</td>
      <td>41</td>
      <td>8</td>
      <td>36</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>9</td>
      <td>9</td>
      <td>50</td>
      <td>9</td>
      <td>45</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>10</td>
      <td>30</td>
      <td>80</td>
      <td>10</td>
      <td>55</td>
    </tr>
  </tbody>
</table>

<h3 id="升等可以幹嘛呢">升等可以幹嘛呢？</h3>
<p>Common的鞋子每升一級可以有4點的點數讓你分配到上述的基礎數值上，
至於該不該要花GST來升級鞋子以提升之後每天的產出效率，
一樣要先等之後會再寫一篇效率對於每天GST的生成的實測實驗(TODO)。</p>

<p>另外升級還會開通一些功能，升到5級的鞋子才可以開啟鑄造(mint)的功能，10級就可以出租(目前尚未開放)，</p>

<p>可以看到市場上的鞋子幾乎不是Lv0就是Lv5，這就是因為5等才可以鑄造的原因，
而鑄造次數就是影響鞋子價格最主要的因素。</p>

<h2 id="鑄造mint次數">鑄造(mint)次數</h2>
<p>兩雙5級以上的鞋子再加上一些花費，就可以鑄造出一雙新的鞋子，而每一雙鞋子<strong>最多只能鑄造7次</strong>。</p>

<table>
  <thead>
    <tr>
      <th>鞋子等級</th>
      <th>鑄造所需花費GST</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>100</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>2</td>
      <td>100</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>3</td>
      <td>150</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>4</td>
      <td>200</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>5</td>
      <td>250</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>6</td>
      <td>300</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>7</td>
      <td>350</td>
    </tr>
  </tbody>
</table>

<p>舉個例子:</p>
<ul>
  <li>兩雙鑄造次數皆為0的鞋，需花費200GST來鑄造出一雙新鞋</li>
  <li>一雙鑄造次數為2，另一雙為0的話，就需要花費100 + 150 = 250GST</li>
</ul>

<p>所以這也就是為什麼LV5的鞋子還比較便宜的原因，因為他們已經被鑄造過兩次了，
而第三次的鑄造會比前兩次要多花50GST。</p>

<h1 id="結論">結論</h1>
<p>買一雙Lv5，鑄造次數已經2次的鞋，且Efficiency及Resilience數值好的鞋，
是殖利率最高，最快回本的方法(大約30-40天)，鞋子本身比較便宜之後，
又幫你免費升級了5次(省了20GST)，讓你跑步時可以賺到更多GST。</p>

<p>但如果你想要玩鑄造，持續投入所賺到的GST時，期待鞋子漲價，賣鞋獲利的話，
就要小心不要買到鑄造次數已經是2次或甚至是3次的鞋子啦～</p>

<p>就像買股票有人是為了賺價差，有人賺股息，根據你的目的及風險偏好，來決定你的投資策略囉～</p>

<h1 id="參考資料">參考資料</h1>
<ul>
  <li><a href="https://whitepaper.stepn.com/game-fi-elements/shoe-minting" target="_blank">STEPN白皮書: 鞋子鑄造</a></li>
  <li><a href="https://stepn-simulator.xyz/mint/eng/" target="_blank">鞋子鑄造計算機</a></li>
</ul>]]></content><author><name>HoMuChen</name></author><category term="生活" /><category term="crypto" /><category term="stepn" /><summary type="html"><![CDATA[在考慮進場STEPN邊跑邊賺嗎？對於想買鞋嘗試玩玩看的玩家， 買鞋時有哪些點是需要考量及注意的呢？將在這篇文章一一介紹。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/stepn-income-01.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/stepn-income-01.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">REST API Design: Pagination</title><link href="https://homuchen.com/posts/restful-api-pagination/" rel="alternate" type="text/html" title="REST API Design: Pagination" /><published>2022-04-14T22:35:00+08:00</published><updated>2022-04-14T22:35:00+08:00</updated><id>https://homuchen.com/posts/restful-api-pagination</id><content type="html" xml:base="https://homuchen.com/posts/restful-api-pagination/"><![CDATA[<h1 id="為何要pagination">為何要Pagination</h1>
<p>一個response如果資料太多，回應太慢，一定會造成使用者的體驗不佳，進而流失用戶，
而pagination就是使reponse回應速度的加快的做法之一。</p>

<p>比如說你在用instagram，在探索頁面中一眼看到的貼文可能只有10幾篇，
此時你就不需要一次抓回來30篇甚至是更多的貼文資料，藉此來減少用戶等待的時間，
只有當用戶繼續將螢幕往下滾時，再抓取下一個10幾篇的資料就好。</p>

<p>以下來看看兩種Pagination的做法，<code class="language-plaintext highlighter-rouge">offset</code>及<code class="language-plaintext highlighter-rouge">keyset</code>:</p>

<h1 id="offset-pagination">Offset Pagination</h1>
<p>最基本的做法就是使用<code class="language-plaintext highlighter-rouge">offset</code>及<code class="language-plaintext highlighter-rouge">limit</code>，一樣的概念在<code class="language-plaintext highlighter-rouge">SQL</code>語法中也可以看到:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">items</span> <span class="k">LIMIT</span> <span class="mi">20</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>而在HTTP API裡，則會像是這樣</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>curl http://api.exmaple.com/items?offset<span class="o">=</span>0&amp;limit<span class="o">=</span>10
</pre></td></tr></tbody></table></code></pre></div></div>

<p>也有一些服務會使用其他的名字，例如<code class="language-plaintext highlighter-rouge">Elasticsearch</code>用的<code class="language-plaintext highlighter-rouge">from</code>及<code class="language-plaintext highlighter-rouge">size</code>，都是代表一樣的意思，
從第幾則資料開始(offset、from)算，總共抓取幾則資料(limit、size)。</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/pagination-1.jpg" alt="offset pagination" /></p>

<h2 id="offset-pagination可能的問題">offset pagination可能的問題</h2>
<ul>
  <li>
    <p>當offset很大時，比如說offset=1000000，API server必須scan一百萬的資料，效能不彰。</p>
  </li>
  <li>
    <p>再來就是當你的資料持續再增加時，可能會造成一些混亂，以下面的例子為例:</p>

    <ol>
      <li><code class="language-plaintext highlighter-rouge">GET /items?offset=0&amp;limit=10</code></li>
      <li>增加了5筆資料</li>
      <li>再一次<code class="language-plaintext highlighter-rouge">GET /items?offset=0&amp;limit=10</code>，結果其中5筆是第一次query裡已經有出現的了</li>
    </ol>
  </li>
</ul>

<h1 id="keyset-pagination">Keyset Pagination</h1>
<p>不是使用offset，而是使用某個key作為指定的起始點，比如說<code class="language-plaintext highlighter-rouge">created_at</code>，HTTP request看起來可能像是這樣</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>curl http://api.exmaple.com/items?limit<span class="o">=</span>10&amp;created_at:lte:2022-04-10T00:00:00
</pre></td></tr></tbody></table></code></pre></div></div>

<p>只抓取創建時間比2022-04-10T00:00:00還要早的資料，想翻頁時，
就將created_at:lte的時間指定為上一次回傳的最後一筆資料的created_at就好了，如此一來，
就不會有後來新增的資料跑進來的問題了。</p>

<p>而且通常所使用的key在資料庫中會建立索引，也可以避免上述使用offset造成的large database scan的問題。</p>

<hr />

<p>這是RESTful API一系列文章中的一篇，想了解更多關於RESTful API及HTTP的，可以看這篇目錄:</p>

<p><a href="/posts/http-restful-api-design-practical-guide/" target="_blank"><strong>RESTful API Design — A practical guide</strong></a></p>

<p>感謝您的閱讀~期待下次見！</p>]]></content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="api" /><category term="http" /><category term="restful api" /><summary type="html"><![CDATA[什麼是Pagination？為何要使用，以及在HTTP API設計中該如何實作呢？]]></summary></entry><entry><title type="html">如何開始開發你的API: API first principle and OpenAPI</title><link href="https://homuchen.com/posts/api-first-principle-openapi/" rel="alternate" type="text/html" title="如何開始開發你的API: API first principle and OpenAPI" /><published>2022-04-09T12:50:00+08:00</published><updated>2022-04-09T12:50:00+08:00</updated><id>https://homuchen.com/posts/api-first-principle-openapi</id><content type="html" xml:base="https://homuchen.com/posts/api-first-principle-openapi/"><![CDATA[<h1 id="api-first">API first</h1>
<p>在一頭熱開始寫code實作你的API service之前，應該首先要關注API中的<strong>I</strong>字，也就是<strong>interface</strong>，
interface是作為服務提供者及服務使用者溝通的介面，為什麼要首先定義好interface呢？有幾下幾個好處:</p>

<h2 id="更早得到回饋">更早得到回饋</h2>
<p>為什麼要寫API，總是因為有人要用嘛～有人希望我們提供某些服務，而API就是使用這些服務的入口及介面，
如果我們可以在開工之前，就先把介面設計定義好，並交給客戶，如此一來，
客戶們就可以先看看我們所提供的介面好不好用，有沒有任何的問題，想要的功能有沒有齊全，
如果有需要修改或增減的地方，就能儘早地得到回饋！在真正投入心血開發之前，導正方向～</p>

<h2 id="更穩定">更穩定</h2>
<p>由於上述的原因，我們的介面就會更穩定，更少需要變動，整個系統以更容易去維護。
介面的變動往往牽涉到多方人員，越多人依賴這個介面，一旦要改動就麻煩了，所牽涉的層面就越廣。</p>

<p>但也並不是說介面就一定不會變，在整個產品的生命週期中，一定會經歷持續改善的過程，可能要加新功能，
，或是發現有更好用的介面，只是在我們應該盡最大的努力來維持介面的穩定。</p>

<h2 id="併行開發">併行開發</h2>
<p>最後，一旦<strong>介面</strong>定義好了之後，服務提供者及使用者就可以同時針對這個介面來進行工作了，
當兩邊都完成各自的工作後，就可以接起來看看有沒有成功，
如此一來就可以避免掉使用者苦苦等著提供者完成的窘境。</p>

<p>那在完成實作之前，該要先如何描述這個介面呢？這個描述的方法或語言應該要是一個標準，
如此一來，各方單位才能看得懂，而這個標準就是<strong>OpenAPI</strong>。</p>

<h1 id="openapi">OpenAPI</h1>
<p>OpenAPI是一個描述RESTful API的標準，藉由寫下OpenAPI的spec檔案，
可以讓不管是電腦或是人類的使用者知道，你的API可以做到哪些事，提供了什麼功能及怎麼使用，
而不需要再去看source code，或者是真的打打看你的API service來得知！</p>

<p>這裡就不詳細說明OpenAPI該怎麼使用了，想了解的去官網查詢～</p>

<ul>
  <li><a href="https://swagger.io/specification/" target="_blank"><strong>OpenAPI Specification</strong></a></li>
</ul>

<p>這是RESTful API一系列文章中的一篇，想了解更多關於RESTful API及HTTP的，可以看這篇目錄:</p>

<ul>
  <li><a href="/posts/http-restful-api-design-practical-guide/" target="_blank"><strong>RESTful API Design — A practical guide</strong></a></li>
</ul>]]></content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="api" /><category term="http" /><category term="restful api" /><summary type="html"><![CDATA[開發API應該要使用怎樣的流程，先定義好介面有哪些好處，以及可以使用哪些工具呢？(OpenAPI 3.0)]]></summary></entry><entry><title type="html">[讀書筆記] 遠距工作模式: 麥肯錫、IBM、英特爾、eBay都在用的職場工作術</title><link href="https://homuchen.com/posts/book-note-remote-work-go/" rel="alternate" type="text/html" title="[讀書筆記] 遠距工作模式: 麥肯錫、IBM、英特爾、eBay都在用的職場工作術" /><published>2022-04-02T22:04:00+08:00</published><updated>2022-04-02T22:04:00+08:00</updated><id>https://homuchen.com/posts/book-note-remote-work-go</id><content type="html" xml:base="https://homuchen.com/posts/book-note-remote-work-go/"><![CDATA[<p>為何要遠距工作？遠距工作有哪些好處？常見會遇到的問題有哪些？該如何解決，
不管是以<strong>雇主</strong>的角度還是以<strong>員工</strong>的角度，在這本書<a href="https://www.books.com.tw/products/0010856669/"><strong>《遠距工作模式》</strong></a>裡都有提及。</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/book-note-remote-work-1.jpg" alt="書: 遠距工作模式" /></p>

<h1 id="為何要遠距工作">為何要遠距工作</h1>
<p>遠距工作會帶來好處呢？以下從雇主或員工的角度來看待這個問題</p>

<h2 id="遠離令人分心的辦公室環境">遠離令人分心的辦公室環境</h2>
<p>在辦公室中，可能會有各種分心的來源，容易被不斷地打擾，時間被切割成許多的碎片，
對於有些需要<strong>長時間不被打斷</strong>，才能進入狀況的任務，這樣的環境並不適合。</p>

<p>當然並不是說其他的地方就沒這問題，在家可能充滿各種誘惑，冰箱裡的零食、
小孩或配偶的干擾，但你擁有了在哪裡工作的自主權，就可以更主動地來處理這個問題。</p>

<h2 id="省下通勤的時間">省下通勤的時間</h2>
<p>每天擠在電車、火車裡，或者是開車塞中公路車陣中，這樣的事情實在是很難讓人快樂起來。</p>

<p>有些人會把通勤時間拿來利用，我自己也不例外<a href="/posts/how-i-keep-reading/" target="_blank">(<strong>《原子習慣》應用: 我是如何養成閱讀習慣</strong>)</a>，
在電車裡閱讀，或是開車的時候邊聽有聲書，
不過如果可以好好地在家裡做這些事，不是更棒嗎？😄</p>

<h2 id="逃離朝九晚五">逃離朝九晚五</h2>
<p>下午得接小孩放學嗎？去參加小孩在學校裡的活動？或者你是夜貓子想要睡到中午，
晚上在火力全開最有效率的工作，做得到這些正式正式彈性上班最棒的好處之一，
<strong>重要的是工作成果，而非準時打卡</strong>。</p>

<h2 id="不用擠在都會區">不用擠在都會區</h2>
<p>大公司的總部集中在都會區，為了取得好的工作機會，必須來到都市，
但卻可能犧牲了自由、美妙的鄉間土地與新鮮的空氣，房子那麼貴！
交通也擁擠，我們真的願意付出那些金錢代價，換一間鳥籠住嗎？</p>

<p>但都市確實有便利的生活及刺激的娛樂，這之間的取捨就看個人喜好了，
不過遠距工作提供了另一種可能的選擇。</p>

<h2 id="真正的奢華">真正的奢華</h2>
<p>我有個夢想，等到退休之後之後我要幹嘛幹嘛，為何要等到退休呢？！
常常就是因為要上班的關係～</p>

<p>我想要去到某個雪國，好好地滑雪滑上一個月，精進我的技能，如果是受限於要在某地上班的話，
一年可以出國滑個十天好像就很了不起了。不一定要是滑雪，你可能有各種夢想，可能是衝浪、
環遊世界、帶小孩去參加各種活動，或者只是多待在家裡陪伴家人，<strong>人生並不需要畫分出拼命工作與退休養老的界線！</strong></p>

<p>在<a href="https://www.books.com.tw/products/0010621037" target="_blankA"><strong>《一週工作四小時》</strong></a>這本書裡，
作者稱這類擁有時間及機動性的族群為<strong>新富族</strong>，擁有決定何時工作及在哪裡工作的自由，就能使你的財富倍增！</p>

<p>延伸閱讀:</p>

<ul>
  <li><a href="/posts/book-note-the-four-hour-work-week/" target="_blank"><strong>[讀書筆記] 一週工作4小時: 擺脫朝九晚五的窮忙生活，晉身「新富族」！</strong></a></li>
  <li><a href="/posts/double-your-money-without-any-extra-work/" target="_blank"><strong>如何不用做額外的工作，就使你的收入倍增</strong></a></li>
</ul>

<h2 id="世界人才庫">世界人才庫</h2>
<p>當你公司的工作模式不在需要進辦公室時，來自全球的人才都可以為你所用。</p>

<p>除了找到人才外，把人才留住也是至關重要的問題，如果不是遠端工作，
那有些離職原因可能就是跟工作本身無關的，例如結婚了、受夠這裡的天氣了、
想多陪陪家人，或單純想換個新環境？一但遠端工作，好人才就不必離職，也能做他想做的事！</p>

<h2 id="省錢">省錢</h2>
<p>省錢並不是遠距工作的主要目標，但如果可以省錢，又何嘗不是件好事呢？
在提升了大家的生活品質、還能爭取來自世界各地的人才的同時，
提高生產力減少人力及不需要辦公室，都能額外帶來省錢的好處。</p>

<h2 id="成果導向">成果導向</h2>
<p>在辦公室上班蠻容易會有這樣的問題:</p>

<p><strong>準時到公司又晚離開 + 好相處的好人 = 好員工？</strong></p>

<p>但其實有可能他根本沒有太多工作的產出，僅憑著他有出現在辦公室又很聽話，就覺得他工作的效率棒棒。
一旦實施遠距工作，擁有了在何時何地工作的自由，付出的代價就是需要追蹤任務及回報進度，
而公開的工作成果使得有沒有產出就一目瞭然，無所遁形了，雇主也可以更客觀的評量員工的績效，
而不只是憑感覺。</p>

<h1 id="藉口及問題">藉口及問題</h1>
<h2 id="我怎麼知道員工有沒有在工作">我怎麼知道員工有沒有在工作?</h2>
<p>其實如果身為雇主你有這樣的質疑，那你應該一開始就不應該聘請這位員工，如果他真的會偷懶，
不管是在辦公室還是在遠處，都一樣會偷懶～</p>

<p>而且遠端工作，更容易是成果導向的，避免掉員工其實只是待在辦公室裝忙給你看的這種狀況！</p>

<h2 id="家裡充滿誘惑">家裡充滿誘惑</h2>
<p>電視機就在那裡，遊樂器也在那邊，冰箱裡有好吃的冰淇淋，還有一堆待洗衣物，
家裡有各式各樣的事物可能吸引你，你說要如何在家工作呢？</p>

<p>答案很簡單，因為你有工作得做，而你是個負責任的人。
另外對抗誘惑最好的方法就是有趣且有成就感的工作，如果使命感不明確，工作太枯燥無味，
我想你的問題是該換一份工作，而不是在哪裡工作。</p>

<p>當然有時環境就是會有影響，後面內容就有建議可以將工作與私人的空間做出明確的區隔。</p>

<h2 id="我現在就要答案">我現在就要答案</h2>
<p>如果在辦公室裡，很容易就去打擾別人，其實很多問題可以自己找到答案，
或者是先將問題釐清想清楚一點，但如果同事就在你旁邊，隨口就去問他好像沒什麼大不了的，
所以容易就會打斷同事專心工作的時間。</p>

<p>並不是每個問題都需要立即獲得解答，可以依照事件的緊急程度來決定溝通的管道，
不急的問題使用Email，稍微急一點的可以使用些即時通訊的軟體，很急的話就能直接打電話給遠距工作的同事，</p>

<p>讓同事自己決定何時回覆的你的訊息，避免在需要一段長時間專心工作的時候被打斷，導致效率降低。</p>

<h1 id="一些具體的作法">一些具體的作法</h1>
<h2 id="出去社交">出去社交</h2>
<p>許多人對於遠距工作的恐懼在於覺得太過孤僻，跟同事跟人都沒有相處互動，
但就算在家裡，你也可以跟配偶、子女、家人或是鄰居有高品質的互動，
不過工作跟私人時間要區分好就是了。</p>

<p>另外沒人說你一定要一直宅著在家裡工作呀～
你可以去咖啡廳、共享工作空間、去公園跟路人打籃球，或者是做志工，
遠距工作不表示你非得被綁在家裡的書桌前。</p>

<h2 id="設立明確界限">設立明確界限</h2>
<p>原先朝九晚五的好處就是上下班容易切分清楚，中間的通勤也能作為緩衝，
使得你知道離開辦公室到家裡就可以好好地放鬆，週末的時間，基本上也不會被公事給打擾，</p>

<p>而在家工作，你一早醒來在床上打開筆電，回覆電子信箱，接著做早餐然後邊吃邊工作，
用完晚餐後，你又覺得好像得跟誰誰誰聯絡一下，可能不小心就從早上七點工作到晚上九點，
所以就算是遠距工作，上下班的時間也必須清楚，一來可以讓自己工作時更容易進入狀態及下班時就不要工作，
二來也是可以讓你的共事者知道何時是找得到你的時間。</p>

<p>而在空間上，在家也要區分出一個區塊是特地用來工作的，要工作就要到那邊去，
離開那裡你就是卸載，另外人體工學的基本需求也要好好滿足，
有張合適的工作桌、椅子螢幕等等設備，自己的健康自己要顧呀！</p>

<h1 id="結論">結論</h1>
<p>以上從這本書裡，就我比較有感覺的幾個點在這邊跟大家分享，書中還有許多其他的面向及觀點，
有興趣的朋友可以去找來看看唷～</p>

<p>未來我自己也可能會朝向這方向來調整我的工作模式，想嘗試看看<strong>數位遊牧</strong>的生活型態，
有後續動作及消息，再上來更新！掰掰～👋</p>]]></content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="books" /><category term="life style" /><category term="remote work" /><summary type="html"><![CDATA[為何要遠距工作？遠距工作有哪些好處？常見會遇到的問題有哪些？該如何解決， 不管是以雇主的角度還是以員工的角度，在這本書《遠距工作模式》裡都有提及。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/book-note-remote-work-1.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/book-note-remote-work-1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">如何在Mac OS中使用command line來將文字複製到剪貼簿</title><link href="https://homuchen.com/posts/mac-os-copy-to-clipboard-using-command-line/" rel="alternate" type="text/html" title="如何在Mac OS中使用command line來將文字複製到剪貼簿" /><published>2022-03-28T20:40:00+08:00</published><updated>2022-03-28T20:40:00+08:00</updated><id>https://homuchen.com/posts/mac-os-copy-to-clipboard-using-command-line</id><content type="html" xml:base="https://homuchen.com/posts/mac-os-copy-to-clipboard-using-command-line/"><![CDATA[<p>在Mac OS裡，該如何使用command line的指令來將你想要的資料複製到剪貼簿呢？
那就是可以透過<strong>pbcopy</strong>及<strong>pbpaste</strong>指令，也下為一些例子。</p>

<h1 id="複製">複製</h1>
<ul>
  <li>複製<code class="language-plaintext highlighter-rouge">123</code>
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">echo </span>123 | pbcopy
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>將<code class="language-plaintext highlighter-rouge">words.txt</code>檔案中的文字，複製到剪貼簿
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">cat </span>words.txt | pbcopy
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>或是</p>

    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>pbcopy &lt; words.txt
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<h1 id="貼上">貼上</h1>
<ul>
  <li>輸出至stdout
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>pbpaste
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>輸出到檔案裡
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>pbpaste <span class="o">&gt;</span> some.txt
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<p>雖然也可以用滑鼠把想複製的字選起來再按command + C，但有時候就是不想碰到滑鼠！我想這就是工程師的浪漫吧😎</p>]]></content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="command line" /><summary type="html"><![CDATA[在Mac OS裡，該如何使用command line的指令來將你想要的資料複製到剪貼簿呢？ 那就是可以透過pbcopy及pbpaste指令，也下為一些例子。]]></summary></entry><entry><title type="html">[讀書筆記] 做自己的生命設計師</title><link href="https://homuchen.com/posts/book-note-designing-your-life/" rel="alternate" type="text/html" title="[讀書筆記] 做自己的生命設計師" /><published>2022-03-23T22:30:00+08:00</published><updated>2022-04-18T11:05:00+08:00</updated><id>https://homuchen.com/posts/book-note-designing-your-life</id><content type="html" xml:base="https://homuchen.com/posts/book-note-designing-your-life/"><![CDATA[<p>我的生活該要怎麼度過呢？找不到喜歡感到熱情的事怎麼辦？對未來的職涯感到迷茫，
想要一份我喜歡的、我所熱愛的、最好是有意義，可以改變的世界的工作，該怎麼去進行呢？</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-4.jpg" alt="書: 做自己的生命設計師" /></p>

<p><a href="https://www.books.com.tw/products/0010733134" target="_blank"><strong>《做自己的生命設計師》</strong></a>這本書，就是來試著回答上述這些問題，
作者在史丹佛大學開設設計人生的課程，將設計思考的工具及心法，應用到你自己的人生當中，
讓我們開始學習如何做自己的生命設計師吧！</p>

<h1 id="設計思考是什麼">設計思考是什麼</h1>
<p>設計就是要來解決問題，首先先來看看問題有哪些種類吧！</p>

<h2 id="重力問題">重力問題</h2>
<p>我最近碰上了一個問題，每每我在騎腳踏車爬坡的時候，那個重力！對就是那個重力！
都會死死地把我往下拉，害我要花好大力氣才能登頂，該怎麼辦呢～</p>

<p>聽到這樣的問題，大家可能會覺得這人腦子有洞，怎麼會拘泥於這種問題呢？但事實上，
這種情況在現實生活中，卻可能是可見的，我們可以看看以下幾個例子：</p>

<ul>
  <li>在我的文化中，以詩人作為職業賺不了錢，我該怎麼辦呢？</li>
  <li>我想回學校讀書當醫生，但那要再花我5-7年的時間，等到可以開始當醫生時，我都40歲了，怎麼辦？</li>
</ul>

<p>以上稱為重力問題，因為是無法行動的問題，無法行動的問題就不是問題，
是一個context、一個場景，一個人生的現實面，我們無法或者是非常難去改變它，
必須接受它！並且別在這種問題上耗費太多的時間，大家可以思考一下，
自己有沒有被某種程度的重力問題所困住了呢？</p>

<h2 id="工程問題-vs-設計問題">工程問題 vs. 設計問題</h2>
<p><strong>工程問題</strong>是一個封閉的問題，有明確的目標，比如說如何使一座橋樑可以承重1000輛車子，
如何讓筆電螢幕轉軸可以轉10000萬不會壞。</p>

<p>而<strong>設計問題</strong>更加開放，事先對於解法別沒有任何的想像跟預設，例如如何使Mac筆電不用搭配滑鼠使用，
如何設計一台車，超級美，大家看了會想擁有</p>

<p>遊戲也有這樣類似的分類概念，封閉遊戲及開放遊戲，封閉的遊戲像是圍棋、籃球比賽、各種競技運動等等，
都是在一定的規則下，追求一個明確的目標；而開放遊戲像是Minecraft、伴家家酒等等，想怎麼玩就怎麼玩，
沒有一定對錯輸贏。</p>

<p>人生這個遊戲，就是一個開放式的遊戲，並沒有一個明確的目標，所以各種人生的結果都沒有對錯，也沒有好壞，
只怕你沒有去活出來！設計思考所針對的問題，就是這種開放問題。</p>

<h2 id="設計思考的心態">設計思考的心態</h2>
<ul>
  <li>
    <p><strong>好奇心:</strong> 像個寶寶一樣，帶著好齊心看世界，生活變成一種探索，充滿了各種可能性。</p>
  </li>
  <li>
    <p><strong>行動導向:</strong> 如果想知道自己想做什麼，坐在椅子上想破頭也沒用，去做就對了！多方嘗試，
打造原型，試著找出可以解決問題的方案。</p>
  </li>
  <li>
    <p><strong>重擬問題:</strong> 確認自己在解決的問題，是真的該解決的問題</p>
  </li>
  <li>
    <p><strong>一切都是過程:</strong> 別執著於目標，專注過程，隨機應變，可以放掉一開始的點子，
也可以放掉還不錯的點子，別害怕失敗，有時搞砸了，反而會發明出意想不到的驚人設計。</p>
  </li>
  <li>
    <p><strong>通力合作:</strong> 幾乎所以偉大的創作及產品，都是集眾人之力打造出來的</p>
  </li>
</ul>

<h1 id="設計人生的步驟">設計人生的步驟</h1>
<p>知道了我們該專注的問題種類、人生的本質，以及設計思考該擁有的心態之後，
接下來來看看具體一點的步驟可以怎麼做吧！</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/book-note-design-life-2.jpg" alt="設計人生的四個步驟" /></p>

<h1 id="衡量現況">衡量現況</h1>
<p>在我們朝向任何目標方現前進之前，首先我們得要知道自己在哪？
作者將人生分成四個面向，分別是<strong>健康</strong>、<strong>工作</strong>、<strong>娛樂</strong>、<strong>愛</strong>，
我們可以用幾句話描述這幾個領域的狀態並評分，為每個方面評分，
0-10分的話會給幾分，一張圖即能看出哪些方面OK，哪些不OK。</p>

<p>以下是作者自己在工作的方面的描述:</p>

<p>我在史丹佛大學任教，另外還從事私人顧問工作。我主持做自己的生命設計師工作坊，
並擔任社會則任新創公司VOZ的董事，我覺得工作方面的分數為9分!</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/book-note-design-life-3.jpg" alt="健康/工作/娛樂/愛的儀表板" /></p>

<p>一張圖可以提供判斷，只有自己知道，目前哪些地方OK與不OK，
在做完後面的練習、打造原型跟實驗的過程，會不斷地回頭評估衡量，
問自己幾個問題: 自己滿意目前四個領域的指標嗎？哪些地方需要採取行動？
找到了棘手問題嗎？它是不是重力問題？，總結來說，這個練習的目的就是要回答一個問題:</p>

<p><strong>最近過得如何？</strong></p>

<h1 id="確定方向">確定方向</h1>
<p>在茫茫人生的旅途中，知道了自己在哪裡之後，接下來就是要知道前進的方向了。
你有辦法回答: 最近有什麼目標？我在做什麼？一切有什麼目的？意義是什麼？
這類的問題嗎？</p>

<p>如果不行的話，那該要怎麼做，才能讓自己的人生方向稍微清楚一些呢？</p>

<h2 id="工作觀">工作觀</h2>
<p>首先要回答你的工作觀是什麼？不是你想做什麼樣的工作，而是你<strong>為什麼</strong>要工作？
如果不知道怎麼下手，可以從以下幾個問題切入：</p>
<ul>
  <li>什麼是好工作?</li>
  <li>工作跟個人、他人、社會有什麼關聯？</li>
  <li>工作跟金錢的關係是什麼？</li>
  <li>經歷、成長跟成就感跟工作的關聯呢？</li>
</ul>

<p>就算答案只是為了討生活、賺錢，這樣也沒有錯，在遠古時代，我們的祖先務農種田、打獵採集，
就也只是為了填飽肚子，可以生存下去而已。只不過在現在的時代裡，工作越來越多樣多元，
也佔據了我們人生中大部分的時間，如果他是一件你覺得好玩的事，或者是有意義的事！
那不是更棒嗎～</p>

<h2 id="人生觀">人生觀</h2>
<p>人生觀就是問: 人生的意義跟目的是什麼？真是個大哉問，
或許我們可以把問題簡化為哪些價值觀對你來說重要的，
體驗、成長、滿足、名利、個人成就、與家人、社區、世界的關係等等等…</p>

<p>大家可以google: list of values，就能看到洋洋灑灑的一堆，Loyalty、Spirituality、
Humility、Compassion、Honesty、Kindness、Integrity、Selflessness…</p>

<p>從中挑選一些你覺得重要的，作為你的人生信條，而這些價值觀也不是固定不變的，
或許在你經歷你的人生過程中，每個階段所重視的會不一樣，也隨著經驗越多，
會越來越清楚自己真正想要追求的是什麼？</p>

<h2 id="所做所為跟人生觀有無一致">所做所為跟人生觀有無一致</h2>
<p>常常工作觀、人生觀與所作所為的不一致，就是造成我們不快樂的原因，
比如說你是位非常重視環保、永續環境發展的人，結果你卻在一家塑化企業上班！</p>

<p>清楚了工作觀及人生觀之後，算是稍微比較知道人生該往哪個方向前進了，
不過也就是大概的方向而已，具體的路有千千百百條，該走哪條路呢？讓我們繼續探索下去吧！</p>

<h1 id="發想點子">發想點子</h1>
<p>該如何想出一些生活上或工作上可以嘗試的點子呢～</p>

<h2 id="從現在及過去生活中找">從現在及過去生活中找</h2>
<ul>
  <li><strong>記錄生活</strong>: 留心觀察生活中的每個事件
從中找出進入<strong>心流</strong>的時候，心流是什麼呢？就是一種全心投入的狀態，
注意不到周遭的事，以及會忘記時間的流逝<a href="#1">[1]</a></li>
  <li>觀察<strong>過去的經驗</strong>: 如果現在的生活真的沒什麼是你喜歡的，那可以回想過去的經驗中，
哪段時光是你覺得最棒的</li>
</ul>

<h2 id="卡住了怎麼辦">卡住了怎麼辦</h2>
<p>有可能你覺得你的人生就很無趣，無法現在或過去找出可能喜歡的事，
那就來瘋狂亂想吧～首先不要批判自己想到的任何點子，扼殺創意，先得出大量的點子再說！</p>

<blockquote>
  <p>必須先想出可能會喜歡什麼，才能知道真正會喜歡什麼</p>
</blockquote>

<h2 id="心智圖發想">心智圖發想</h2>
<p>利用心智圖，以一個詞彙為中心，想出三四個與之有關的詞彙，再對每個新詞彙重複進行一樣的動作，
得到三四層的字詞聯想，給自己一個時間限制快速做完，避免大腦的審查機制，以下是G先生做的練習:</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/book-note-design-life-4.jpg" alt="心智圖" /></p>

<p>最後，從最外層的字詞中挑選幾個組合起來，組成兩個可能的點子，從下面心智圖中，
或許G先生可以兼職帶領探索營隊，服務喜愛戶外活動的孩子？那不如在海灘上辦個<strong>海盜營隊</strong>。
或是調職到有海灘的分店！</p>

<h1 id="打造原型">打造原型</h1>
<p>有了方向跟計畫之後，接下來就是要要去實行了，那該怎麼去做呢？並不是一頭熱，
拋頭顱灑熱血，一股作氣地All-in下去，如果這樣做的話，會有什麼缺點呢?</p>

<p>比如說你想開咖啡廳，就直接租下店面、裝潢、買下設備、雇人、宣傳然後開始營業，
這樣可能會非常危險。能不能盈利生存下次是一回事，說不定做了幾個月之後你會發現，
其實你喜歡的是好喝的咖啡本身，或者是美美的咖啡廳裝潢，
但對於經營一間咖啡廳所要做的其他瑣事都感到非常厭煩，或許專心於製作咖啡當個咖啡師更適合，
或者是根本是想當室內設計師🤔</p>

<h2 id="原型prototyping">原型(prototyping)</h2>
<p>那該怎麼做呢？就是要打造原型，原型是什麼呢？原型是一個小型的、實驗性質的產品，
用來驗證想法或釐清需求，而在人生的道路上，原型就可以驗證自己的點子可不可行，
釐清到底是不是自己想要的需求，fail fast and fail forward。</p>

<h2 id="有哪些方法">有哪些方法？</h2>
<p>產品的原型，就是用小小的成本來打造，而人生想法的原型該要怎麼去進行呢？有以下幾種方法可以參考:</p>
<ul>
  <li>
    <p><strong>原型訪談</strong>:
在真正要做一件事之後，可以先跟已經在做那件的事的人聊聊，通過其他人的經驗及視角，
或許會得到一些新的想法，並且更加清楚現實的情況是不是跟自己幻想的一樣，
免得是自己腦補太多😂</p>
  </li>
  <li>
    <p><strong>原型體驗</strong>:
除了對話，再來就是身體力行，或許可以請朋友帶你體驗她上班一天的生活，
或著是無償提供自己的勞力一週，參與某些專案，或者是去實習三個月。</p>

    <p>在一開始開咖啡廳的例子中，可能可以先去咖啡廳打工看看，做做看各個面向的工作，
來確認自己是否真的喜歡那件事情。</p>
  </li>
  <li>
    <p><strong>腦力激盪</strong>:
有時有了長期計畫，卻想不出點子方法或原型來試試，可以腦力激盪來想想。找一群人3-6個，
如果可以是一起做奧德賽計畫的夥伴更好</p>
  </li>
</ul>

<h1 id="結論">結論</h1>
<p>好的人生不是用想的想出來的，也不是找出來的，並不會有個工作或是人生在那邊等著你去找到他，
找到之後，就像童話故事書裡的王子公主，在一起之後就從此幸福美滿。</p>

<p>也不用執著於《靈魂急轉彎》裡的Spark，覺得人生一定有那個一個使命，最適合你的事物在那等著你，
你一定要先知道那是什麼，才有辦法過人生。</p>

<p>人生有無限種可能，沒有任何一種好過另外一種，首先知道自己的工作觀及人生觀，決定了方向，
接著發想出各種可能、做出計畫，最後也是最重要的一步，就是真正地去做他！
在做的過程中，邊做邊修正，更加地了解自己。期許大家都能活出豐盛的人生～～🎉</p>

<p>延伸閱讀:</p>

<ul>
  <li><a href="/posts/self-improvement-books/" target="_blank"><strong>成功是什麼? 5本關於自我成長的推薦書單</strong></a></li>
</ul>

<h1 id="參考資料">參考資料</h1>
<ol>
  <li><a href="https://www.books.com.tw/products/0010816703" target="_blank" name="1"><strong>《心流: 高手都在研究的最優體驗心理學》</strong></a></li>
</ol>]]></content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="books" /><category term="life style" /><summary type="html"><![CDATA[我的生活該要怎麼度過呢？找不到喜歡感到熱情的事怎麼辦？對未來的職涯感到迷茫， 想要一份我喜歡的、我所熱愛的、最好是有意義，可以改變的世界的工作，該怎麼去進行呢？]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/book-note-design-life-2.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/book-note-design-life-2.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">成功是什麼? 5本關於自我成長的推薦書單</title><link href="https://homuchen.com/posts/self-improvement-books/" rel="alternate" type="text/html" title="成功是什麼? 5本關於自我成長的推薦書單" /><published>2022-03-22T22:30:00+08:00</published><updated>2022-03-22T22:30:00+08:00</updated><id>https://homuchen.com/posts/self-improvement-books</id><content type="html" xml:base="https://homuchen.com/posts/self-improvement-books/"><![CDATA[<p>人生該怎麼過? 成功是什麼? 我覺得就是從你現在的位置出發，到達你想要的生活，這樣就成功了。所以怎樣才算是成功，
對每個人而言都不一樣，因為每個人的目標不同，重視的核心價值觀也不同。</p>

<h1 id="邁向成功的公式">邁向成功的公式</h1>
<p>找到你目標，然後走到底，這樣就成功了，那要怎麼走到底呢?</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-0.jpg" alt="邁向成功的公式及書單" /></p>

<p>有了目標以後，每天你做出選擇，相對應地有一些行為，
但是最好將其變為習慣，否則將難以持之以恆，因為我們的意志力是有限的。
然後為了取得進步，不能每次都做一樣的事，必須踏出舒適圈才會有所改變，
並且知道有些成果是需要些時間才能顯現。</p>

<p>而在這過程中間有許多的曲折及困難，比如說做了幾天就半途而廢，找一堆理由藉口，
或是做了一陣子卻看不到成果就放棄了，也可能是一開始有進步，
但到了某個階段卻停滯不前了，不知道該如何更進一步，
不然就是你覺得好累，沒有力氣能量繼續，又或者是你根本不知道你的目標是什麼? 
該往哪裡前進? 也沒有動力前進。</p>

<p>在上述每個環節中卡關的，在這裡推薦相對應的書</p>
<ul>
  <li>
    <p>不想半途而廢: <a href="#原子習慣"><strong>原子習慣</strong></a></p>
  </li>
  <li>
    <p>著急看到成果: <a href="#複利效應"><strong>複利效應</strong></a></p>
  </li>
  <li>
    <p>停滯不前: <a href="#刻意練習"><strong>刻意練習</strong></a></p>
  </li>
  <li>
    <p>沒有力氣、覺得無趣: <a href="#一週工作四小時"><strong>一週工作四小時</strong></a></p>
  </li>
  <li>
    <p>找不到人生目標: <a href="#做自己的生命設計師"><strong>做自己的生命設計師</strong></a></p>
  </li>
</ul>

<h1 id="原子習慣"><a href="https://www.books.com.tw/products/0010822522" target="_blank"><strong>《原子習慣》</strong></a></h1>
<p>選擇很重要，但其實人生並沒有那麼多重大的選擇時刻，影響你這個人最多的，是組成你每天生活的習慣。</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-1.jpg" alt="書: 原子習慣" /></p>

<p>習慣佔據你人生的八、九成，試想一下每天醒來，躺在床上滑一下手機，
走去浴室刷牙洗臉，要不要吃早餐，早餐要吃什麼，通勤去上班的路上在做什麼，
工作時如何面對同事，面對事情是如何處理，下班了之後要做什麼，要去運動嗎?
還是回家躺在沙發上耍廢，該準時就寢嗎？還是東摸摸西摸摸又到了半夜了，
跟人聊天會抱怨最近發生的負面的事嗎？</p>

<p>上述說的這些事，你都不需要在當下耗費心思去做選擇，而是不假思索地反應出來，
但他們就是你現在會成為怎樣的人的根本原因，所以我們要致力於培養好的習慣、去除壞的習慣。</p>

<p>你可能也想這麼做，但就是時常失敗，這本書將系統化地分析習慣的基本原理及組成，簡單的說就是:</p>

<blockquote>
  <p><strong>提示 -&gt; 渴望 -&gt; 回應 -&gt; 獎賞</strong></p>
</blockquote>

<p>並且從各個面向提出可行動的方案及建議，幫助你過關斬將，培養新的習慣。</p>

<p>延伸閱讀:</p>
<ul>
  <li><a href="/posts/book-note-atomic-habits/" target="_blank"><strong>[讀書筆記] 原子習慣: 細微改變帶來巨大成就的實證法則</strong></a></li>
</ul>

<h2 id="你可以期待獲得什麼">你可以期待獲得什麼?</h2>
<ul>
  <li>了解習慣對人生的重要</li>
  <li>系統化地分析習慣是如何形成的</li>
  <li>該要如何養成好習慣</li>
  <li>該要如何去除壞習慣</li>
</ul>

<h1 id="複利效應"><a href="https://www.books.com.tw/products/0010814286" target="_blank"><strong>《複利效應》</strong></a></h1>
<p>每天微小的改變並不亦察覺，經過時間的累積卻會產生巨大的影響。</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-2.jpg" alt="書: 複利效應" /></p>

<p>或許大家都聽過複利效應，應該通常是在財務儲蓄領域上，但這概念可以應用在生活的各個面向上，
我們每天做的事，影響可能很小，多吃一片洋芋片、多抽一根菸、晚上熬夜少睡一個小時，造成的影響幾乎無法察覺，
但經過時間的累積，改變就會很巨大，這跟上面的原子習慣是相呼應的。</p>

<h2 id="你可以期待獲得什麼-1">你可以期待獲得什麼?</h2>
<ul>
  <li>了解複利效應是什麼? 並且適用於人生各個方面</li>
  <li>認清世上沒有魔法，唯有努力才有回報</li>
  <li>努力的方向要對，如何加速看到成果</li>
</ul>

<h1 id="刻意練習"><a href="https://www.books.com.tw/products/0010752714" target="_blank"><strong>《刻意練習》</strong></a></h1>
<blockquote>
  <p>透過刻意練習，善用大腦和身體的適應力，每個人都能改善技能，甚至創造出你本來以為自己沒有的能力，達到顛峰表現。</p>
</blockquote>

<p><img src="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-3.jpg" alt="書: 刻意練習" /></p>

<p>如何在某個領域邁向頂尖、擁有高手級的表現，只要一直一直不斷地做、不斷地練習就好了嗎？</p>

<p>其實光是這樣是不夠的，比如說你已經會開車，然後你每天開了好幾個小時的車，但你卻不會因此變成舒馬赫，
辛苦的媽媽每天煮三餐，但卻不會因此成為超級大廚。那該要如何<strong>刻意練習</strong>來持續取得進步呢？</p>

<p>這邊簡單地說就是針對你想進步的目標，進行<strong>突破目前極限</strong>的練習，目標必須<strong>明確</strong>，
而且可以<strong>量測</strong>或獲得<strong>回饋</strong>，知道自己確實有在進步並進行修正。</p>

<h2 id="你可以期待獲得什麼-2">你可以期待獲得什麼?</h2>
<ul>
  <li>知道大腦是具可塑性的，如何學習及改變</li>
  <li>持續取得進步的要素的什麼？ 並不是一萬個小時就好</li>
</ul>

<h1 id="一週工作四小時"><a href="https://www.books.com.tw/products/0010621037" target="_blank"><strong>《一週工作四小時》</strong></a></h1>
<p>誰說一週要工作四十小時，朝九晚五地待在辦公室，打破社會框架，有錢有閒地實現自己的夢想</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/four-hour-work-week-0.jpg" alt="書: 一週工作四小時" /></p>

<p>人們總說等我賺夠了錢我就要怎樣怎樣，等我退休了我就要去做什麼，那何不現在就開始呢？！</p>

<p>追求夢想、做自己的興趣及想做的事，不用等到退休，作者提出<strong>迷你退休</strong>的概念，
將大把退休時光平均分散在一生當中，不要盲目地工作、追逐金錢，只將目標放在提早退休上，
而是開始漸漸地擺脫不想做的工作，擁抱自由及機動性，開始重拾各種興趣、嘗試你的夢想，
否則等到退休那天，你可能也會茫茫然不知道要幹嘛，因為一直以來，從沒有停下來好好思考過。</p>

<p>延伸閱讀:</p>
<ul>
  <li><a href="/posts/book-note-the-four-hour-work-week/" target="_blank"><strong>[讀書筆記] 一週工作4小時: 擺脫朝九晚五的窮忙生活，晉身「新富族」！</strong></a></li>
  <li><a href="/posts/book-note-the-power-of-full-engagement/" target="_blank"><strong>[讀書筆記] 用對能量，你就不會累</strong></a></li>
</ul>

<h2 id="你可以期待獲得什麼-3">你可以期待獲得什麼?</h2>
<ul>
  <li>認識新富族: 不再朝九晚五待在辦公室工作，擁抱自由及機動性的族群</li>
  <li>除去大部分非必要且會花費你時間的事，擁抱更多的自由</li>
  <li>打造自動進帳的事業</li>
  <li>看看作者的有趣的經歷及如何達成上述目標</li>
</ul>

<h1 id="做自己的生命設計師"><a href="https://www.books.com.tw/products/0010733134" target="_blank"><strong>《做自己的生命設計師》</strong></a></h1>
<p>透過打造原型、進行實驗，發想繼而嘗試人生各種可能，才能找到熱情</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-4.jpg" alt="書: 做自己的生命設計師" /></p>

<p>不知道自己的人生要做什麼嗎？第一步就是要去想，隨意的發想，如果你連想都沒想過的話一件事，
你不可能會在你的人生中去做那件事，甚至去喜歡他，所以第一步就是發揮想像力，無所限制地記錄下所以可能會喜歡的想法。</p>

<p>接著要針對那些想法，打造原型去實驗，什麼是原型呢？在產品設計的領域裡，
就是用來驗證設計的產品是否適切，有無欠考量或未發現的盲點，必要時在正式生產前加以更正。</p>

<p>而在人生領域中，就是去稍微體驗你想做的事，而不用100%一下子就All in，比如說你喜歡喝咖啡，想開間咖啡廳，
那你不應該是馬上辭職，準備個幾百萬就開始要開店，而是可以先透過蒐集資訊、訪談好幾位咖啡店店長、去打工、
或是做一下咖啡廳裡各個職位的工作，來測試自己有沒有盲點，到底是不是真的喜歡這件事。</p>

<h2 id="你可以期待獲得什麼-4">你可以期待獲得什麼?</h2>
<ul>
  <li>人生迷惘怎麼辦</li>
  <li>該如何去發想，找出可能會喜歡的事</li>
  <li>該如何打造原型，去測試自己的新的人生</li>
</ul>

<p>延伸閱讀:</p>
<ul>
  <li><a href="/posts/book-note-designing-your-life/" target="_blank"><strong>[讀書筆記] 做自己的生命設計師</strong></a></li>
</ul>

<h1 id="summary">Summary</h1>
<p>感謝你看到這邊～ 希望這些內容能帶給你一點啟發，我也是閱讀這些書過後，學習到了許多及產生很多新的想法，
但更重要的是將其實踐在生活當中，首先先透過書寫分享，讓自己複習一遍，
之後有更多親身實驗的結果，會在跟大家分享! 掰掰～👋</p>]]></content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="books" /><category term="self improvement" /><summary type="html"><![CDATA[人生感到迷惘嗎？找不到目標，或是無法堅持培養好習慣嗎？該如何在各方面取得實際進步? 這篇文章將推薦五本自我成長的書單，期望能幫助大家過上想過的生活。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-0.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/self-improvement-books-0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">[Golang] 4種發起HTTP請求的方式</title><link href="https://homuchen.com/posts/golang-how-to-make-http-requests/" rel="alternate" type="text/html" title="[Golang] 4種發起HTTP請求的方式" /><published>2022-03-18T11:00:00+08:00</published><updated>2022-03-18T11:00:00+08:00</updated><id>https://homuchen.com/posts/golang-how-to-make-http-requests</id><content type="html" xml:base="https://homuchen.com/posts/golang-how-to-make-http-requests/"><![CDATA[<p>這篇文章將介紹如何使用golang作為http client，來發起http request，將介紹以下4種做法:</p>
<ul>
  <li>http.Get</li>
  <li>http.Post</li>
  <li>http.PostForm</li>
  <li>http.NewRequest</li>
</ul>

<p>一個HTTP Request message不外乎就是<strong>method</strong>、<strong>url</strong>、<strong>headers</strong>跟<strong>body</strong>，如果對於HTTP message還不熟悉的，
可以看我之前寫過的文章:</p>

<p><a href="/posts/http-introduction-telnet-nc-curl" target="_blank"><strong>HTTP 簡介，以及使用telnet、nc、curl等指令來探索</strong></a></p>

<h1 id="httpget">http.Get</h1>
<p><code class="language-plaintext highlighter-rouge">func Get(url string) (resp *Response, err error)</code></p>

<p>參數為一個url，沒有headers，也沒有body，就是這麼簡單，如果想要客制化自己的header，就必須使用後面的<code class="language-plaintext highlighter-rouge">http.NewRequest</code>。</p>

<h1 id="httppost">http.Post</h1>
<p><code class="language-plaintext highlighter-rouge">func Post(url, contentType string, body io.Reader) (resp *Response, err error)</code></p>

<p>參數為url, contentType及body，headers的部分，除了Content-Type之外的，也無法自己自訂，而body是一個io.Reader，
以下是一個<code class="language-plaintext highlighter-rouge">Content-Type</code>為<code class="language-plaintext highlighter-rouge">appplication/json</code>的例子:</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">jsonString</span> <span class="o">:=</span> <span class="s">`{"email": "test@homuchen.com", "name": "homuchen"}`</span>
<span class="n">http</span><span class="o">.</span><span class="n">Post</span><span class="p">(</span><span class="s">"http://localhost:5000/api/users"</span><span class="p">,</span> <span class="s">"application/json"</span><span class="p">,</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewReader</span><span class="p">([]</span><span class="kt">byte</span><span class="p">(</span><span class="n">jsonString</span><span class="p">)))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>伺服器端將會收到以下的HTTP message:</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>POST /api/users HTTP/1.1
Host: localhost:5000
User-Agent: Go-http-client/1.1
Content-Length: 27
Content-Type: application/json
Accept-Encoding: gzip

{"email": "test@gmail.com"}
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="httppostform">http.PostForm</h1>
<p><code class="language-plaintext highlighter-rouge">func PostForm(url string, data url.Values) (resp *Response, err error)</code></p>

<p>Header <code class="language-plaintext highlighter-rouge">Content-Type</code>會被自動設為<code class="language-plaintext highlighter-rouge">application/x-www-form-urlencoded</code>，body是使用<code class="language-plaintext highlighter-rouge">url.Values</code>來傳遞，
以下為一個範例:</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="c">//直接使用字串</span>
<span class="n">qs</span><span class="p">,</span> <span class="n">_</span> <span class="o">:=</span> <span class="n">url</span><span class="o">.</span><span class="n">ParseQuery</span><span class="p">(</span><span class="s">"email=test@homuchen.com&amp;name=homuchen"</span><span class="p">)</span>
<span class="n">http</span><span class="o">.</span><span class="n">PostForm</span><span class="p">(</span><span class="s">"http://localhost:5000/api/users"</span><span class="p">,</span> <span class="n">qs</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="c">//使用map</span>
<span class="n">v</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">)</span>
<span class="n">v</span><span class="p">[</span><span class="s">"email"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"test@homuchen.com"</span><span class="p">}</span>
<span class="n">v</span><span class="p">[</span><span class="s">"name"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"homuchen"</span><span class="p">}</span>

<span class="n">qs</span> <span class="o">:=</span> <span class="n">url</span><span class="o">.</span><span class="n">Values</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
<span class="n">http</span><span class="o">.</span><span class="n">PostForm</span><span class="p">(</span><span class="s">"http://localhost:5000/api/users"</span><span class="p">,</span> <span class="n">qs</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>以上兩個Reqeust，都會產上下列一樣的HTTP message:</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>POST /api/users HTTP/1.1
Host: localhost:5000
User-Agent: Go-http-client/1.1
Content-Length: 39
Content-Type: application/x-www-form-urlencoded
Accept-Encoding: gzip

email=test%40homuchen.com&amp;name=homuchen
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="httpnewrequest">http.NewRequest</h1>
<p><code class="language-plaintext highlighter-rouge">func NewRequest(method, url string, body io.Reader) (*Request, error)</code></p>

<p>如果想要客制自己的headers就必須使用<code class="language-plaintext highlighter-rouge">NewRequest</code>拉，方法如下:</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span> <span class="s">"http://localhost:5000"</span><span class="p">,</span> <span class="no">nil</span><span class="p">)</span>
<span class="n">req</span><span class="o">.</span><span class="n">Header</span><span class="o">.</span><span class="n">Add</span><span class="p">(</span><span class="s">"Content-Type"</span><span class="p">,</span> <span class="s">"application/json"</span><span class="p">)</span>
<span class="n">req</span><span class="o">.</span><span class="n">Header</span><span class="o">.</span><span class="n">Add</span><span class="p">(</span><span class="s">"Accept-Language"</span><span class="p">,</span> <span class="s">"en-us"</span><span class="p">)</span>
<span class="n">req</span><span class="o">.</span><span class="n">Header</span><span class="o">.</span><span class="n">Add</span><span class="p">(</span><span class="s">"X-Some-Custom-Header"</span><span class="p">,</span> <span class="s">"foo bar"</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>最後要發起HTTP請求，則要使用<code class="language-plaintext highlighter-rouge">http.Client</code>的<code class="language-plaintext highlighter-rouge">Do</code>method，以下使用<code class="language-plaintext highlighter-rouge">http.DefaultClient</code>作為<code class="language-plaintext highlighter-rouge">http.Client</code>，
至於要如何使用自己的http.Client就不在此多說拉～</p>
<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">jsonString</span> <span class="o">:=</span> <span class="s">`{"email": "test@homuchen.com", "name": "homuchen"}`</span>
<span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span> <span class="s">"http://localhost:5000/api/users"</span><span class="p">,</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewReader</span><span class="p">([]</span><span class="kt">byte</span><span class="p">(</span><span class="n">jsonString</span><span class="p">)))</span>
<span class="n">req</span><span class="o">.</span><span class="n">Header</span><span class="o">.</span><span class="n">Add</span><span class="p">(</span><span class="s">"Content-Type"</span><span class="p">,</span> <span class="s">"application/json"</span><span class="p">)</span>

<span class="n">res</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">DefaultClient</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>如此一來就會發送出一個跟前面例子一樣的HTTP Request</p>

<h1 id="summary">Summary</h1>
<p>今天介紹了四種發起HTTP Request的方法，前面三種的彈性比較低但比較方便，有固定的method及content-type，無法隨意更改及加減。</p>

<p>而其實<code class="language-plaintext highlighter-rouge">http.Get</code>就是<code class="language-plaintext highlighter-rouge">http.Client</code>的<code class="language-plaintext highlighter-rouge">Get</code>method，<code class="language-plaintext highlighter-rouge">http.Post</code>為<code class="language-plaintext highlighter-rouge">http.Client</code>的<code class="language-plaintext highlighter-rouge">Post</code>method，
<code class="language-plaintext highlighter-rouge">http.PostForm</code>是<code class="language-plaintext highlighter-rouge">http.Client</code>的<code class="language-plaintext highlighter-rouge">PostForm</code>method。</p>

<p>最後如果想要加上自己更多的header，就要使用<code class="language-plaintext highlighter-rouge">http.NewRequest</code>，這邊簡單地記錄下使用golang作為http client最基礎的用法，
希望有幫助到任何人，掰掰～👋</p>]]></content><author><name>HoMuChen</name></author><category term="Web Development" /><category term="golang" /><category term="http" /><summary type="html"><![CDATA[這篇文章將介紹如何使用golang作為http client，來發起http request，將介紹以下4種做法: http.Get http.Post http.PostForm http.NewRequest]]></summary></entry><entry><title type="html">動機: 到底是什麼在驅動、引導我們的行為？</title><link href="https://homuchen.com/posts/motivation-what-motivates-us/" rel="alternate" type="text/html" title="動機: 到底是什麼在驅動、引導我們的行為？" /><published>2022-03-13T23:05:00+08:00</published><updated>2022-03-13T23:05:00+08:00</updated><id>https://homuchen.com/posts/motivation-what-motivates-us</id><content type="html" xml:base="https://homuchen.com/posts/motivation-what-motivates-us/"><![CDATA[<p>我們每天都有許多的行為，不論是認真學習新技能、努力工作、躺在沙發耍廢看劇吃著垃圾食物、
出門跟朋友去露營、做志工等等等…
背後都有一股力量在驅動著我們，那股力量就是<strong>獎賞</strong>及<strong>懲罰</strong>，
我們會為了追求某些獎賞或是避免某些懲罰而去做出某些行為。</p>

<p>但有些實驗卻發現，有時就算是沒有任何獎賞或是懲罰，我們也會想做某些事，甚至有時有了獎賞，
反而還會減少我們的動力！</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/motivation-00.jpg" alt="動機的分類" /></p>

<p>今天將從以下幾個面向，來分析驅動著我們行為的那股力量，看看獎賞懲罰系統有哪些組成，
除此之外還有哪些力量在驅動著我們，最後從腦神經科學的角度來看這一切：</p>
<ul>
  <li>獎賞及懲罰: 生理面</li>
  <li>獎賞及懲罰: 社會面</li>
  <li>獎賞之外的動機</li>
  <li>有獎賞反而表現更差</li>
  <li>什麼時候外部的動機是有用的？</li>
  <li>內部動機: 自主性、專精及意義</li>
</ul>

<h1 id="生理面的獎賞">生理面的獎賞</h1>
<p>首先是生理的、本能的、為了生存的，也是最顯而易見的一種動機。
我們餓了就會去找東西吃；口渴了就會去喝水；為了生存下去，食物、水、空氣、陽光、性等等等都是必須的。
我們的身體被打造成一但基本需求無法滿足，我們就會產生強烈的渴望去做這些事情。</p>

<p>但這就是全部的我們嗎？絕對不是！沒有人會說驅動我們所有行為的都是這類動機，這樣我們跟動物有什麼不一樣呢？</p>

<h1 id="社會面的獎賞及懲罰">社會面的獎賞及懲罰</h1>
<p>而獎賞及懲罰的另外一面是社會性的，我們努力讀書是為了考高分，或是得到父母的稱讚、
會為了獲得一份好工作而努力，因為期待有著更多的收入，這類動機不單純是為了生存的，我們不做這些也不會死，
可以軟爛地茶來張口、飯來伸手、不求上進地在原本職務上完成本分就好。</p>

<p>為什麼我們會想賺更多錢，除了提供更好的生活品質之外(生理的)，賺更多錢也可能代表者更有能力，
社會地位較高，大家對你的評價會是有能力的，可靠的，這些就是社會性的獎賞。</p>

<p>另外我們還會避免社會處罰，比如說不想被大家說閒話，所以我們表現的行為得符合社會期待、
合乎社會規範，因此必須抑制上述所說的第一種動機，不能因為我們餓了，我就去吃別人的食物；
不能因為我想做愛，就隨便在路上強暴別人。做這樣的行為在法律上、社會上是會有處罰的，
因為這種為了在社會裡生存的動機，規範了我們的行為。</p>

<h1 id="獎賞之外的動機">獎賞之外的動機</h1>
<p>在過去幾百年來，我們都是在這樣的想法下生活，但我們想要激勵自己或是別人去做某些行為時，
我們的做法通常都是威脅利誘，但這就是全部了嗎？</p>

<h2 id="猴子解謎遊戲">猴子解謎遊戲</h2>
<p>讓我們來看看幾個實驗，在很久很久以前，有個人在猴子做了身上做了個實驗，
把他們跟一個解謎遊戲放在一起，沒有任何訓練跟獎賞，
結果發現猴子就是會自己去玩、去解決那個問題(將下圖的裝置從左圖變成右圖)，
並且變得越來越熟練</p>

<p>這就引出了一個問題，即使沒有生存上的需要，也沒有外部的獎賞及處罰，
還是有一個驅力在驅動著猴子的行為，那這股力量這到底是什麼呢?</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/motivation-01.jpg" alt="給猴子的解謎遊戲" /></p>

<p>有時我們就是會在沒有外部獎勵的時候去做一些事情，純粹就是為了好玩、樂趣、好奇、挑戰、成就及滿足。</p>

<h1 id="有獎賞反而表現更差">有獎賞反而表現更差</h1>
<p>常常我們希望提供獎勵、誘因來鼓勵一些行為，但有時卻會識得其反！提供了獎勵之後，
反而讓人之後更不會去從事某些行為。</p>

<p>讓我們來看看以下這一個實驗:</p>

<p>首先實驗人員先去幼兒園觀察一群孩子，看看他們自由的下課時間都會做些什麼，結果發現有一群小孩都會畫畫，
他們就把那一群小孩挑出來，作為實驗對象。</p>

<p>實驗如此進行，將他們分為3組，第一組告訴他們畫畫的話，就給你們獎勵唷～～ 於是他們開始畫，畫完之後給獎勵；第二組則是放他們自己去玩，
結束後，如果有畫畫的就一樣給獎勵；第三組則是什麼事都沒干預。因為他們原本就就都愛畫畫，所以就都有畫，拿到相對應的獎勵後就放他們回去，
然後繼續觀察他們的行為。</p>

<p>結果發現！第一組的小孩畫的變少了！！而第二及第三組都沒有變，所以差別是什麼呢？
並不是有無獎勵與否，而是有沒有如果怎樣就給你什麼的這種獎勵，
當小孩為了得到獎勵才去畫畫時，這樣的外部獎勵反而削弱了原本純粹的動機…</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/motivation-02.jpg" alt="小孩畫畫獎勵實驗" /></p>

<h1 id="內部動機有哪些">內部動機有哪些</h1>
<p>所以除了外部的誘因獎賞之外，我們可能純粹為了好玩、樂趣、好奇、挑戰、
成就及滿足等等的內部的動機去做一些事情，這裡將簡單地把內部動機做一個分類，
分成三類，分別為: <strong>自主性</strong>、<strong>熟練</strong>及 <strong>意義</strong>。</p>

<h2 id="自主性autonomy">自主性(Autonomy)</h2>
<p>不知道大家有沒有這樣的經驗，自己本來會去做好的事，一旦媽媽碎念叫你去做那一件事，
你就反而肚爛不想做了😂</p>

<p>我們人就是不喜歡被操控被命令，相較於被命令的行動，我們對於基於我們自主意志而採取的行動更有動力去做，
當員工不在被監督，可以用自己的喜歡的方式，在自己喜歡的時間、地點工作時，會更具有生產力。</p>

<p>Google的20%時間，就是給員工20%的工作時間，讓他們自己自己決定要做怎樣的project，
結果是許多的產品及服務都是在這些時間裡誕生出來的，像是Adsense、Gmail、Google News等等…</p>

<h2 id="熟練matery">熟練(Matery)</h2>
<p>有時玩遊戲，贏了也不會得到什麼獎勵，但我們就是會想要破關，不斷地一直去練習他熟練他，
或許我們天生就是喜歡去精進一些能力。</p>

<p>有份論文，調查訪談了幾百位開源軟體的程式開發人員，到底是什麼因素，
使得他們願意無償地為這些專案付出時間及勞力，結果發現，在有薪及無薪的開發人員中，
他們為什麼投入開源專案開發的原因，有顯著差異的部分就是<strong>為了增進寫程式的技能</strong><a href="#1">[1]</a>。</p>

<h2 id="意義meaningpurpose">意義(Meaning、Purpose)</h2>
<p>意義對每個人來說都是不一樣的，找到一份比你自身更大的事物，歸屬於此並擁有使命感，能帶來很大的動力。</p>

<p>有人可能致力於地球環境保育、永續能源，有人可能關心下一代的教育、或者是老人家的照顧需求、
性別平權、勞工權益等等的議題，而加入各式各樣的機構，與目標理念一致的人一起努力奮鬥是很棒的一件事。</p>

<p>但大部分的人，可能不知道自己的使命，甚至是說人生的意義，這也沒關係！我自己也是還不知道這部分的答案，
或許我們還在探索的階段，現在能做的，可能就像是<a href="https://www.books.com.tw/products/0010733134"><strong>《做自己的生命設計師</strong>》</a>說的，
首先先幻想！接著挑幾個想法來打造原型實驗看看，唯有試過做過之後，才能對於自己想要的人生有更清楚的描繪及方向。</p>

<h1 id="總結">總結</h1>
<p>外部的獎賞及處罰，確實會驅動我們的行為，但我們並不全然是這樣的行動的，甚至有些時候，
還會反過來損害我們的動機，以上是來自<a href="https://www.books.com.tw/products/0010476180"><strong>《動機，單純的力量》</strong></a>一書的部分簡單摘要。</p>

<p><img src="https://storage.googleapis.com/homuchen.com/images/motivation-03.jpg" alt="動機，單純的力量" /></p>

<h1 id="參考資料">參考資料</h1>
<ol>
  <li><a href="https://ocw.mit.edu/courses/sloan-school-of-management/15-352-managing-innovation-emerging-trends-spring-2005/readings/lakhaniwolf.pdf" target="_blank" name="1">Why Hackers Do What They Do: Understanding Motivation and Effort in Free/Open Source Software Projects</a></li>
</ol>]]></content><author><name>HoMuChen</name></author><category term="讀書筆記" /><category term="self improvement" /><category term="psychology" /><category term="books" /><summary type="html"><![CDATA[有哪些力量驅動著我們每天的行為，做事情的動力到底來自何處，是獎賞或是處罰嗎？ 利誘小孩子來引導他們做我們希望他做的行為是對的嗎?]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://storage.googleapis.com/homuchen.com/images/motivation-00.jpg" /><media:content medium="image" url="https://storage.googleapis.com/homuchen.com/images/motivation-00.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>